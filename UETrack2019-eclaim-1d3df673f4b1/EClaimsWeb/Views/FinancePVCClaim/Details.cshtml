@model EClaimsWeb.Models.PVCClaimDetailVM
@{
    var error = TempData["Error"] as string;
    ViewData["Title"] = "View PVCs ";
    int Counter = 1;
}
@section Styles{
    <environment names="Development">
        <link rel="stylesheet" href="~/css/select2.min.css" asp-append-version="true">
        <link rel="stylesheet" href="~/css/select2-bootstrap.min.css" asp-append-version="true">
    </environment>

    <environment names="Staging,Production">
        <link rel="stylesheet" href="~/css/select2.min.css" asp-append-version="true">
        <link rel="stylesheet" href="~/css/select2-bootstrap.min.css" asp-append-version="true">
    </environment>
    <style>
        .HideBubble {
            display: none;
        }
    </style>
}
<div class="col-md-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="mb-0 font-weight-bold">PV-Cheque Claim Details</h4>
            <div class="col-md-12 summary-actions">
                <div class="text-align-right mb-4">
                    @if (Model.PVCClaimVM.IsActionAllowed == true)
                    {
                        @if (@TempData["ApprovedStatus"].ToString() == "1")
                        {
                            <button type="button" class="btn btn-primary btn-icon-text" onclick="verifyConfirm()">
                                Verify
                                <i class="mdi mdi-pencil-box-outline btn-icon-append"></i>
                            </button>
                        }
                        @if (@TempData["ApprovedStatus"].ToString() == "2")
                        {
                            <button type="button" class="btn btn-primary btn-icon-text" onclick="approvedConfirm()">
                                Approve
                                <i class="mdi mdi-pencil-box-outline btn-icon-append"></i>
                            </button>
                        }
                        @if (@TempData["ApprovedStatus"].ToString() == "1" || @TempData["ApprovedStatus"].ToString() == "2")
                        {
                            <button type="button" class="btn btn-danger btn-icon-text" onclick="rejectConfirm()">
                                Request to Amend
                                <i class="mdi mdi-pencil-box-outline btn-icon-append"></i>
                            </button>
                        }
                    }

                        @if (@ViewBag.ShowVoidBtn == 1)
                        {
                            <button type="button" class="btn btn-danger btn-icon-text" onclick="voidConfirm()" id="btnVoid">
                                @ViewBag.ShowVoidText
                                <i class="mdi mdi-pencil-box-outline btn-icon-append"></i>
                            </button>
                        }
                        <button type="button" class="btn btn-info btn-icon-text d-none">
                            Amend
                            <i class="mdi mdi-pencil-box-outline btn-icon-append"></i>
                        </button>
                        <button type="button" class="btn btn-secondary btn-icon-text" onclick="Print_button();">
                            Print
                            <i class="mdi mdi-printer btn-icon-append"></i>
                        </button>
                        <button type="button" class="btn btn-secondary btn-icon-text" onclick="RedirectView();">
                            Close
                            <i class="mdi btn-icon-append"></i>
                        </button>
                    </div>
            </div>
            <div class="row">
                <h5 class="col-md-12 card-title">Basic Info</h5>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Company</th>
                            <th>Department</th>
                            <th>Facility</th>
                            <th>Date</th>
                            <th>Voucher No</th>
                            <th>Claim #</th>
                            @*<th>Account Code</th>*@
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><label id="lblName">@Model.PVCClaimVM.Name</label></td>
                            <td><label id="lblCompany">@Model.PVCClaimVM.Company</label></td>
                            <td><label id="lblDepartment">@Model.PVCClaimVM.DepartmentName</label></td>
                            <td><label id="lblFacility">@Model.PVCClaimVM.FacilityName</label></td>
                            <td><label id="lblCurrentDate">@Model.PVCClaimVM.CreatedDate</label>
                            <td><label id="lblVoucherNo">@Model.PVCClaimVM.VoucherNo</label></td>
                            <td><label id="lblECClaimNo">@Model.PVCClaimVM.PVCCNo</label></td>
                            @*<td class="tableAccountCode">
                        000111-50001-0040000
                        </td>*@
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="row mt-4">
                <h5 class="col-md-12 card-title table-summary">Particulars Of Payment</h5>
                <div class="col-md-12">
                    <div class="table-responsive">
                        <table id="order-listing1" class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Item #</th>
                                    <th>Payee Name</th>
                                    <th>Facility</th>
                                    <th>Particulars of payment</th>
                                    <th>Cheque No</th>
                                    <th>Invoice no</th>
                                    <th>Expense Category</th>
                                    <th>Amount</th>
                                    <th>GST Percentage</th>
                                    <th>GST</th>
                                    <th>Total Amount With GST</th>
                                    <th>Account Code</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.DtPVCClaimVMs)
                                {
                                    <tr>
                                        <td>@Counter</td>
                                        <td>@item.Payee</td>
                                        <td>@item.Facility</td>    
                                        <td>@item.Particulars</td>
                                        <td>@item.ChequeNo</td>
                                        <td>@item.InvoiceNo</td>
                                        <td>@item.ExpenseCategory</td>
                                        <td class="text-align-right">$@Math.Round((decimal)item.Amount, (int)2).ToString("###,##,##0.00")</td>
                                        <td class="text-align-right">
                                            <select disabled id="dllGST" name="dllGST" onchange="Calculation()" class="form-control form-control-sm" style="width: 75px !important;text-align:center !important; margin-bottom:10px;">
                                                <option value="0">
                                                    Select
                                                </option>
                                                @{
                                                    // For new records
                                                    if (item.GST == 0 && item.PVCCID == 0)
                                                    {
                                                        foreach (var items in ViewBag.dllGST)
                                                        {
                                                            if (items.Selected)
                                                            {
                                                                <option value="@items.Value" selected="selected">
                                                                    @items.Text
                                                                </option>
                                                            }
                                                            else
                                                            {
                                                                <option value="@items.Value">
                                                                    @items.Text
                                                                </option>
                                                            }
                                                        }
                                                    }
                                                    // For amendment / recreate
                                                    else
                                                    {
                                                        foreach (var items in ViewBag.dllGST)
                                                        {
                                                            if (item.GSTPercentage.ToString() == items.Value)
                                                            {
                                                                <option value="@items.Value" selected="selected">
                                                                    @items.Text
                                                                </option>
                                                            }
                                                            else
                                                            {
                                                                <option value="@items.Value">
                                                                    @items.Text
                                                                </option>
                                                            }
                                                        }
                                                    }
                                                }
                                            </select>
                                        </td>
                                        <td class="text-align-right">$@Math.Round((decimal)item.GST, (int)2).ToString("###,##,##0.00")</td>
                                        <td class="text-align-right">$@Math.Round((decimal)item.AmountWithGST, (int)2).ToString("###,##,##0.00")</td>
                                        <td class="tableAccountCode">@item.AccountCode</td>
                                    </tr>
                                    Counter++;
                                }
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <th>Grand Total</th>
                                        <td class="text-align-right">$@Math.Round((decimal)@Model.PVCClaimVM.GrandTotal, (int)3).ToString("#,##0.00")</td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <th>Grand GST</th>
                                        <td class="text-align-right">$@Math.Round((decimal)@Model.PVCClaimVM.GrandGST, (int)3).ToString("#,##0.00")</td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <th>Total Amount with GST</th>
                                        <td class="text-align-right">$@Math.Round((decimal)@Model.PVCClaimVM.TotalAmount, (int)3).ToString("#,##0.00")</td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="template-demo mt-4">
                <div class="row">
                    <label class="col-4 col-lg-2 col-form-label">Attachments:</label>
                    <div class="">
                        @foreach (var itemFile in Model.PVCClaimFileUploads)
                        {
                            <div>
                                <label class="form-group">
                                    <span class="text-lg-left">@itemFile.FileName</span>
                                    <a href="@Url.Action("DownloadView", "FinancePVCClaim", new { id = @itemFile.FilePath, name = @itemFile.FileName })" target="_blank" class="btn btn-secondary btn-icon-text">View</a>
                                    <a href="@Url.Action("Download", "FinancePVCClaim", new { id = @itemFile.FilePath, name = @itemFile.FileName })" class="btn btn-secondary btn-icon-text">Download</a>
                                </label>
                            </div>
                            <br />
                        }
                    </div>
                </div>
            </div>
            <div id="ShowSummary">
                <div class="row mt-4">
                    <h5 class="col-md-12 card-title table-summary">
                        Summary of Accounts Allocation
                        <button type="button" class="btn btn-primary btn-icon-text" onclick="ShowEditSummary()">
                            Edit
                            <i class="mdi mdi-pencil-box-outline btn-icon-append"></i>
                        </button>
                    </h5>

                    <div class="col-md-11">
                        <div class="table-responsive">
                            <table id="order-listing3" class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Account Code</th>
                                        <th>Facility</th>
                                        <th>Expense Type</th>
                                        <th>Description</th>
                                        <th>Tax Class</th>
                                        <th>Amount (Excluding GST)</th>
                                        <th>GST Percentage</th>
                                        <th>GST</th>
                                        <th>Amount (Including GST)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.DtPVCClaimSummaries)
                                    {
                                        if (item.ExpenseCategory != "DBS")
                                        {
                                            <tr>
                                                <td>@item.AccountCode</td>
                                                <td>@item.Facility</td>
                                                <td>@item.ExpenseCategory</td>
                                                <td>@item.Description</td>
                                                <td class="text-align-right">@Math.Round((decimal)item.TaxClass, (int)3).ToString("#,##0.00")</td>
                                                <td class="text-align-right">$@Math.Round((decimal)item.Amount, (int)2).ToString("###,##,##0.00")</td>
                                                <td class="text-align-right">
                                                    <select disabled id="dllGST" name="dllGST" onchange="Calculation()" class="form-control form-control-sm" style="width: 75px !important;text-align:center !important; margin-bottom:10px;">
                                                        <option value="0">
                                                            Select
                                                        </option>
                                                        @{
                                                            // For new records
                                                            if (item.GST == 0 && item.PVCCID == 0)
                                                            {
                                                                foreach (var items in ViewBag.dllGST)
                                                                {
                                                                    if (items.Selected)
                                                                    {
                                                                        <option value="@items.Value" selected="selected">
                                                                            @items.Text
                                                                        </option>
                                                                    }
                                                                    else
                                                                    {
                                                                        <option value="@items.Value">
                                                                            @items.Text
                                                                        </option>
                                                                    }
                                                                }
                                                            }
                                                            // For amendment / recreate
                                                            else
                                                            {
                                                                foreach (var items in ViewBag.dllGST)
                                                                {
                                                                    if (item.GSTPercentage.ToString() == items.Value)
                                                                    {
                                                                        <option value="@items.Value" selected="selected">
                                                                            @items.Text
                                                                        </option>
                                                                    }
                                                                    else
                                                                    {
                                                                        <option value="@items.Value">
                                                                            @items.Text
                                                                        </option>
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    </select>
                                                    </td>
                                                     <td class="text-align-right">
                                                         $@Math.Round((decimal)item.GST, (int)2).ToString("###,##,##0.00")
                                                         </td>
                                                <td class="text-align-right">$@Math.Round((decimal)item.AmountWithGST, (int)2).ToString("###,##,##0.00")</td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr>
                                                <td>@item.AccountCode</td>
                                                <td>@item.Facility</td>
                                                <td>@item.ExpenseCategory</td>
                                                <td>@item.Description</td>
                                                <td class="text-align-right">@Math.Round((decimal)item.TaxClass, (int)3).ToString("#,##0.00")</td>
                                                <td class="text-align-right">$@Math.Round((decimal)item.Amount, (int)2).ToString("###,##,##0.00")</td>
                                                <td></td>
                                                <td class="text-align-right">$@Math.Round((decimal)item.GST, (int)2).ToString("###,##,##0.00")</td>
                                                <td class="text-align-right">$@Math.Round((decimal)item.AmountWithGST, (int)2).ToString("###,##,##0.00")</td>
                                                @*<td class="text-align-right">$@Math.Round((decimal)@Model.PVCClaimVM.GrandTotal, (int)3).ToString("#,##0.00")</td>*@
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div id="EditSummary" style="display:none;">
                <div class="row mt-4">
                    <h5 class="col-md-12 card-title table-summary">
                        Summary of Accounts Allocation
                        <button type="button" class="btn btn-primary btn-icon-text" onclick="ShowViewSummary()">
                            View
                            <i class="mdi mdi-pencil-box-outline btn-icon-append"></i>
                        </button>
                    </h5>
                    <div class="col-md-12">
                        <div class="table-responsive">
                            <table id="order-listing" class="table table-bordered">
                                <thead>
                                    <tr>
                                        @*<th>Account Code</th>*@
                                        <th>Facility</th>
                                        <th>Expense Type</th>
                                        <th>Description</th>
                                        <th>Tax Class</th>
                                        <th>Amount (Excluding GST)</th>
                                        <th>GST Percentage</th>
                                        <th>GST</th>
                                        <th>Amount (Including GST)</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.DtPVCClaimSummaries)
                                    {
                                        if (item.ExpenseCategory != "DBS")
                                        {
                                        <tr>
                                            @*<td style="align-content:flex-start;">
                                                <input type="text" class="form-control form-control-sm" id="txtAccountCode" placeholder="Account Code" onkeypress="javascript:return isNumber (event)" maxlength="50" style="width: 150px !important;">
                                            </td>*@
                                            <td>
                                                <select id="FacilityID" asp-items="ViewBag.FacilityID" class="form-control form-control-sm" style="width: 150px !important;">
                                                    @*<option value="0">Select Facility</option>*@
                                                </select>
                                            </td>
                                            <td>
                                                <select id="txtExpenseCategory" asp-items="ViewBag.ExpenseCategoryID" onclick="hideQuantity(event)" class="form-control form-control-sm w-100" style="width: 150px !important;">
                                                    <option value="0">Select Category</option>
                                                </select>
                                                @*<input type="text" class="form-control form-control-sm" id="txtExpenseCategory" placeholder="Expense Category" maxlength="50" style="width: 150px !important;">*@
                                            </td>
                                            <td>
                                                <input type="text" class="form-control form-control-sm" id="txtDescription" placeholder="Description" maxlength="50" style="width: 150px !important; text-transform: uppercase;">
                                            </td>
                                            <td>
                                                <input type="text" class="form-control form-control-sm" readonly id="txtTaxClass" maxlength="20" data-inputmask="'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true,'autoUnmask': true, 'removeMaskOnSubmit': true, 'digits': 2, 'digitsOptional': false, 'prefix': '', 'placeholder': '0'" style="width: 120px !important;">
                                            </td>
                                            <td>
                                                    <input type="text" class="form-control form-control-sm" onchange="Calculation();" id="txtAmount" maxlength="20" data-inputmask="'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true,'autoUnmask': true, 'removeMaskOnSubmit': true, 'digits': 2, 'digitsOptional': false, 'prefix': '$ ', 'placeholder': '0'" style="width: 120px !important;">
                                            </td>
                                            <td>
                                                    <select id="dllGST" name="dllGST" onchange="Calculation()" class="form-control form-control-sm" style="width: 150px !important;">
                                                        <option value="0">
                                                            Select
                                                        </option>
                                                        @{
                                                            // For new records
                                                            if (item.GST == 0 && item.PVCCID == 0)
                                                            {
                                                                foreach (var items in ViewBag.dllGST)
                                                                {
                                                                    if (items.Selected)
                                                                    {
                                                                        <option value="@items.Value" selected="selected">
                                                                            @items.Text
                                                                        </option>
                                                                    }
                                                                    else
                                                                    {
                                                                        <option value="@items.Value">
                                                                            @items.Text
                                                                        </option>
                                                                    }
                                                                }
                                                            }
                                                            // For amendment / recreate
                                                            else
                                                            {
                                                                foreach (var items in ViewBag.dllGST)
                                                                {
                                                                    if (item.GSTPercentage.ToString() == items.Value)
                                                                    {
                                                                        <option value="@items.Value" selected="selected">
                                                                            @items.Text
                                                                        </option>
                                                                    }
                                                                    else
                                                                    {
                                                                        <option value="@items.Value">
                                                                            @items.Text
                                                                        </option>
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    </select>
                                                    
                                            </td>
                                            <td>
                                                <input type="text" class="form-control form-control-sm" onchange="TotalCalculation();" id="txtGST" maxlength="20" data-inputmask="'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true,'autoUnmask': true, 'removeMaskOnSubmit': true, 'digits': 2, 'digitsOptional': false, 'prefix': '$ ', 'placeholder': '0'" style="width: 120px !important;">
                                                    <span id="errorMsg" style="display:none;" class="text-danger">please check the value</span>
                                            </td>
                                            <td>
                                                <input type="text" class="form-control form-control-sm" readonly id="txtAmountWithGST" maxlength="20" data-inputmask="'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true,'autoUnmask': true, 'removeMaskOnSubmit': true, 'digits': 2, 'digitsOptional': false, 'prefix': '$ ', 'placeholder': '0'" style="width: 120px !important;">
                                            </td>
                                            <td class="actions">
                                                <span id="AddClaim" class="mdi mdi-plus-circle-outline"></span>
                                                <span id="EditClaim" class="mdi mdi-border-color d-none"></span>
                                                <span id="DeleteClaim" class="mdi mdi-delete-outline"></span>
                                                <input type="text" class="input-large" name="PVCCItemID[]" value="0" id="txtPVCCItemID" style="width: 100% ; text-align:right; display:none;"
                                                       onpaste="return false;" readonly="readonly" />
                                            </td>
                                        </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="table-responsive">
                            <table id="order-listingDBS" class="table table-bordered">
                                <thead>
                                    <tr class="d-none">
                                        @*<th></th>*@
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.DtPVCClaimSummaries)
                                    {
                                        if (item.ExpenseCategory == "DBS")
                                        {
                                    <tr>
                                        @*<td>
                                            <input type="text" class="form-control form-control-sm" id="txtAccountCodeDBS" maxlength="50" style="width: 150px !important;">
                                        </td>*@
                                        <td>
                                            <input type="text" class="form-control form-control-sm" id="txtFacilityDBS" maxlength="50" style="width: 150px !important;">
                                        </td>
                                        <td>
                                            <input type="text" class="form-control form-control-sm" id="txtExpenseCategoryDBS" maxlength="50" style="width: 150px !important;">
                                        </td>
                                        <td>
                                            <input type="text" class="form-control form-control-sm" id="txtDescriptionDBS" maxlength="50" style="width: 150px !important; text-transform: uppercase;">
                                        </td>
                                        <td>
                                            <input type="text" id="txtTaxClassDBS" readonly="readonly" class="form-control form-control-sm" maxlength="10" style="width: 120px !important;">
                                        </td>
                                        <td>
                                            <input type="text" id="txtAmountDBS" readonly="readonly" class="form-control form-control-sm" maxlength="10" style="width: 120px !important;">
                                        </td>
                                        <td>
                                            <input type="text" id="gstpercentage" readonly="readonly" class="form-control form-control-sm"  style="width: 120px !important;">
                                        </td>
                                        <td>
                                            <input type="text" class="form-control form-control-sm" readonly="readonly" id="txtGSTDBS" maxlength="20" data-inputmask="'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true,'autoUnmask': true, 'removeMaskOnSubmit': true, 'digits': 2, 'digitsOptional': false, 'prefix': '$ ', 'placeholder': '0'" style="width: 120px !important;">
                                        </td>
                                        <td>
                                            <input type="text" class="form-control form-control-sm" readonly="readonly" id="txtAmountWithGSTDBS" maxlength="20" data-inputmask="'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true,'autoUnmask': true, 'removeMaskOnSubmit': true, 'digits': 2, 'digitsOptional': false, 'prefix': '$ ', 'placeholder': '0'" style="width: 120px !important;">
                                        </td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                        }
                                    }
                                    </tbody>
                            </table>
                        </div>
                    </div>
                    <div class=" col-md-6">



                        @*<input type="hidden" id="hdfClaimID" name="hdfClaimID" value="0" />
                    <input type="hidden" id="txtPVCCNO" name="txtPVCCNO" value="@Model.PVCClaimVM.PVCCNo" />
                    <button class="btn btn-danger mr-2" onclick="RedirectView();">Close</button>
                    <button class="btn btn-light" onclick="ClearData();">Reset</button>*@
                    </div>
                    <div class="text-align-right mb-4">
                        <input type="hidden" id="hdfClaimID" name="hdfClaimID" value="0" />
                        <button type="submit" class="btn btn-primary mr-2" id="btnSummarySave" onclick="return SaveSummary(this.id);">Update</button>
                    </div>
                </div>
            </div>
            <div class="row mt-1" id="QuerySection">
                <h5 class="col-md-12 card-title table-summary"></h5>
                <div class="col-md-7 grid-margin grid-margin-md-0 stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Queries</h4>
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th class="pt-1 pl-0">
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td class="py-1 pl-0">
                                                <div class="d-flex align-items-center">
                                                    <div class="ml-3" id="chatarea">

                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-5 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Message</h4>
                            <div class="add-items d-flex pt-2">
                                <textarea class="form-control" id="newmessage_messagebody" rows="4" spellcheck="false" placeholder="Type message"></textarea>
                                <br />
                                <span id="error_txtMessage" class="HideBubble">Enter Query</span>
                                <select id="queryusers" class="js-example-basic-multiple w-100" style="width: 100% !important;" asp-items="@ViewBag.queryusers" multiple>
                                </select>
                                <br />
                                <span id="spSubSelectType" class="HideBubble">Please select user</span>

                            </div>
                            <button id="newmessage_sendbutton" class="add btn btn-primary font-weight-bold todo-list-add-btn" onclick="return sendNewMessage();">Send</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mt-4">
                <h5 class="col-md-12 card-title table-summary"></h5>
                <div class="col-md-12 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">
                                Audit Trail
                            </h4>
                            <ul class="bullet-line-list pt-2 mb-0">
                                @foreach (var itemAudit in Model.PVCClaimAudits)
                                {
                                    <p>
                                        @itemAudit.Description
                                    </p>
                                    <!--<li>
                                @if (itemAudit.Action.ToString() == "1" && @itemAudit.Description.ToString().ToLower().Contains("created"))
                                {
                                    <h6>
                                        New
                                    </h6>
                                }
                                else if ((itemAudit.Action.ToString() == "1" || itemAudit.Action.ToString() == "2") && @itemAudit.Description.ToString().ToLower().Contains("verification"))
                                {
                                    <h6>
                                        Awaiting verification
                                    </h6>
                                }
                                else if ((itemAudit.Action.ToString() == "2" || itemAudit.Action.ToString() == "3") && @itemAudit.Description.ToString().ToLower().Contains("approval"))
                                {
                                    <h6>
                                        Awaiting Signatory approval
                                    </h6>
                                }
                                else if ((itemAudit.Action.ToString() == "3") && @itemAudit.Description.ToString().ToLower().Contains("notification"))
                                {
                                    <h6>
                                        Approved
                                    </h6>
                                }
                                else if ((itemAudit.Action.ToString() == "3") && @itemAudit.Description.ToString().ToLower().Contains("approved"))
                                {
                                    <h6>
                                        Approved
                                    </h6>
                                }
                                else if ((itemAudit.Action.ToString() == "4") && @itemAudit.Description.ToString().ToLower().Contains("reject"))
                                {
                                    <h6>
                                        Rejected
                                    </h6>
                                }
                                else if ((itemAudit.Action.ToString() == "4") && @itemAudit.Description.ToString().ToLower().Contains("notification"))
                                {
                                    <h6>
                                        Rejected
                                    </h6>
                                }
                                else if ((itemAudit.Action.ToString() == "-5") && @itemAudit.Description.ToString().ToLower().Contains("void"))
                                {
                                    <h6>
                                        Requested to Void
                                    </h6>
                                }
                                else if ((itemAudit.Action.ToString() == "-5") && @itemAudit.Description.ToString().ToLower().Contains("void"))
                                {
                                    <h6>
                                        Requested to Void
                                    </h6>
                                }
                                else if ((itemAudit.Action.ToString() == "5") && @itemAudit.Description.ToString().ToLower().Contains("void"))
                                {
                                    <h6>
                                        Voided
                                    </h6>
                                }
                                else if ((itemAudit.Action.ToString() == "5") && @itemAudit.Description.ToString().ToLower().Contains("void"))
                                {
                                    <h6>
                                        Voided
                                    </h6>
                                }
                                else if ((itemAudit.Action.ToString() == "5") && @itemAudit.Description.ToString().ToLower().Contains("notification"))
                                {
                                    <h6>
                                        Voided
                                    </h6>
                                }
                                else if ((itemAudit.Action.ToString() == "0") && @itemAudit.Description.ToString().ToLower().Contains("query"))
                                {
                                    <h6>
                                        Query
                                    </h6>
                                }
                                else if ((itemAudit.Action.ToString() == "1" || itemAudit.Action.ToString() == "2") && @itemAudit.Description.ToString().ToLower().Contains("amended by"))
                                {
                                    <h6>
                                        Amended
                                    </h6>
                                }
                                <p>
                                    @itemAudit.Description
                                </p>
                                <p class="text-muted mb-3 tx-12">
                                    <i class="mdi mdi-clock-outline"></i>
                                    @itemAudit.AuditDateTickle-->
                                    @*1 day ago.*@
                                    <!--</p>
                            </li>-->
                                }
                                @*<li>
                                <h6>Created</h6>
                                <p>
                                    Created by User on 16/05/2021 6:16:17 PM
                                </p>
                                <p class="text-muted mb-3 tx-12">
                                    <i class="mdi mdi-clock-outline"></i>
                                    1 day ago.
                                </p>
                            </li>
                            <li>
                                <h6>Sent</h6>
                                <p>
                                    Sent to User1 for verification on 17/05/2021 6:16:17 PM
                                </p>
                                <p class="text-muted mb-3 tx-12">
                                    <i class="mdi mdi-clock-outline"></i>
                                    20 Hours ago.
                                </p>
                            </li>
                            <li>
                                <h6>Verified</h6>
                                <p>
                                    Verified by Use1r and sent to User2 for approval on 17/05/2021 7:06:02 PM
                                </p>
                                <p class="text-muted mb-0">
                                    <i class="mdi mdi-clock-outline"></i>
                                    10 hours ago.
                                </p>
                            </li>*@
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 grid-margin stretch-card">

                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="dialogVerified" tabindex="-1" role="dialog" data-backdrop="static" aria-labelledby="verifiedconformation" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#d9534f;color:white;">
                <h5 class="modal-title" id="dialogVerifiedLabel">Verify</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <div class="col-sm-12">
                            <span>
                                Do you want to verify?
                            </span>
                            <strong id="deletedValueName">

                            </strong>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" id="btnVerifysave" class="btn btn-primary mr-2" value="Yes" onclick="verifyData()" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="dialogApproved" tabindex="-1" role="dialog" data-backdrop="static" aria-labelledby="Approvedconformation" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#d9534f;color:white;">
                <h5 class="modal-title" id="dialogApprovedLabel">Approve</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <div class="col-sm-12">
                            <span>
                                Do you want to Approve?
                            </span>
                            <strong id="deletedValueName">

                            </strong>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" id="btnApprovesave" class="btn btn-primary mr-2" value="Yes" onclick="approveData()" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="dialogReject" tabindex="-1" role="dialog" data-backdrop="static" aria-labelledby="Rejectconformation" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#d9534f;color:white;">
                <h5 class="modal-title" id="dialogRejectLabel">Request to Amend</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <div class="col-sm-12">
                            <span>
                                <label>Reason : </label>
                                <input type="text" name="txtRejectReason" id="txtRejectReason" maxlength="140" class="form-control" style="width: 450px !important;" onfocus="HideError('sptxtRejectReason')" />
                                <span id="sptxtRejectReason" style="display: none"></span>
                            </span>
                            <strong id="deletedValueName">

                            </strong>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" id="btnRejectsave" class="btn btn-primary mr-2" value="Save" onclick="rejectData()" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="dialogVoid" tabindex="-1" role="dialog" data-backdrop="static" aria-labelledby="Voidconformation" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#d9534f;color:white;">
                <h5 class="modal-title" id="dialogVoidLabel">Void</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <div class="col-sm-12">
                            <span>
                                <label>Reason : </label>
                                <input type="text" name="txtVoidReason" id="txtVoidReason" maxlength="140" style="width: 450px !important;" class="form-control" onfocus="HideError('sptxtVoidReason')" />
                                <span id="sptxtVoidReason" style="display: none"></span>
                            </span>
                            <strong id="deletedValueName">

                            </strong>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" id="btnVoidsave" class="btn btn-primary mr-2" value="Save" onclick="voidData()" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <environment names="Development">

        <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script src="~/vendors/select2/select2.min.js" asp-append-version="true"></script>
        <script src="~/js/select2.js"></script>
        <script src="~/vendors/inputmask/jquery.inputmask.bundle.js"></script>
    </environment>
    <environment names="Staging,Production">
        <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script src="~/vendors/select2/select2.min.js" asp-append-version="true"></script>
        <script src="~/js/select2.js"></script>
        <script src="~/vendors/inputmask/jquery.inputmask.bundle.js"></script>
    </environment>
    <script type="text/javascript">
            (function ($) {
                $(document).ready(function ()
                {
                
                    //alert('on load');
                    updateChatArea();
                    var access = '@ViewBag.Access';
                    var ApprovedStatus = '@ViewBag.Approvalstatus';
                    if (access == "1") {
                        if (ApprovedStatus == "2" || ApprovedStatus == "1" || ApprovedStatus == "6" || ApprovedStatus == "7") {
                            document.getElementById('QuerySection').style.display = 'block';
                        }
                        else {
                            document.getElementById('QuerySection').style.display = 'none';
                        }
                    }
                    else {
                        document.getElementById('QuerySection').style.display = 'none';
                    }
                });
        })(jQuery);

         var CID = '@ViewBag.PVCCID';
            if (CID != 0) {

                //alert(CID);
                debugger;
                //var status = '@TempData["status"]';
                //var ClaimStatus = '@ViewBag.ClaimStatus';
                //alert(ClaimStatus);
/*                if (ClaimStatus == "Update") {*/
                    $("#hdfClaimID").val(@ViewBag.PVCCID);

                    //var table1 = document.getElementById("order-listing");
                    //var rowLength = table1.rows.length;
                    var l = 0;

                    var id = '@ViewBag.PVCCID';
                    var FinanceGstValueBuffer = '@ViewBag.FinanceGstValueBuffer';
                    $.ajax({
                        type: "POST",
                        url: "/FinancePVCClaim/GetTextValuesSGSummary",
                        data:{id: id},
                        success: function (data) {
                            //var result = JSON.stringify(data);
                           /* alert(data);*/
                            var table1 = document.getElementById("order-listing");
                            var rowLength = table1.rows.length;

                            var tableDBS = document.getElementById("order-listingDBS");
                            var rowLengthDBS = tableDBS.rows.length;
                            //alert(data.length);
                            //alert(data.dtClaimsList.length);
                            //for (var i = 0; i < data.length; ++i) {

                            //}
                            for (var l = 0; l < data.dtClaimsList.length; l++) {
                                debugger;
                                var DtPVCCItemID = data.dtClaimsList[l].cItemID;
                                var Description = data.dtClaimsList[l].description;
                                var ExpenseCategory = data.dtClaimsList[l].expenseCategory;
                                var ExpenseCategoryID = data.dtClaimsList[l].expenseCategoryID;
                                var Facility = data.dtClaimsList[l].facility;
                                var FacilityID = data.dtClaimsList[l].facilityID;
                                var AccountCode = data.dtClaimsList[l].accountCode;
                                var TaxClass = data.dtClaimsList[l].taxClass;
                                var Amount = data.dtClaimsList[l].amount;
                                var GST = data.dtClaimsList[l].gst;
                                var AmountWithGST = data.dtClaimsList[l].amountWithGST;
                                var PVCCID = data.dtClaimsList[l].hrpvccid;
                                //alert('DBS ' + ExpenseCategory);

                                if (ExpenseCategory != "DBS") {
                                    var row1 = table1.rows[l + 1];
                                    //alert('row1 ' + row1);
                                    $(row1).find("#txtAccountCode").val(AccountCode);
                                    $(row1).find("#txtExpenseCategory").val(ExpenseCategoryID);
                                    $(row1).find("#FacilityID").val(FacilityID);
                                    $(row1).find("#txtDescription").val(Description);
                                    $(row1).find("#txtTaxClass").val(TaxClass);
                                    //$(row1).find("#txtFacilityName").val(Facility);
                                    //$(row1).find("#txtGST").val(GST);
                                    $(row1).find("#txtAmount").val(Amount);
                                    $(row1).find("#txtGST").val(GST);
                                    $(row1).find("#txtGST").attr({
                                        "max" : (parseFloat(GST) + parseFloat(FinanceGstValueBuffer)).toFixed(2),        // substitute your own
                                "min": (parseFloat(GST) - parseFloat(FinanceGstValueBuffer)).toFixed(2)          // values (or variables) here
                                    });
                                    $(row1).find("#txtAmountWithGST").val(AmountWithGST);
                                    $(row1).find("#txtPVCCItemID").val(DtPVCCItemID);
                                }
                                else
                                {
                                    var row1 = tableDBS.rows[1];

                                    $(row1).find("#txtAccountCodeDBS").val(AccountCode);
                                    $(row1).find("#txtExpenseCategoryDBS").val(ExpenseCategory);
                                    $(row1).find("#txtDescriptionDBS").val(Description);
                                    $(row1).find("#txtTaxClassDBS").val(TaxClass);
                                    //$(row1).find("#txtFacilityName").val(Facility);
                                    //$(row1).find("#txtGST").val(GST);
                                    //$(row1).find("#txtAmountDBS").val(Amount);
                                    $(row1).find("#txtAmountDBS").val(parseFloat(Amount).toFixed(2));
                                    $(row1).find("#txtGSTDBS").val(GST);
                                    $(row1).find("#txtAmountWithGSTDBS").val(AmountWithGST);
                                    //$(row1).find("#txtItemChequeNo").val(ChequeNo);
                                    //$(row1).find("#txtPVCCItemIDDBS").val(DtPVCCItemID);
                                }


                                // new lines of code to disable fields start
                                //if (ClaimStatus == "Update") {

                                //    $(row1).find('#AddClaim').click(function (e) { return false; });
                                //    $(row1).find('#DeleteClaim').click(function (e) { return false; });
                                //}
                                // new lines of code to disable fields end
                            }
                        },
                        error: function () {
                           // $("#dialogVerified").modal('hide');
                        }
                    });
/*                }*/
        }

        $("#order-listing").on('click', '#DeleteClaim', function () {
            debugger;
            var x = document.getElementById("order-listing").rows.length;
            //  alert(x)
            if (x > 2) {
                var par = $(this).parent().parent(); //tr
                $(this).parent().parent().remove();
                $('#order-listing').find('tr').each(function (i, el) {
                    if (i != 0) {
                        var tds = $(this).find('td');
                        $(this).find('#lblItem').html(i);
                    }
                });
            }
            //Calculation();
        });
        $(":input").on("keyup change", function(e) {
            $('#order-listing').find('tr').each(function (i, el) {
                if (i != 0) {
                    var $tds = $(this).find('td');
                    var max = $(this).find('#txtGST').attr('max');
                    var min = $(this).find('#txtGST').attr('min');
                    if ($(this).find('#txtGST').val() < min || $(this).find('#txtGST').val() > max) {
                       $(this).find('#errorMsg').text('Values must be with in ' + min + ' and ' + max + ' ');
                        $(this).find('#errorMsg').show();
                    } else {
                        $(this).find('#errorMsg').hide();
                    }
                }
            });
        });

        $(":input").on("keyup change", function (e) {
            $('#order-listing1').find('tr').each(function (i, el) {
                if (i != 0) {
                    var $tds = $(this).find('td');
                    var max = $(this).find('#txtGST').attr('max');
                    var min = $(this).find('#txtGST').attr('min');
                    if ($(this).find('#txtGST').val() < min || $(this).find('#txtGST').val() > max) {
                        $(this).find('#errorMsg').text('Values must be with in ' + min + ' and ' + max + ' ');
                        $(this).find('#errorMsg').show();
                    } else {
                        $(this).find('#errorMsg').hide();
                    }
                }
            });
        });
        
        function TotalCalculation() {
            $('#order-listing').find('tr').each(function (i, el) {
                if (i != 0) {
                    var txtsubtot = $(this).find('#txtAmount').val();
                    if (txtsubtot == "nan" || txtsubtot == "") {
                        txtsubtot = 0.00;
                    }
                    var txtgsttot = $(this).find('#dllGST').val();
                    if (txtgsttot == "nan" || txtgsttot == "") {
                        txtgsttot = 0.00;
                    }

                    totalpriceexcgst = (parseFloat(txtsubtot)).toFixed(3);
                    totalpriceexcgst = (Math.round(totalpriceexcgst * 100) / 100);
                    calpergst = (totalpriceexcgst * txtgsttot).toFixed(3);
                    calpergst = (Math.round(calpergst * 100) / 100);
                    calperdivbyhungst = (calpergst / 100).toFixed(4).slice(0, -1);
                    calperdivbyhungst = (Math.round(calperdivbyhungst * 100) / 100);
                    totamtgst = (parseFloat(txtsubtot) + parseFloat($(this).find('#txtGST').val())).toFixed(2);
                    $(this).find('#txtAmountWithGST').val(totamtgst);
                }
            });
        }

        function Calculation() {
            var totalpriceexcgst = 0;
            var calpergst = 0;
            var calperdivbyhungst = 0;
            var FinanceGstValueBuffer = '@ViewBag.FinanceGstValueBuffer';
            $('#order-listing').find('tr').each(function (i, el) {
                if (i != 0) {
                    debugger;
                    var txtsubtot = $(this).find('#txtAmount').val();
                    if (txtsubtot == "nan" || txtsubtot == "") {
                        txtsubtot = 0.00;
                    }
                    var txtgsttot = $(this).find('#dllGST').val();
                    if (txtgsttot == "nan" || txtgsttot == "") {
                        txtgsttot = 0.00;
                    }
                    if(txtgsttot == 0.00 || txtgsttot == 0){
                        $(this).find('#txtTaxClass').val('4.00');
                    } else {
                        $(this).find('#txtTaxClass').val(txtgsttot);
                    }

                    totalpriceexcgst = (parseFloat(txtsubtot)).toFixed(3);
                    totalpriceexcgst = (Math.round(totalpriceexcgst * 100) / 100);
                    calpergst = (totalpriceexcgst * txtgsttot).toFixed(3);
                    calpergst = (Math.round(calpergst * 100) / 100);
                    calperdivbyhungst = (calpergst / 100).toFixed(4).slice(0, -1);
                    calperdivbyhungst = (Math.round(calperdivbyhungst * 100) / 100);
                    totamtgst = (parseFloat(txtsubtot) + parseFloat(calperdivbyhungst)).toFixed(2);
                    $(this).find('#txtGST').val(calperdivbyhungst);
                    $(this).find('#txtAmountWithGST').val(totamtgst);
                    $(this).find("#txtGST").attr({
                        "max" : (parseFloat(calperdivbyhungst) + parseFloat(FinanceGstValueBuffer)).toFixed(2),        // substitute your own
                        "min": (parseFloat(calperdivbyhungst) - parseFloat(FinanceGstValueBuffer)).toFixed(2)          // values (or variables) here
                    });
                }
            });

        }

        $(document).on('click', '#AddClaim', function () {
            var message = "";
            var table = document.getElementById("order-listing");
            for (var i = 1; i < 2; i++) {
                var row = table.rows[i];
                for (var j = 0; j < row.cells.length; j++) {
                    var cell = row.cells[j];
                    if (j == 0) {
                        message += "<td>" + cell.innerHTML + "</td>";
                    }
                    else {
                        message += "<td>" + cell.innerHTML + "</td>";
                    }
                }
            }
            $(this).parent().parent().after('<tr>' + message + '</tr>');

            message = "";
            var DepartmentID = 0;
            $('#order-listing').find('tr').each(function (i, el) {
                debugger;
                var rowcount = table.rows.length;
                if (i != 0) {
                    var tds = $(this).find('td');
                    $(this).find('#lblItem').html(i);
                }
            });
            //Calculation();
        });

        $(".js-example-basic-multiple").select2({
            placeholder: "Select user"
        });

        function RedirectView() {
            window.close();
            @*var userID = '@ViewBag.filteruserId';
            var facilityID = '@ViewBag.filterfacilityID';
            var statusId = '@ViewBag.filterstatusId';
            var FromDate = '@ViewBag.filterFromDate';
            var ToDate = '@ViewBag.filterToDate';
            window.location.href = "/FinancePVCClaim/Index?userID=" + userID + "&facilityID=" + facilityID +
                "&statusID=" + statusId + "&FromDate=" + FromDate + "&ToDate=" + ToDate;*@
        }

        function isNumber(evt) {
            //alert("number");
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 47 || charCode > 57) && charCode != 44 && charCode != 45) {
                return false;
            }
        }

        $('body').on('focus', "#txtTaxClass", function () {
            $(this).inputmask({
                alias: 'decimal', groupSeparator: ',', removeMaskOnSubmit: true, digits: 2, digitsOptional: false,
                autoGroup: true, autoUnmask: true, prefix: ' ', placeholder: '0'
            });
        });

        $('body').on('focus', "#txtAmount", function () {
            $(this).inputmask({
                alias: 'decimal', groupSeparator: ',', removeMaskOnSubmit: true, digits: 2, digitsOptional: false,
                autoGroup: true, autoUnmask: true, prefix: '$ ', placeholder: '0'
            });
        });

        $('body').on('focus', "#txtAmountDBS", function () {
            $(this).inputmask({
                alias: 'decimal', groupSeparator: ',', removeMaskOnSubmit: true, digits: 2, digitsOptional: false,
                autoGroup: true, autoUnmask: true, prefix: '$ ', placeholder: '0'
            });
        });

        $('body').on('focus', "#txtGST", function () {
            $(this).inputmask({
                alias: 'decimal', groupSeparator: ',', removeMaskOnSubmit: true, digits: 2, digitsOptional: false,
                autoGroup: true, autoUnmask: true, prefix: '$ ', placeholder: '0'
            });
        });

        $('body').on('focus', "#txtGSTDBS", function () {
            $(this).inputmask({
                alias: 'decimal', groupSeparator: ',', removeMaskOnSubmit: true, digits: 2, digitsOptional: false,
                autoGroup: true, autoUnmask: true, prefix: '$ ', placeholder: '0'
            });
        });

        $('body').on('focus', "#txtAmountWithGST", function () {
            $(this).inputmask({
                alias: 'decimal', groupSeparator: ',', removeMaskOnSubmit: true, digits: 2, digitsOptional: false,
                autoGroup: true, autoUnmask: true, prefix: '$ ', placeholder: '0'
            });
        });

        $('body').on('focus', "#txtAmountWithGSTDBS", function () {
            $(this).inputmask({
                alias: 'decimal', groupSeparator: ',', removeMaskOnSubmit: true, digits: 2, digitsOptional: false,
                autoGroup: true, autoUnmask: true, prefix: '$ ', placeholder: '0'
            });
        });

        function ShowEditSummary() {
            $("#EditSummary").show();
            $("#ShowSummary").hide();
        }

        function ShowViewSummary() {
            $("#EditSummary").hide();
            $("#ShowSummary").show();
        }

        function SaveSummary(id) {
            // alert('id ' + id);

            //if (id == "btnSave" || id == "btnEdit") { }
            param = "SendforApproval";
            var res = param;
            var ErrorStatus = "true";
            var TotAmount = 0;
            var GrandTot = 0;
            var GrandGST = 0;
            var lTotAmount = 0;
            var lGrandTot = 0;
            var lGrandGST = 0;
            if (res == "SendforApproval") {
                $('#order-listingDBS').find('tr').each(function (i, el) {
                    if (i != 0) {
                        var $tds = $(this).find('td');
                        GrandTot = $(this).find('#txtAmountDBS').val();
                        GrandGST = $(this).find('#txtGSTDBS').val();
                        TotAmount = $(this).find('#txtAmountWithGSTDBS').val();
                    }
                });
                $('#order-listing').find('tr').each(function (i, el) {
                    if (i != 0) {
                        var $tds = $(this).find('td');

                        var AccountCode = $(this).find("#txtAccountCode").val();
                        var ExpenseCategory = $(this).find("#txtExpenseCategory").val();
                        var Description = $(this).find("#txtDescription").val();
                        var TaxClass = $(this).find('#txtTaxClass').val();
                        var Amount = $(this).find('#txtAmount').val();
                        var GST = $(this).find('#txtGST').val();
                        if (GST == "") {
                            GST = 0;
                        }
                        var AmountWithGST = $(this).find('#txtAmountWithGST').val();

                        lGrandTot = (parseFloat(lGrandTot) + parseFloat(Amount)).toFixed(2);
                        lGrandGST = (parseFloat(lGrandGST) + parseFloat(GST)).toFixed(2);
                        lTotAmount = (parseFloat(lTotAmount) + parseFloat(AmountWithGST)).toFixed(2);

                        //var max = $(this).find('#txtGST').attr('max');
                        //var min = $(this).find('#txtGST').attr('min');
                        //if ($(this).find('#txtGST').val() < min || $(this).find('#txtGST').val() > max) {
                        //    $(this).find('#errorMsg').text('Values must be with in ' + min + ' and ' + max + ' ');
                        //    $(this).find('#errorMsg').show();
                        //    alert('Please fix gst value error at Row No '+ i);
                        //    ErrorStatus = "false";
                        //    return false;
                        //} else {
                        //    $(this).find('#errorMsg').hide();
                        //    return true;
                        //}

                        if (i == 1) {

                            //if (!AccountCode) {
                            //    alert('Please Enter Account Code at Row No ' + i);
                            //    ErrorStatus = "false";
                            //    return false;
                            //}

                            if (!ExpenseCategory) {
                                alert('Please Enter Expense Category at Row No ' + i);
                                ErrorStatus = "false";
                                return false;
                            }

                            if (!Description) {
                                alert('Please Enter Description at Row No ' + i);
                                ErrorStatus = "false";
                                return false;
                            }

                            if (!TaxClass || TaxClass == 0) {
                                alert('Please Enter Tax Class at Row No ' + i);
                                ErrorStatus = "false";
                                return false;
                            }

                            if (!Amount || Amount == 0) {
                                alert('Please Enter Amount at Row No ' + i);
                                ErrorStatus = "false";
                                return false;
                            }


                            if (!AmountWithGST || AmountWithGST == 0) {
                                alert('Please Enter Amount at Row No ' + i);
                                ErrorStatus = "false";
                                return false;
                            }
                        }
                        else {

                            //if (!AccountCode) {
                            //    alert('Please Enter Account Code at Row No ' + i);
                            //    ErrorStatus = "false";
                            //    return false;
                            //}

                            if (!ExpenseCategory) {
                                alert('Please Enter Expense Category at Row No ' + i);
                                ErrorStatus = "false";
                                return false;
                            }

                            if (!Description) {
                                alert('Please Enter Description at Row No ' + i);
                                ErrorStatus = "false";
                                return false;
                            }

                            if (!TaxClass || TaxClass == 0) {
                                alert('Please Enter Tax Class at Row No ' + i);
                                ErrorStatus = "false";
                                return false;
                            }

                            if (!Amount || Amount == 0) {
                                alert('Please Enter Amount at Row No ' + i);
                                ErrorStatus = "false";
                                return false;
                            }


                            if (!AmountWithGST || AmountWithGST == 0) {
                                alert('Please Enter Amount at Row No ' + i);
                                ErrorStatus = "false";
                                return false;
                            }
                        }

                    }
                });

                if (ErrorStatus == "false") {
                    return false;
                }

                if (parseFloat(lGrandTot) != parseFloat(GrandTot)) {
                    alert('Sum of the amount of all items should be equal to DBS Amount');
                    ErrorStatus = "false";
                    return false;
                }
                if (ErrorStatus == "false") {
                    return false;
                }

                if (parseFloat(lGrandGST) != parseFloat(GrandGST)) {
                    alert('Sum of the GST of all items should be equal to DBS GST');
                    ErrorStatus = "false";
                    return false;
                }
                if (ErrorStatus == "false") {
                    return false;
                }

                if (parseFloat(lTotAmount) != parseFloat(TotAmount)) {
                    alert('Sum of the total amount of all items should be equal to DBS Total Amount');
                    ErrorStatus = "false";
                    return false;
                }

                if (ErrorStatus == "false") {
                    return false;
                }
            }



            var formData = new FormData();
            var dtClaimsArr = new Array();
            dtClaimsArr.length = 0;

            $('#order-listing').find('tr').each(function (i, el) {
                if (i != 0) {
                    var AccountCode = $(this).find("#txtAccountCode").val();
                    var ExpenseCategory = $(this).find("#txtExpenseCategory option:selected").text();
                    var ExpenseCategoryID = $(this).find("#txtExpenseCategory").val();
                    var Facility = $(this).find("#FacilityID option:selected").text();
                    var FacilityID = $(this).find("#FacilityID").val();
                    var Description = $(this).find("#txtDescription").val();
                    var TaxClass = $(this).find('#txtTaxClass').val();
                    var Amount = $(this).find('#txtAmount').val();
                    var GST = $(this).find('#txtGST').val();
                    var GSTPercentage = $(this).find('#dllGST').val();
                    if (GST == "") {
                        GST = 0;
                    }
                    var AmountWithGST = $(this).find('#txtAmountWithGST').val();
                    var PVCCID = $('#hdfClaimID').val();
                    var DtPVCCItemID = $(this).find('#txtPVCCItemID').val();
                    var dtClaim = {}
                    dtClaim.CItemID = DtPVCCItemID;
                    dtClaim.PVCCID = PVCCID;
                    dtClaim.AccountCode = AccountCode;
                    dtClaim.ExpenseCategory = ExpenseCategory;
                    dtClaim.ExpenseCategoryID = ExpenseCategoryID;
                    dtClaim.Facility = Facility;
                    dtClaim.FacilityID = FacilityID;
                    dtClaim.Description = Description;
                    dtClaim.TaxClass = TaxClass;
                    dtClaim.Amount = Amount;
                    dtClaim.GST = GST;
                    dtClaim.GSTPercentage = GSTPercentage;
                    dtClaim.AmountWithGST = AmountWithGST;
                    dtClaimsArr.push(dtClaim);
                }

            });
            $('#order-listingDBS').find('tr').each(function (i, el) {
                if (i != 0) {
                    var AccountCode = $(this).find("#txtAccountCodeDBS").val();
                    var ExpenseCategory = $(this).find("#txtExpenseCategoryDBS").val();
                    var Description = $(this).find("#txtDescriptionDBS").val();
                    var TaxClass = $(this).find('#txtTaxClassDBS').val();
                    var Amount = $(this).find('#txtAmountDBS').val();
                    var GST = $(this).find('#txtGSTDBS').val();
                    var AmountWithGST = $(this).find('#txtAmountWithGSTDBS').val();
                    var PVCCID = $('#hdfClaimID').val();
                    var DtPVCCItemID = $(this).find('#txtPVCCItemID').val();
                    var dtClaim = {}
                    dtClaim.CItemID = DtPVCCItemID;
                    dtClaim.PVCCID = PVCCID;
                    dtClaim.AccountCode = AccountCode;
                    dtClaim.ExpenseCategory = ExpenseCategory;
                    dtClaim.Description = Description;
                    dtClaim.TaxClass = TaxClass;
                    dtClaim.Amount = Amount;
                    dtClaim.GST = GST;
                    dtClaim.AmountWithGST = AmountWithGST;
                    dtClaimsArr.push(dtClaim);
                }

            });
            //alert($("#txtGrandTotal").val());
            formData.append('data', JSON.stringify(
                {
                    PVCCID: $('#hdfClaimID').val(),
                    dtClaims: dtClaimsArr
                }
            ));
            if (res == "SendforApproval") {
                //alert('Before calling');
                //$('#btnsaveupdate').attr('disabled', 'disabled');
                $('#btnSave').attr('disabled', 'disabled');
                $('#btnEdit').attr('disabled', 'disabled');
                $.ajax({
                    type: "POST",
                    url: "/FinancePVCClaim/SaveSummary",
                    data: formData,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        //alert('Success');
                        var myID = data.res;
                        window.location.href = "/FinancePVCClaim/Details/" + @ViewBag.PVCCID;
                    },
                    failure: function (response) {
                        $("#msg").html("Error while creating  PV-Cheque Claim").css("color", "green");
                        $('#result').html(response);
                    }
                });
            }
        }

        function Print_button() {
            var id = @ViewBag.PVCCID;
            //alert('id ' + id);
            $.ajax({
                //contentType: 'application/json; charset=utf-8',
                //dataType: "html",
                type: 'POST',
                url: "/FinancePVCClaim/GetPrintClaimDetails",
                data: { id: id },
                success: function (data) {
                    var headstr = "<html><head><title>PVC Claim Details</title></head><body>";
                    var footstr = "</body>";
                    var oldstr = document.body.innerHTML;
                    document.body.innerHTML = headstr + data + footstr;
                    window.print();
                    document.body.innerHTML = oldstr;
                    location.reload(true);
                    return false;
                }
            });
        }

        //this is only display bootstrap modal pop up dialog
        var verifyConfirm = function () {
            $('#dialogVerified').modal('show');
            }

            var approvedConfirm = function () {
                //$('#deletedValueName').text(val);
                $('#dialogApproved').modal('show');
            }

            var rejectConfirm = function () {
                //$('#deletedValueName').text(val);
                $('#dialogReject').modal('show');
            }

            var voidConfirm = function () {
                //$('#deletedValueName').text(val);
                 $('#txtVoidReason').val('@ViewBag.VoidReason');
                $('#dialogVoid').modal('show');
            }

        //call this function after click on confirm delete button
        var verifyData = function () {
        $('#divLoading').show();
        //var id = $('#id').val();
            var id = '@ViewBag.PVCCID ';
            $('#btnVerifysave').attr('disabled', 'disabled');
        $.ajax({
            type: "POST",
            url: "/FinancePVCClaim/UpdateStatus",
            data:{id: id},
            success: function (result) {
                $("#dialogVerified").modal('hide');
                 if (result.res == '0') {
                                window.location.href = "@Url.Content("~/FinancePVCClaim/Details/")" + id;
                            }
                            else {
                                window.location.href = "@Url.Content("~/FinancePVCClaim/Index/")";
                            }
            },
            error: function () {
                $("#dialogVerified").modal('hide');
            }
        });
        }


            //call this function after click on confirm delete button
        var approveData = function () {
        $('#divLoading').show();
        //var id = $('#id').val();
            var id = '@ViewBag.PVCCID ';
            $('#btnApprovesave').attr('disabled', 'disabled');
        $.ajax({
            type: "POST",
            url: "/FinancePVCClaim/UpdateStatus",
            data:{id: id},
            success: function (result) {
                $("#dialogApproved").modal('hide');
                 if (result.res == '0') {
                                window.location.href = "@Url.Content("~/FinancePVCClaim/Details/")" + id;
                            }
                            else {
                                window.location.href = "@Url.Content("~/FinancePVCClaim/Index/")";
                            }
            },
            error: function () {
                $("#dialogApproved").modal('hide');
            }
        });
        }

               //call this function after click on confirm delete button
        var rejectData = function () {
        //var id = $('#id').val();
            var reason = $('#txtRejectReason').val();
            if (!reason) {
                $('#sptxtRejectReason').html("Please Enter Request to Amend Reason");
                $('#sptxtRejectReason').css('color', 'red');
                $('#sptxtRejectReason').show();
                $('#txtRejectReason').css('border-color', 'red');
                return false;
            }
            var id = '@ViewBag.PVCCID ';
            $('#btnRejectsave').attr('disabled', 'disabled');
        $.ajax({
            type: "POST",
            url: "/FinancePVCClaim/UpdateRejectedStatus",
            data:{id: id,reason: reason},
            success: function (result) {
                $("#dialogReject").modal('hide');
                 if (result.res == '0') {
                                window.location.href = "@Url.Content("~/FinancePVCClaim/Details/")" + id;
                            }
                            else {
                                window.location.href = "@Url.Content("~/FinancePVCClaim/Index/")";
                            }
            },
            error: function () {
                $("#dialogReject").modal('hide');
            }
        });
            }

                  //call this function after click on confirm delete button
        var voidData = function () {
        //var id = $('#id').val();
            var reason = $('#txtVoidReason').val();
            var approvedStatus = '@TempData["ApprovedStatus"].ToString()';
            //alert($('#txtVoidReason').val());
            //alert('reason ' + reason);
            var id = '@ViewBag.PVCCID ';
            if (!reason) {
                $('#sptxtVoidReason').html("Please Enter Void Reason");
                $('#sptxtVoidReason').css('color', 'red');
                $('#sptxtVoidReason').show();
                $('#txtVoidReason').css('border-color', 'red');
                return false;
            }
            $('#btnVoidsave').attr('disabled', 'disabled');
        $.ajax({
            type: "POST",
            url: "/FinancePVCClaim/UpdateStatusforVoid",
            data: { id: id, reason: reason, approvedStatus: approvedStatus },
            success: function (result) {
                $("#dialogVoid").modal('hide');
                 if (result.res == '0') {
                                window.location.href = "@Url.Content("~/FinancePVCClaim/Details/")" + id;
                            }
                            else {
                                window.location.href = "@Url.Content("~/FinancePVCClaim/Index/")";
                            }
            },
            error: function () {
                $("#dialogVoid").modal('hide');
            }
        });
            }

        function HideError(SpanID) {
            //alert('Hi');
            var ErrorMsgID = document.getElementById(SpanID);
            ErrorMsgID.className = "HideBubble";
            return false;
        }

         function sendNewMessage()
        {

             var Message = $("#newmessage_messagebody").val();
             //alert(' Message ' + Message);
             var messagereciverID = $("#queryusers").val();
             //alert(' messagereciverID ' + messagereciverID);
             var EditPVCcid = '@ViewBag.PVCCID';
             //alert(' EditMcid ' + EditMcid);
            if (Message != '')
            {
                if (messagereciverID != '')
                {
                    var formData = new FormData();
                    formData.append('data', JSON.stringify(
                        {
                            Message: Message,
                            RecieverId: messagereciverID,
                            Cid: EditPVCcid
                        }
                    ));
                    $.ajax({
                        type: "POST",
                        url: "/FinancePVCClaim/AddMessage",
                        data: formData,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        processData: false,
                        contentType: false,
                        success: function (result) {
                            updateChatAreamessages();
                        },
                        error: function () {
                        }
                    });

                    $("#newmessage_messagebody").val("");
                }
                else
                {
                    $('#spSubSelectType').css('color', 'red');
                    $('#spSubSelectType').addClass("ShowBubble");
                    $('#spSubSelectType').removeClass("HideBubble");
                    $('#spSubSelectType').focus();
                    $('#spSubSelectType').show();
                    AutoHide("#spSubSelectType", "3000")
                    return false;

                }
            }
            else
            {
                $('#error_txtMessage').css('color', 'red');
                $('#error_txtMessage').addClass("ShowBubble");
                $('#error_txtMessage').removeClass("HideBubble");
                $('#error_txtMessage').focus();
                $('#error_txtMessage').show();
                AutoHide("#error_txtMessage", "3000")
                return false;
            }
            }

            var EditPVCcid = '@ViewBag.PVCCID';
            function updateChatArea() {
                //alert('In updateChatArea');
            $.getJSON("@Url.Content("~/FinancePVCClaim/GetMessages/?id=")" + EditPVCcid, function (data) {

                $("#chatarea").html("");
                var x;
                if (data.suspectData.length > 0) {
                    for (var x = 0; x < data.suspectData.length; x++) {
                        if (data.suspectData[x].dataFloat == "R") {
                            $("#chatarea").html(
                                $("#chatarea").html() +
                                "<p class='mb - 0'>" +
                                data.suspectData[x].username + "  " + "=> " + data.suspectData[x].designation + "  on " + "<i>" +
                                data.suspectData[x].postDateTime + "</i>" + "</p>" +
                                "<p class='mb - 0 text-muted text-small'>" +
                                data.suspectData[x].messageBody + "</p>");
                        }
                        else {
                            $("#chatarea").html(
                                $("#chatarea").html() +
                                "<p class='mb - 0'>" +
                                data.suspectData[x].username + "  " + "=> " + data.suspectData[x].designation + "  on " + "<i>" +
                                data.suspectData[x].postDateTime + "</i>" + "</p>" +
                                "<p class='mb - 0 text-muted text-small'>" +
                                data.suspectData[x].messageBody + "</p>");
                        }
                    }
                    var elem = document.getElementById('chatarea');
                    elem.scrollTop = elem.scrollHeight;
                }
                else {
                    $("#chatarea").html("<p class='mb - 0'>No Messages</p>");
                }
            });
        }

        function updateChatAreamessages()
        {
            //alert('In updateChatAreamessages');
            var EditPVCcid = '@ViewBag.PVCCID';
            //$("#checkmark").show();
            //AutoHide("#checkmark", "1500")
            $.getJSON("@Url.Content("~/FinancePVCClaim/GetMessages/?id=")" + EditPVCcid, function (data) {

                $("#chatarea").html("");
                var x;
                if (data.suspectData.length > 0) {
                    for (var x = 0; x < data.suspectData.length; x++) {
                        if (data.suspectData[x].dataFloat == 'R') {
                            $("#chatarea").html(
                                $("#chatarea").html() +
                                "<p class='mb - 0'>" +
                                data.suspectData[x].username + "  " + "=> " + data.suspectData[x].designation + "  on " + "<i>" +
                                data.suspectData[x].postDateTime + "</i>" + "</p>" +
                                "<p class='mb - 0 text-muted text-small'>" +
                                data.suspectData[x].messageBody + "</p>");
                        }
                        else {
                            $("#chatarea").html(
                                $("#chatarea").html() +
                                "<p class='mb - 0'>" +
                                data.suspectData[x].username + "  " + "=> " + data.suspectData[x].designation + "  on " + "<i>" +
                                data.suspectData[x].postDateTime + "</i>" + "</p>" +
                                "<p class='mb - 0 text-muted text-small'>" +
                                data.suspectData[x].messageBody + "</p>");
                        }
                    }
                    var elem = document.getElementById('chatarea');
                    elem.scrollTop = elem.scrollHeight;
                }
                else {
                    $("#chatarea").html("<p class='mb - 0'>No Messages</p>");
                }
                });
        }


        function HideError(SpanID) {
            //alert('Hi');
            var ErrorMsgID = document.getElementById(SpanID);
            ErrorMsgID.className = "HideBubble";
            return false;
        }

        function AutoHide(SpanID, Duration) {
            var Pattern = /^\d+$/;
            var isNumber = Pattern.test(Duration);
            if (isNumber) {
                setTimeout(function () {
                    $(SpanID).addClass("HideBubble");
                    $(SpanID).removeClass("ShowBubble");
                }, Duration);
            }
        }


    </script>
}
