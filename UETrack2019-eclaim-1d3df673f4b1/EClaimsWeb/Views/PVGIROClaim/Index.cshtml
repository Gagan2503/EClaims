@*@model IEnumerable<EClaimsWeb.Models.PVGClaimVM>*@
@model PVGClaimsVM

@{
    ViewData["Title"] = "PV-Giro ";
}

@section Styles{
    <environment names="Development">
        <link rel="stylesheet" href="~/vendors/select2/select2.min.css" asp-append-version="true">
        <link rel="stylesheet" href="~/vendors/select2-bootstrap-theme/select2-bootstrap.min.css" asp-append-version="true">
        <link rel="stylesheet" href="~/vendors/datatables.net-bs4/dataTables.bootstrap4.css" asp-append-version="true" />
    </environment>

    <environment names="Staging,Production">
        <link rel="stylesheet" href="~/vendors/select2/select2.min.css" asp-append-version="true">
        <link rel="stylesheet" href="~/vendors/select2-bootstrap-theme/select2-bootstrap.min.css" asp-append-version="true">
        <link rel="stylesheet" href="~/vendors/datatables.net-bs4/dataTables.bootstrap4.css" asp-append-version="true" />
    </environment>
}
@if (ViewBag.Settings == "true")
{
    <div class="row" id="notification-row">
        <div class="col-md-12 grid-margin stretch-card">
            <div class="card card-inverse-danger">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-8">
                            <div class="d-flex flex-row align-items-center">
                                <i class="mdi mdi-alert icon-md text-danger"></i>
                                <div class="ml-3">
                                    <h6 class="text-facebook">Update Approver</h6>
                                    <p class="mt-2 text-muted card-text">Update your settings in case of your approver has been changed?</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4 align-self-center">
                            <a id="UserSettings" class="" asp-controller="UserSettings" asp-action="Index">Update Settings</a>
                            <a href="#" class="text-dark pl-2" onclick="$('#notification-row').toggle();">Dismiss</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div class="row" id="info-notification-row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card card-inverse-info">
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-8">
                        <div class="d-flex flex-row align-items-center">
                            <i class="mdi mdi-alert icon-md text-info"></i>
                            <div class="ml-3">
                                <h5 class="text-facebook">Import claim data</h5>
                                <p class="mt-2 text-muted card-text">You can import claim data using excel sheet. Please download the sample template by clicking on "Excel Template" button.</p>
                                <p class="mt-2 text-muted card-text">Please do not modify the file name while importing the claims.</p>

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4 align-self-end">
                        <a href="#" class="text-danger pl-2" onclick="$('#info-notification-row').toggle();">Dismiss</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12 summary-actions" id="btnRow">
        <div class="text-align-right mb-4">
            <a class="btn btn-primary btn-icon-text" asp-action="Create">
                Add New PV-Giro Claim
                <i class="mdi mdi-library-plus btn-icon-append"></i>
            </a>
            <button type="button" class="btn btn-success btn-icon-text" id="btnimportclaims" data-toggle="modal" data-target="#dynamic_popup">
                Import PV-Giro Claims
                <i class="mdi mdi-file-import btn-icon-append"></i>
            </button>

            <a class="btn btn-primary btn-icon-text" asp-action="ExcelDownload">
                Excel Template
                <i class="mdi mdi-file-excel btn-icon-append"></i>
            </a>
        </div>
    </div>
</div>
<div class="modal fade show" id="dynamic_popup" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">

                <h5 class="modal-title" id="ModalLabel">Import Claim</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>


            </div>
            <div class="modal-body">
                <form enctype="multipart/form-data" method="post" asp-action="ImportExcelFile">
                    <div class="form-group">
                        <div class="input-group col-xs-12">
                            <label>Upload PV-GIRO Claim Template</label>
                            <input type="file" name="FormFile" class="file-upload-default" id="FormFile" accept=".xls,.xlsx,.xlsm">
                            <div class="input-group col-xs-12">
                                <input id="fileInputTextClaim" type="text" class="form-control file-upload-info" disabled
                                       placeholder="Upload">
                                <span class="input-group-append">
                                    <button class="file-upload-browse btn btn-sm btn-primary" type="button">Upload</button>
                                </span>
                            </div>
                        </div>
                        <div class="input-group col-xs-12">
                            <label>Upload Supporting Documents</label>
                            <input type="file" name="FileInput" class="file-upload-default" multiple id="FileInput" accept=".gif,.jpg,.jpeg,.png,.doc,.docx,.csv,.xls,.pdf" onchange="ValidateSingleInput(this);">
                            <div class="input-group col-xs-12">
                                <input id="fileInputText" type="text" class="form-control file-upload-info" disabled
                                       placeholder="Upload">
                                <span class="input-group-append">
                                    <button class="file-upload-browse btn btn-sm btn-primary" type="button">Upload</button>
                                </span>
                            </div>
                            <br />
                            <span style="color: Red">(Supported File Types *.pdf;*.xls;*.csv;*.doc;*.docx;*.png;*.jpeg;*.jpg;*.gif)</span>
                            <p id="selectedFilesText" style="margin-top: 10px;"></p>
                            <div id="fileList"></div>
                        </div>
                        <div class="modal-footer">
                            <input class="btn btn-success" type="submit" value="Import" id="btnimport" onclick="return GetFileSize();" />

                            <input class="btn btn-light" data-dismiss="modal" value="Close" onclick="ClosePopUp()" style="width: 90px;" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="accordion accordion-solid-header" id="accordion-4" role="tablist">
    @if (Model.pvgClaimsDrafts.Count > 0)
    {
        <div class="card border-bottom">
            <div class="card-header" role="tab" id="heading-10">
                <h6 class="mb-0">
                    <a data-toggle="collapse" href="#collapse-10" aria-expanded="false" aria-controls="collapse-10" class="collapsed">
                        View Drafts
                    </a>
                </h6>
            </div>
            <div id="collapse-10" class="collapse" role="tabpanel" aria-labelledby="heading-10" data-parent="#accordion-4" style="">
                <div class="card-body">
                    <div class="row" id="ViewDetails1">
                        <div class="col-md-12 grid-margin stretch-card">
                            <div class="card">
                                <div class="card-body">
                                    <div class="row mt-4">
                                        <div class="col-12">
                                            <div class="table-responsive">
                                                <table id="order-listing" class="table table-bordered">
                                                    <thead>
                                                        <tr>
                                                            <th>
                                                                Claim #
                                                            </th>
                                                            <th>
                                                                Date Created
                                                            </th>
                                                            <th>
                                                                Facility
                                                            </th>
                                                            @*<th>
                                                                    Claim Type
                                                                </th>*@
                                                            @*<th>
                                                                    @Html.DisplayNameFor(model => model.MstExpenseCategory.Description)
                                                                </th>*@
                                                            <th>
                                                                Contact Number
                                                            </th>
                                                            <th>
                                                                Total Claim
                                                            </th>
                                                            @*<th>
                                                                    @Html.DisplayNameFor(model => model.Approver)
                                                                </th>*@
                                                            @*<th>
                                                                    Status
                                                                </th>*@
                                                            <th>Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var item in Model.pvgClaimsDrafts)
                                                        {
                                                            <tr>
                                                                <td>
                                                                    @Html.DisplayFor(modelItem => item.PVGCNo)
                                                                </td>
                                                                <td>
                                                                    @Html.DisplayFor(modelItem => item.CreatedDate)
                                                                </td>
                                                                <td>
                                                                    @Html.DisplayFor(modelItem => item.FacilityName)
                                                                </td>
                                                                @*<td>
                                                                        @Html.DisplayFor(modelItem => item.ClaimType)
                                                                    </td>*@
                                                                <td>
                                                                    @Html.DisplayFor(modelItem => item.Phone)
                                                                </td>
                                                                <td class="text-align-right">
                                                                    $@Math.Round((decimal)item.GrandTotal, (int)3).ToString("#,##0.00")
                                                                </td>

                                                                <td>
                                                                    @Html.ActionLink("Edit", "CreateDraft", new { id = item.PVGCID, Updatestatus = "Edit" }, new { @class = "btn btn-outline-primary" })
                                                                    @Html.ActionLink("Delete", "DeletePVGDraft", new { id = item.PVGCID, Updatestatus = "Delete" }, new { @class = "btn btn-outline-primary", onclick = "return confirm('Do you really want to delete this draft item?')" })
                                                                </td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    }
</div>
<div class="row" id="ViewDetails">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="mb-0 font-weight-bold">View PV-Giro Claim</h4>
                <div class="row mt-4">
                    <div class="col-12">
                        <div class="table-responsive">
                            <table id="order-listing2" class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>
                                            Claim #
                                        </th>
                                        <th>
                                            Voucher No
                                        </th>
                                        <th>
                                            Date Created
                                        </th>
                                        <th>
                                            Facility
                                        </th>
                                        <th>
                                            Payee
                                        </th>
                                        @*<th>
                                                Claim Type
                                            </th>*@
                                        @*<th>
                                                @Html.DisplayNameFor(model => model.MstExpenseCategory.Description)
                                            </th>*@
                                        <th>
                                            Contact Number
                                        </th>
                                        <th>
                                            Total Claim
                                        </th>
                                         @*<th>
            @Html.DisplayNameFor(model => model.Approver)
        </th>*@
                                        <th>
                                            Approver
                                        </th>
                                        <th>
                                            Status
                                        </th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.pvgClaims)
                                    {
                                        <tr>
                                            <td>
                                                @*@Html.DisplayFor(modelItem => item.ECNo)*@
                                                @Html.ActionLink(item.PVGCNo, "Details", new { id = item.PVGCID }, new { @class = "" })
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.VoucherNo)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.CreatedDate)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.FacilityName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.PayeeName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Phone)
                                            </td>
                                            <td class="text-align-right">
                                                $@Math.Round((decimal)item.GrandTotal, (int)2).ToString("###,##,##0.00")
                                            </td>
                                            <td>
                                                @if (item.ApprovalStatus != 3 && item.ApprovalStatus != 4 && item.ApprovalStatus != -5 && item.ApprovalStatus != 5)
                                                {
                                                    @Html.DisplayFor(modelItem => item.Approver)
                                                }
                                            </td>
                                            <td>
                                                @if (item.ApprovalStatus == 3)
                                                {
                                                    <label class="badge badge-success">Approved</label>
                                                }
                                                else if (item.ApprovalStatus == 1)
                                                {
                                                    <label class="badge badge-outline-info">Awaiting verification</label>
                                                }
                                                else if (item.ApprovalStatus == 2)
                                                {
                                                    <label class="badge badge-danger">Awaiting Signatory approval</label>
                                                }
                                                else if (item.ApprovalStatus == 4)
                                                {
                                                    <label class="badge badge-danger">Request to Amend</label>
                                                }
                                                else if (item.ApprovalStatus == -5)
                                                {
                                                    <label class="badge badge-danger">Requested for Void</label>
                                                }
                                                else if (item.ApprovalStatus == 5)
                                                {
                                                    <label class="badge badge-danger">Voided</label>
                                                }
                                                else if (item.ApprovalStatus == 6)
                                                {
                                                    <label class="badge badge-danger">Awaiting approval</label>
                                                }
                                                else if (item.ApprovalStatus == 7)
                                                {
                                                    <label class="badge badge-danger">Awaiting HOD approval</label>
                                                }
                                                else if (item.ApprovalStatus == 9)
                                                {
                                                    <label class="badge badge-danger">Exported to AccPac</label>
                                                }
                                                else if (item.ApprovalStatus == 10)
                                                {
                                                    <label class="badge badge-danger">Exported to Bank</label>
                                                }
                                            </td>
                                            <td>
                                                @if (item.ApprovalStatus == 4 || (item.AVerifier == item.DVerifier && item.AApprover == item.DApprover && item.AUserApprovers == item.DUserApprovers && item.AHODApprover == item.DHODApprover))
                                                {
                                                    @Html.ActionLink("Edit", "Create", new { id = item.PVGCID, Updatestatus = "Edit" }, new { @class = "btn btn-outline-primary" })
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <environment names="Development">
        <script src="~/vendors/typeahead.js/typeahead.bundle.min.js" asp-append-version="true"></script>
        <script src="~/vendors/select2/select2.min.js" asp-append-version="true"></script>
        <script src="~/vendors/datatables.net/jquery.dataTables.js" asp-append-version="true"></script>
        <script src="~/vendors/datatables.net-bs4/dataTables.bootstrap4.js" asp-append-version="true"></script>
        <script src="~/js/file-upload.js"></script>
        <script src="~/js/typeahead.js"></script>
        <script src="~/js/select2.js"></script>
        <script src="~/js/data-table.js"></script>
        <script src="~/vendors/jquery-toast-plugin/jquery.toast.min.js"></script>
        <script src="~/js/toastNotifications.js"></script>
    </environment>

    <environment names="Staging,Production">
        <script src="~/vendors/typeahead.js/typeahead.bundle.min.js" asp-append-version="true"></script>
        <script src="~/vendors/select2/select2.min.js" asp-append-version="true"></script>
        <script src="~/vendors/datatables.net/jquery.dataTables.js" asp-append-version="true"></script>
        <script src="~/vendors/datatables.net-bs4/dataTables.bootstrap4.js" asp-append-version="true"></script>
        <script src="~/js/file-upload.js"></script>
        <script src="~/js/typeahead.js"></script>
        <script src="~/js/select2.js"></script>
        <script src="~/js/data-table.js"></script>
        <script src="~/vendors/jquery-toast-plugin/jquery.toast.min.js"></script>
        <script src="~/js/toastNotifications.js"></script>
    </environment>
    @if (TempData["Message"] != null)
    {
        <script type="text/javascript">
            $.toast({
                text: "@TempData["Message"]",
                hideAfter: true,
                position: 'top-right',
                icon: 'success',
                allowToastClose: false,
                hideAfter: 10000,
             });</script>
    }
    <script type="text/jscript">
        var Params = [];

        var fileListArr = [];
        var _validFileExtensions = [".jpg", ".jpeg", ".bmp", ".gif", ".png", ".doc", ".docx", ".csv", ".xls", ".pdf"];
        function ValidateSingleInput(oInput) {
            if (oInput.type == "file") {
                for (var i = 0; i < oInput.files.length; ++i) {
                    var blnValid = false;
                    var sFileName = oInput.files[i].name;
                    if (sFileName.length > 0) {
                        for (var j = 0; j < _validFileExtensions.length; j++) {
                            var sCurExtension = _validFileExtensions[j];
                            if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                                blnValid = true;
                                break;
                            }
                        }
                        if (!blnValid) {
                            alert("Sorry, " + sFileName + " is invalid, allowed extensions are: " + _validFileExtensions.join(", "));
                            oInput.value = "";
                            return false;
                        }
                        else {
                            fileListArr.push(oInput.files[i]);
                        }
                    }
                }
                displaySelectedFilesList();
            }
            return true;
        }

        function deleteFile(fileName) {
            var newList = [];
            for (var i = 0; i < fileListArr.length; ++i) {
                var sFileName = fileListArr[i].name;
                if (sFileName === fileName) {
                    /*fileListArr.splice(i, 1);*/
                }
                else {
                    newList.push(fileListArr[i]);
                }
            }
            fileListArr = newList;
            displaySelectedFilesList();
        }

        function displaySelectedFilesList() {
            var output = document.getElementById('fileList');
            var selectedFilesText = document.getElementById('selectedFilesText');
            output.innerHTML = '';
            var children = "";

            for (var i = 0; i < fileListArr.length; ++i) {
                var sFileName = fileListArr[i].name;
                var file = URL.createObjectURL(fileListArr[i]);
                children += '<li>' + '<a href="' + file + '" target="_blank">' + sFileName + '</a><button class="close" aria-label="Close" onclick="deleteFile(\'' + sFileName + '\')"><span aria-hidden="true">&times;</span ></button><br>' + '</li>';
            }
            output.innerHTML = '<ul>' + children + '</ul>';
            selectedFilesText.innerHTML = "Selected files:";

            var textMessage = "";
            if (fileListArr.length > 0) {
                textMessage = "Selected " + fileListArr.length + " File(s)";
            }
            else {
                textMessage = "Upload";
                selectedFilesText.innerHTML = '';
            }

            $("#fileInputText").val(textMessage);
        }

        $(document).ready(function () {
            $('#dynamic_popup').on('hidden.bs.modal', function () {
                $('#dynamic_popup form')[0].reset();
            });
        });

        function ClosePopUp() {
            window.location.reload(1);
        }

        //get file size
        function GetFileSize() {

            if ($("#FormFile").val() == "") {

                alert("Please Select File");
                $("#dynamic_popup").modal("hide");
                return false;


            }
            else {

                return checkfile();

            }


        }

        function checkfile() {


            var file = $("#FormFile").val();

            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                // alert(extension);
                switch (extension) {
                    case 'xls':
                    case 'xlsx':
                    case 'xlsm':

                        flag = true;
                        return filechecking();
                        break;
                    default:
                        flag = false;

                }
            }
            if (flag == false) {
                alert("You can upload only xls,xlsx,xlsm extension file");
                $("#dynamic_popup").modal("hide");
                return false;



            }

        }

        function filechecking() {
            var file = $("#FormFile").val();

            var filename = file.replace(/^.*[\\\/]/, '')


            var e = filename.substring(0, 6);


            if (e == "PVGiro") {
                return true;

            }
            else {
                alert("Unable to upload the File,please Check the File Name(PV-Giro).")

                $("#dynamic_popup").modal("hide");
                return false;
            }


        }

    </script>
}
