@model EClaimsEntities.Models.MstExpenseCategory

@{
    var error = TempData["Error"] as string;
    ViewData["Title"] = "Manage Expense Category ";
}

<div class="col-md-12 grid-margin stretch-card" id="Update">
    <div class="card">
        <div class="card-body">
            <h4 class="mb-0 font-weight-bold">Update Expense Category</h4>
            <form class="forms-sample mt-4" asp-action="Edit" asp-controller="ExpenseCategory">
                @if (!string.IsNullOrEmpty(error))
                {
                    <span class="alert-danger">@error</span>
                }
                <label id="msg" class="alert-danger"></label>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="ExpenseCategoryID" />
                @*<div class="col-md-6">*@
                <div class="row">
                    <div class="form-group col-md-6">
                        <label asp-for="CategoryCode" class="control-label required"></label>
                        <input asp-for="CategoryCode" class="form-control required" ondrop='return false;' onkeypress='return isNumber(event)' onpaste='return false' />
                        <span asp-validation-for="CategoryCode" class="text-danger"></span>
                    </div>
                    <div class="form-group col-md-6">
                        <label asp-for="Description" class="control-label required"></label>
                        <input asp-for="Description" class="form-control required" id="Description" />
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <label asp-for="Default" class="control-label required"></label>
                        <input asp-for="Default" class="form-control required" id="Default" ondrop='return false;' onkeypress='return isNumber(event)' onpaste='return false' />
                        <span asp-validation-for="Default" class="text-danger"></span>
                    </div>
                    <div class="col-md-6" form-group>
                        <label asp-for="CostTypeID" class="control-label"></label>
                        <select asp-for="CostTypeID" class="form-control" asp-items="ViewBag.CostTypeID"></select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6" form-group>
                        <label asp-for="CostStructureID" class="control-label"></label>
                        <select asp-for="CostStructureID" class="form-control" asp-items="ViewBag.CostStructureID"></select>
                    </div>
                    <div class="form-group col-md-6">
                        <label asp-for="ExpenseCode" class="control-label required"></label>
                        <input asp-for="ExpenseCode" class="form-control required" id="ExpenseCode" ondrop='return false;' onkeypress='return isNumber(event)' onpaste='return false' />
                        <span asp-validation-for="Default" class="text-danger"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 form-group">
                        <label asp-for="ClaimTypeID" class="control-label"></label>
                        <select asp-for="ClaimTypeID" class="form-control" asp-items="ViewBag.ClaimTypeID"></select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 form-group">
                        <div class="form-check form-check-flat form-check-primary">
                            <label class="form-check-label">
                                <input class="form-check-input" asp-for="IsActive" />
                                @Html.DisplayNameFor(model => model.IsActive)
                            </label>
                        </div>
                    </div>
                    <div class="col-md-6 form-group">
                        <div class="form-check form-check-flat form-check-primary">
                            <label class="form-check-label">
                                <input class="form-check-input" asp-for="IsGSTRequired" />
                                @Html.DisplayNameFor(model => model.IsGSTRequired)
                            </label>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <button type="submit" value="Create" class="btn btn-primary mr-2">Update Expense Category</button>
                    <a class="btn btn-danger mr-2 cancel" asp-action="Index">Close</a>
                    <input type="reset" value="Reset" class="btn btn-light" onclick="return ClearData();" />
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
    function ClearData() {
        $('#CategoryCode').val = null;
        $('#Description').val = null;
        $('#Default').val = null;
        $('#ExpenseCode').val = null;
        $('#CostTypeID').removeAttr('selected').find('option:first').attr('selected', 'selected');
        $('#CostStructureID').removeAttr('selected').find('option:first').attr('selected', 'selected');
        $('#ClaimTypeID').removeAttr('selected').find('option:first').attr('selected', 'selected');
        $('#IsActive').val = null;
        $('#IsGSTRequired').val = null;
    }

    $(document).ready(function () {

        $('#btnSubmit').click(function () {

            if ($("#expForm").valid()) { //check if form is valid using model annotation
                $('#expForm').submit();
            }
            else {
                return false;
            }
        });
        $("#expForm").on("submit", function (event) {
            event.preventDefault();
            $('#btnSubmit').attr('disabled', 'disabled');
            //var url = $(this).attr("action");
            var formData = $(this).serialize();

            //var userDetails = {};

            //userDetails.CategoryCode = $("#CategoryCode").val();
            //userDetails.Description = $("#Description").val();
            //userDetails.Default = $("#Default").val();
            //userDetails.ExpenseCode = $("#ExpenseCode").val();
            //userDetails.CostTypeID = $("#CostTypeID").val();
            //userDetails.CostStructureID = $("#CostStructureID").val();
            //userDetails.ClaimTypeID = $("#ClaimTypeID").val();
            //userDetails.IsActive = $("#IsActive").val();
            //userDetails.IsGSTRequired = $("#IsGSTRequired").val();


            //var jsonData = JSON.stringify({
            //    userDetails: userDetails
            //});

            $.ajax({
                url: "/ExpenseCategory/Edit",
                type: "POST",
                data: formData,
                dataType: "json",
                success: function (response) {
                    if (response.res == 'success') {
                        $("#msg").html("Expense Category updated successfully").css("color", "green");
                        window.location.href = "/ExpenseCategory/Index/";
                    }
                    else {
                        $("#msg").html(response.res).css("color", "green");
                        $('#btnSubmit').removeAttr('disabled');
                    }
                    // alert('Success! ' + JSON.stringify(response));
                },
                error: function (response) {
                    $("#msg").html("Error while updating Expense Category  ").css("color", "green");
                },
                complete: function () {
                    $('#btnSubmit').removeAttr('disabled');

                }
            })
        });
    });

    function isNumber(evt) {
        //alert("number");
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 47 || charCode > 57) && charCode != 44) {
            return false;
        }
    }
</script>
}
