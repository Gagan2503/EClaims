@model EClaimsWeb.Models.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}


@section Styles{
    <environment names="Development">
        <link rel="stylesheet" href="~/vendors/select2/select2.min.css" asp-append-version="true">
        <link rel="stylesheet" href="~/vendors/select2-bootstrap-theme/select2-bootstrap.min.css" asp-append-version="true">
        <link rel="stylesheet" href="~/vendors/datatables.net-bs4/dataTables.bootstrap4.css" asp-append-version="true" />
        <link rel="stylesheet" href="~/vendors/bootstrap-datepicker/bootstrap-datepicker.min.css">
        <link rel="stylesheet" href="~/css/style.css">
        <link rel="stylesheet" href="~/css/site.css">
    </environment>

    <environment names="Staging,Production">
        <link rel="stylesheet" href="~/vendors/select2/select2.min.css" asp-append-version="true">
        <link rel="stylesheet" href="~/vendors/select2-bootstrap-theme/select2-bootstrap.min.css" asp-append-version="true">
        <link rel="stylesheet" href="~/vendors/datatables.net-bs4/dataTables.bootstrap4.css" asp-append-version="true" />
        <link rel="stylesheet" href="~/vendors/bootstrap-datepicker/bootstrap-datepicker.min.css">
        <link rel="stylesheet" href="~/css/style.css">
        <link rel="stylesheet" href="~/css/site.css">
    </environment>
    <style>
        .HideBubble {
            display: none;
        }
    </style>
}

<div class="dashboard-header d-flex flex-column grid-margin">
    <div class="d-md-flex align-items-center justify-content-between flex-wrap">
        <div class="d-flex align-items-center">
        </div>
        <div class="d-flex mt-3 mt-lg-0">
            <div class="d-none d-md-flex">
                <div class="d-flex align-items-center mr-3">
                    Quick links:
                </div>
                <div class="d-flex align-items-center mr-3">
                    <a href="/ExpenseClaim/Create">
                        <i class="mdi mdi-plus btn-icon-prepend"></i>New Expense Claim
                    </a>
                </div>
                <div class="d-flex align-items-center mr-3">
                    <a href="/MileageClaim/Create">
                        <i class="mdi mdi-plus btn-icon-prepend"></i>New Mileage Claim
                    </a>
                </div>
                <div class="d-flex align-items-center mr-3">
                    <a href="/PVChequeClaim">
                        <i class="mdi mdi-plus btn-icon-prepend"></i>New PV-Cheque
                    </a>
                </div>
                <div class="d-flex align-items-center mr-3">
                    <a href="/PVGIROClaim">
                        <i class="mdi mdi-plus btn-icon-prepend"></i>New PV-GIRO
                    </a>
                </div>
            </div>
            <div class="btn-group mt-3 mt-md-0 d-none" role="group" aria-label="Button group">
                <button type="button" class="btn btn-outline-secondary border">
                    <i class="mdi mdi-magnify text-body"></i>
                </button>
                <button type="button" class="btn btn-outline-secondary border">
                    <i class="mdi mdi-reload text-body"></i>
                </button>
                <button type="button" class="btn btn-outline-secondary border">
                    <i class="mdi mdi-chart-line text-body"></i>
                </button>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12 col-sm-6 col-md-6 col-xl-3 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center mb-2 mb-md-0">
                    <i class="mdi mdi-timelapse icon-md mr-3 text-info"></i>
                    <div>
                        <p class="mb-1">Awaiting my verification</p>
                        <div class="d-flex align-items-center">
                            <h4 class="mb-0 mr-2 font-weight-bold">@Model.VerificationCount</h4>
                            <p class="tx-12 mb-0 text-info"></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-6 col-md-6 col-xl-3 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center mb-2 mb-md-0 mt-2 mt-md-0">
                    <i class="mdi mdi-timer-sand icon-md mr-3 text-danger"></i>
                    <div>
                        <p class="mb-1">Awaiting my approval</p>
                        <div class="d-flex align-items-center">
                            <h4 class="mb-0 mr-2 font-weight-bold">@Model.ApprovalCount</h4>
                            <p class="tx-12 mb-0 text-danger"></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-6 col-md-6 col-xl-3 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center mt-2 mt-md-0">
                    <i class="mdi mdi-timetable icon-md mr-3 text-success"></i>
                    <div>
                        <p class="mb-1">Submitted This Year</p>
                        <div class="d-flex align-items-center">
                            <h4 class="mb-0 mr-2 font-weight-bold">@Model.CurrentYearCount</h4>
                            <p class="tx-12 mb-0 text-success"></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-6 col-md-6 col-xl-3 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="d-flex align-items-center mt-2 mt-md-0">
                    <i class="mdi mdi-timetable icon-md mr-3 text-success"></i>
                    <div>
                        <p class="mb-1">Submitted Till Now</p>
                        <div class="d-flex align-items-center">
                            <h4 class="mb-0 mr-2 font-weight-bold">@Model.OverallCount</h4>
                            <p class="tx-12 mb-0 text-success"></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-6 grid-margin grid-margin-md-0 stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="chartjs-size-monitor">
                    <div class="chartjs-size-monitor-expand">
                        <div class=""></div>
                    </div>
                    <div class="chartjs-size-monitor-shrink">
                        <div class=""></div>
                    </div>
                </div>
                <h4 class="card-title">User Claims received / approved this month</h4>
                <canvas id="userClaimsChart" style="display: block; width: 100%; height: 100%;" class="chartjs-render-monitor"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-6 grid-margin grid-margin-md-0 stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="chartjs-size-monitor">
                    <div class="chartjs-size-monitor-expand">
                        <div class=""></div>
                    </div>
                    <div class="chartjs-size-monitor-shrink">
                        <div class=""></div>
                    </div>
                </div>
                <h4 class="card-title">HR Claims received / approved this month</h4>
                <canvas id="hrbarChart" style="display: block; width: 100%; height: 100%;" class="chartjs-render-monitor"></canvas>
            </div>
        </div>
    </div>
</div>
<div class="row mt-4">
    <div class="col-md-8 grid-margin grid-margin-md-0 stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Pending Approvals/Verifications</h4>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="pt-1 pl-0">
                                    Claim #
                                </th>
                                <th class="pt-1 pl-0">
                                    Claim Type
                                </th>
                                <th class="pt-1">
                                    Requester
                                </th>
                                <th class="pt-1">
                                    Date Requested
                                </th>
                                <th class="text-align-right">
                                    Claim Amount
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.customClaimVMs)
                            {
                                <tr>
                                    <td>
                                        @*@Html.ActionLink(item.CNO, "Details", new { id = item.CID, cno = item.CNO }, new { @class = "" })*@
                                        @Html.DisplayFor(modelItem => item.CNO)
                                    </td>
                                    @if (item.CNO.Contains("HPVG"))
                                    {
                                        <td class="py-1 pl-0">
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <p class="mb-0">HR PV-GIRO</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    else if (item.CNO.Contains("PVG"))
                                    {
                                        <td class="py-1 pl-0">
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <p class="mb-0">PV-GIRO</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    else if (item.CNO.Contains("HPVC"))
                                    {
                                        <td class="py-1 pl-0">
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <p class="mb-0">HR PV-Cheque</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    else if (item.CNO.Contains("PVC"))
                                    {
                                        <td class="py-1 pl-0">
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <p class="mb-0">PV-Cheque</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    else if (item.CNO.Contains("EC"))
                                    {
                                        <td class="py-1 pl-0">
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <p class="mb-0">Expense Claim</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    else if (item.CNO.Contains("TB"))
                                    {
                                        <td class="py-1 pl-0">
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <p class="mb-0">TelephoneBill Claim</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="py-1 pl-0">
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <p class="mb-0">Mileage Claim</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CreatedDate)
                                    </td>
                                    <td class="text-align-right">
                                        $@Math.Round((decimal)item.TotalAmount, (int)2).ToString("###,##,##0.00")
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4 grid-margin grid-margin-md-0 stretch-card">
        <div class="card">
            <div class="card-body" style="height: 300px;">
                <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
                <h4 class="card-title">Submitted Claims</h4>
                <canvas id="submitted-claims-pie" style="display: block; width: 100%; height: 100%;" class="chartjs-render-monitor"></canvas>
            </div>
        </div>
    </div>
</div>
<div class="row mt-4">
    <div class="col-md-12 grid-margin grid-margin-md-0 stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">My Claims</h4>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="pt-1 pl-0">
                                    Claim #
                                </th>
                                <th class="pt-1 pl-0">
                                    Claim Type
                                </th>
                                <th class="pt-1">
                                    Status
                                </th>
                                <th class="pt-1">
                                    Payment Status
                                </th>
                                <th class="pt-1">
                                    Date Requested
                                </th>
                                <th class="text-align-right">
                                    Claim Amount
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.customUserClaimVMs)
                            {
                                <tr>
                                    <td>
                                        @*@Html.ActionLink(item.CNO, "Details", new { id = item.CID, cno = item.CNO }, new { @class = "" })*@
                                        @Html.DisplayFor(modelItem => item.CNO)
                                    </td>
                                    @if (item.CNO.Contains("HPVG"))
                                    {
                                        <td class="py-1 pl-0">
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <p class="mb-0">HR PV-GIRO</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    else if (item.CNO.Contains("PVG"))
                                    {
                                        <td class="py-1 pl-0">
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <p class="mb-0">PV-GIRO</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    else if (item.CNO.Contains("HPVC"))
                                    {
                                        <td class="py-1 pl-0">
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <p class="mb-0">HR PV-Cheque</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    else if (item.CNO.Contains("PVC"))
                                    {
                                        <td class="py-1 pl-0">
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <p class="mb-0">PV-Cheque</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    else if (item.CNO.Contains("EC"))
                                    {
                                        <td class="py-1 pl-0">
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <p class="mb-0">Expense Claim</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    else if (item.CNO.Contains("TB"))
                                    {
                                        <td class="py-1 pl-0">
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <p class="mb-0">TelephoneBill Claim</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="py-1 pl-0">
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <p class="mb-0">Mileage Claim</p>
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    <td>
                                        @if (item.ApprovalStatus == 3)
                                        {
                                            <label class="badge badge-success">Approved</label>
                                        }
                                        else if (item.ApprovalStatus == 1)
                                        {
                                            <label class="badge badge-outline-info">Awaiting verification</label>
                                        }
                                        else if (item.ApprovalStatus == 2)
                                        {
                                            <label class="badge badge-danger">Awaiting Signatory approval</label>
                                        }
                                        else if (item.ApprovalStatus == 4)
                                        {
                                            <label class="badge badge-danger">Request to Amend</label>
                                        }
                                        else if (item.ApprovalStatus == -5)
                                        {
                                            <label class="badge badge-danger">Requested for Void</label>
                                        }
                                        else if (item.ApprovalStatus == 5)
                                        {
                                            <label class="badge badge-danger">Voided</label>
                                        }
                                        else if (item.ApprovalStatus == 6)
                                        {
                                            <label class="badge badge-danger">Awaiting approval</label>
                                        }
                                        else if (item.ApprovalStatus == 7)
                                        {
                                            <label class="badge badge-danger">Awaiting HOD approval</label>
                                        }
                                        else if (item.ApprovalStatus == 9)
                                        {
                                            <label class="badge badge-danger">Exported to AccPac</label>
                                        }
                                        else if (item.ApprovalStatus == 10)
                                        {
                                            <label class="badge badge-danger">Exported to Bank</label>
                                        }
                                    </td>
                                    <td>
                                        @if (item.ApprovalStatus == 10)
                                        {
                                            <label class="badge badge-success">Paid</label>
                                        }
                                        else
                                        {
                                            <label class="badge badge-outline-info">Not Paid</label>
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CreatedDate)
                                    </td>
                                    <td class="text-align-right">
                                        $@Math.Round((decimal)item.TotalAmount, (int)2).ToString("###,##,##0.00")
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    @*<div class="col-md-4 grid-margin grid-margin-md-0 stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Activities</h4>
                <ul id="dashboardupdates" class="bullet-line-list pt-2 mb-0">
                    <li>
                        <p class="timeline-content"><a href="#">Teresa</a> has updated approval matrix for facility KKH</p>
                        <p class="text-muted mb-3 tx-12">
                            <i class="mdi mdi-clock-outline"></i>
                            Just now
                        </p>
                    </li>
                    <li>
                        <p class="timeline-content"><a href="#">Teresa</a> has updated verfier for facility KKH</p>
                        <p class="text-muted mb-3 tx-12">
                            <i class="mdi mdi-clock-outline"></i>
                            Just now
                        </p>
                    </li>
                    <li>
                        <p class="timeline-content"><a href="#">Teresa</a> has updated verfier for facility KKH</p>
                        <p class="text-muted mb-3 tx-12">
                            <i class="mdi mdi-clock-outline"></i>
                            Just now
                        </p>
                    </li>
                    <li>
                        <p class="timeline-content"><a href="#">Alina</a> has updated her bank account details</p>
                        <p class="text-muted mb-0">
                            <i class="mdi mdi-clock-outline"></i>
                            Just now
                        </p>
                    </li>
                </ul>
                <a href="#" class="d-block mt-3">Show all</a>
            </div>
        </div>
    </div>*@
</div>

@section scripts
{
    <environment names="Development">
        <script src="~/vendors/typeahead.js/typeahead.bundle.min.js" asp-append-version="true"></script>
        <script src="~/vendors/moment/moment.min.js"></script>
        <script src="~/vendors/bootstrap-datepicker/bootstrap-datepicker.min.js"></script>
        <script src="~/vendors/select2/select2.min.js" asp-append-version="true"></script>
        <script src="~/vendors/datatables.net/jquery.dataTables.js" asp-append-version="true"></script>
        <script src="~/vendors/datatables.net-bs4/dataTables.bootstrap4.js" asp-append-version="true"></script>
        <script src="~/vendors/chart.js/Chart.min.js" asp-append-version="true"></script>
        <script src="~/js/file-upload.js"></script>
        <script src="~/js/typeahead.js"></script>
        <script src="~/js/select2.js"></script>
        <script src="~/js/data-table.js"></script>
        <script src="~/vendors/jquery-toast-plugin/jquery.toast.min.js"></script>
        <script src="~/js/toastNotifications.js"></script>
    </environment>

    <environment names="Staging,Production">
        <script src="~/vendors/typeahead.js/typeahead.bundle.min.js" asp-append-version="true"></script>
        <script src="~/vendors/moment/moment.min.js"></script>
        <script src="~/vendors/bootstrap-datepicker/bootstrap-datepicker.min.js"></script>
        <script src="~/vendors/select2/select2.min.js" asp-append-version="true"></script>
        <script src="~/vendors/datatables.net/jquery.dataTables.js" asp-append-version="true"></script>
        <script src="~/vendors/datatables.net-bs4/dataTables.bootstrap4.js" asp-append-version="true"></script>
        <script src="~/js/file-upload.js"></script>
        <script src="~/js/typeahead.js"></script>
        <script src="~/js/select2.js"></script>
        <script src="~/js/data-table.js"></script>
        <script src="~/vendors/jquery-toast-plugin/jquery.toast.min.js"></script>
        <script src="~/js/toastNotifications.js"></script>
    </environment>


    @if (TempData["Message"] != null)
    {
        <script type="text/javascript">
            $.toast({
                text: "@TempData["Message"]",
                hideAfter: true,
                position: 'top-right',
                icon: 'success',
                allowToastClose: false,
                hideAfter: 10000,
            });
        </script>
    }

<script>
        $('input[type=radio]').on('change', function () {
            $("form").submit();
        });

        $(document).on('click', '.filterCollapse', function (e) {
            if ($('#collapse-10').hasClass('show')) {
                $('#collapse-10').removeClass('show');
            }
        });

        // Background Colors
        const backColor1 = [
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 99, 132, 0.2)'
        ];
        const backColor2 = [
            'rgba(54, 162, 235, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(54, 162, 235, 0.2)'
        ];

        // Border Colors
        const borderColor1 = [
            'rgba(255,99,132,1)',
            'rgba(255,99,132,1)',
            'rgba(255,99,132,1)',
            'rgba(255,99,132,1)',
            'rgba(255,99,132,1)',
            'rgba(255,99,132,1)',
            'rgba(255,99,132,1)',
            'rgba(255,99,132,1)',
            'rgba(255,99,132,1)',
            'rgba(255,99,132,1)'
        ];
        const borderColor2 = [
            'rgba(54, 162, 235, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(54, 162, 235, 1)'
        ];

        // User Claims Charts
        var userClaims = document.getElementById("userClaimsChart");
        var userChart = new Chart(userClaims, {
            type: 'bar',
            data: {
                labels: ["Expense Claim", "Mileage Claim", "Telephone Bill", "PV-Cheque", "PV-GIRO"], // Add if any new claim
                datasets: [{
                    label: 'Received',
                    data: @Html.Raw(ViewBag.ReceivedCounts), // these are the values which needs to be dynamically binded
                    backgroundColor: backColor1,
                    borderColor: borderColor1,
                    borderWidth: 1
                },
                {
                    label: 'Approved',
                    data: @Html.Raw(ViewBag.ApprovedCounts), // these are the values which needs to be dynamically binded
                    backgroundColor: backColor2,
                    borderColor: borderColor2,
                    borderWidth: 1
                }]
            },
            options: {
                layout: {
                    padding: {
                        left: 0,
                        right: 0,
                        top: 15,
                        bottom: 0
                    }
                },
                responsive: false,
                showDatapoints: true,
                legend: {
                    position: 'bottom'
                },
                scales: {
                    xAxes: [{
                        gridLines: {
                            offsetGridLines: true // à rajouter
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
                animation: {
                    duration: 1,
                    onComplete: function () {
                        var chartInstance = this.chart,
                            ctx = chartInstance.ctx;
                        ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                        ctx.textAlign = 'center';
                        ctx.textBaseline = 'bottom';

                        this.data.datasets.forEach(function (dataset, i) {
                            var meta = chartInstance.controller.getDatasetMeta(i);
                            meta.data.forEach(function (bar, index) {
                                if (dataset.data[index] > 0) {
                                    var data = dataset.data[index];
                                    ctx.fillText(data, bar._model.x, bar._model.y);
                                }
                            });
                        });
                    }
                }
            }
        });

        // HR Claims Charts
        var hrClaims = document.getElementById("hrbarChart");
        var hrChart = new Chart(hrClaims, {
            type: 'bar',
            data: {
                labels: ["HR PV-Cheque", "HR PV-GIRO"], // Add if any new claim
                datasets: [{
                    label: 'Received',
                    data: @Html.Raw(ViewBag.HRReceivedCounts), // these are the values which needs to be dynamically binded
                    backgroundColor: backColor1,
                    borderColor: borderColor1,
                    borderWidth: 1
                },
                {
                    label: 'Approved',
                    data: @Html.Raw(ViewBag.HRApprovedCounts), // these are the values which needs to be dynamically binded
                    backgroundColor: backColor2,
                    borderColor: borderColor2,
                    borderWidth: 1
                }]
            },
            options: {
                layout: {
                    padding: {
                        left: 0,
                        right: 0,
                        top: 15,
                        bottom: 0
                    }
                },
                responsive: false,
                showDatapoints: true,
                legend: {
                    position: 'bottom'
                },
                scales: {
                    xAxes: [{
                        gridLines: {
                            offsetGridLines: true // à rajouter
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
                animation: {
                    duration: 1,
                    onComplete: function () {
                        var chartInstance = this.chart,
                            ctx = chartInstance.ctx;
                        ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                        ctx.textAlign = 'center';
                        ctx.textBaseline = 'bottom';

                        this.data.datasets.forEach(function (dataset, i) {
                            var meta = chartInstance.controller.getDatasetMeta(i);
                            meta.data.forEach(function (bar, index) {
                                if (dataset.data[index] > 0) {
                                    var data = dataset.data[index];
                                    ctx.fillText(data, bar._model.x, bar._model.y);
                                }
                            });
                        });
                    }
                }
            }
        });

        // PIE Chart
        var pieClaims = document.getElementById("submitted-claims-pie");
        var pieChart = new Chart(pieClaims, {
            type: 'pie',
            data: {
                labels: ['Mileage Claim', 'Expense Claim', 'TelephoneBill Claim', 'PV-Cheque Claim', 'PV-GIRO Claim', 'HR PV-Cheque Claim', 'HR PV-GIRO Claim'], // Add if any new claim
                datasets: [{
                    data: @Html.Raw(ViewBag.UserSubmittedClaimsCount),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.5)',
                        'rgba(54, 162, 235, 0.5)',
                        'rgba(255, 206, 86, 0.5)',
                        'rgba(75, 192, 192, 0.5)',
                        'rgba(153, 102, 255, 0.5)',
                        'rgba(255, 159, 64, 0.5)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                }]
            },
            options: {
                responsive: true,
                tooltips: {
                    enabled: false
                },
                legend: {
                    position: 'bottom'
                }
            }
        });
</script>
}
