#pragma checksum "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_TelephoneBillClaim_Create), @"mvc.1.0.view", @"/Views/TelephoneBillClaim/Create.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\_ViewImports.cshtml"
using EClaimsWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\_ViewImports.cshtml"
using EClaimsWeb.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd", @"/Views/TelephoneBillClaim/Create.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"a4db12db2d232aa74afb152d1d99af05b5c5c936f2e6c6c148681d63b353a31b", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_TelephoneBillClaim_Create : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<EClaimsWeb.Models.TBClaimDetailVM>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", "~/vendors/datatables.net-bs4/dataTables.bootstrap4.css", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/bootstrap-datepicker/bootstrap-datepicker.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("names", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("names", "Staging,Production", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("FacilityID"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control form-control-sm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 150px !important;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("ExpenseCategoryID"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control w-100 form-control-sm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/vendors/typeahead.js/typeahead.bundle.min.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/moment/moment.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/vendors/datatables.net/jquery.dataTables.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/vendors/datatables.net-bs4/dataTables.bootstrap4.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/file-upload.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/typeahead.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/data-table.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/inputmask/jquery.inputmask.bundle.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/bootstrap-datepicker/bootstrap-datepicker.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/jquery.repeater/jquery.repeater.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 3 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
  
    ViewData["Title"] = "Telephone Bill ";
    int Counter = 1;

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
            DefineSection("Styles", async() => {
                WriteLiteral("\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd11805", async() => {
                    WriteLiteral("\n");
                    WriteLiteral("        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd12148", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.Href = (string)__tagHelperAttribute_1.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
#nullable restore
#line 12 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd14301", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Names = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd16540", async() => {
                    WriteLiteral("\n");
                    WriteLiteral("        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd16883", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.Href = (string)__tagHelperAttribute_1.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
#nullable restore
#line 19 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd19036", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Names = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n");
            }
            );
            WriteLiteral("<label id=\"msg\" class=\"alert-danger\"></label>\n<div id=\"AddTelephoneBill\" class=\"col-md-12 grid-margin stretch-card\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n");
#nullable restore
#line 27 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
             if (@TempData["status"].ToString().Contains("Add") || @TempData["status"].ToString().Contains("Recreate"))
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <h4 class=\"mb-0 font-weight-bold\">Add Telephone Bill Claim</h4>\n");
#nullable restore
#line 30 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
            }
            else
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <h4 class=\"mb-0 font-weight-bold\">Update Telephone Bill Claim</h4>\n");
#nullable restore
#line 34 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
            <div class=""row mt-4"">
                <table class=""table table-bordered"">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Company</th>
                            <th>Department</th>
                            <th>Facility</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><label id=""lblName"">");
#nullable restore
#line 49 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                               Write(ViewData["Name"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</label></td>\n                            <td><label id=\"lblCompany\">UEMS</label></td>\n                            <td><label id=\"lblDepartment\">");
#nullable restore
#line 51 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                                     Write(ViewData["Department"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</label></td>\n                            <td><label id=\"lblFacility\">");
#nullable restore
#line 52 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                                   Write(ViewData["FacilityName"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</label></td>\n                            <td><label id=\"lblCurrentDate\">");
#nullable restore
#line 53 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                                      Write(DateTime.Now.Date.ToString("dd/MM/yyyy"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</label></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n");
#nullable restore
#line 132 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
             if (ViewBag.ClaimStatus == "Update")
            {
                if (Model.TBClaimFileUploads.Count > 0)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                    <hr />
                    <table style=""width:100%"">
                        <tr style=""vertical-align: top;"">
                            <td style=""width: 10%"">
                                <label class=""field_name"">
                                    <b>File(s) : </b>
                                </label>
                            </td>
                            <td>

");
#nullable restore
#line 146 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                 foreach (var file in Model.TBClaimFileUploads)
                                {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                    <table border=""0"" cellspacing=""2"" cellpadding=""2"" width=""90%"">
                                        <tr>
                                            <td width=""20%"">

                                                <label class=""field_name"">

                                                    ");
#nullable restore
#line 154 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                               Write(file.FileName);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

                                                </label>

                                            </td>

                                            <td width=""30%"">

                                                <label class=""field_name"">
                                                    <a");
            BeginWriteAttribute("href", " href=\"", 8984, "\"", 9066, 1);
#nullable restore
#line 163 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
WriteAttributeValue("", 8991, Url.Action("Download", new { id = @file.FilePath, name = @file.FileName }), 8991, 75, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" title=\"Download\" target=\"_blank\">\n                                                        Download\n                                                    </a>\n\n                                                </label>\n");
#nullable restore
#line 168 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                                 if (!@TempData["status"].ToString().Contains("Recreate"))
                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                    <label class=\"field_name\">\n                                                        &nbsp; &nbsp;\n");
#nullable restore
#line 172 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                                         if (@TempData["claimaddcondition"].ToString().Contains("claimDraft"))
                                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                            <a");
            BeginWriteAttribute("href", " href=\"", 9835, "\"", 9930, 1);
#nullable restore
#line 174 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
WriteAttributeValue("", 9842, Url.Action("DeleteTBClaimDraftFile", new { @file.FileID, @file.FilePath, @file.TBCID }), 9842, 88, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" onclick=\"return confirm(\'Are you sure to remove attached file?\')\">\n                                                                <span id=\"DeleteFile\" class=\"mdi mdi-delete-outline\">Delete</span>\n");
            WriteLiteral("                                                            </a>\n");
#nullable restore
#line 178 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                                        }
                                                        else
                                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                            <a");
            BeginWriteAttribute("href", " href=\"", 10598, "\"", 10688, 1);
#nullable restore
#line 181 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
WriteAttributeValue("", 10605, Url.Action("DeleteTBClaimFile", new { @file.FileID, @file.FilePath, @file.TBCID }), 10605, 83, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" onclick=\"return confirm(\'Are you sure to remove attached file?\')\">\n                                                                <span id=\"DeleteFile\" class=\"mdi mdi-delete-outline\">Delete</span>\n");
            WriteLiteral("                                                            </a>\n");
#nullable restore
#line 185 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                    </label>\n");
#nullable restore
#line 187 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                                }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            </td>\n\n\n                                            <td width=\"30%\"></td>\n                                        </tr>\n                                    </table>\n");
#nullable restore
#line 194 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"

                                }

#line default
#line hidden
#nullable disable
            WriteLiteral("                            </td>\n\n                        </tr>\n");
            WriteLiteral("                    </table>\n");
#nullable restore
#line 209 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                }
            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"            <div class=""row"">
                <h5 class=""col-md-12 card-title table-summary"">Claim Details</h5>
                <div class=""col-md-12"">
                    <div class=""table-responsive"">
                        <table id=""tblClaims"" class=""table table-bordered"">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Telephone Bill Date</th>
                                    <th>Facility</th>
                                    <th>Description of Expense</th>
                                    <th>Expense Category</th>
                                    <th>Amount</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
");
#nullable restore
#line 228 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                 foreach (var item in Model.DtTBClaimVMs)
                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                    <tr>\n                                        <td align=\"center\">\n                                            <label id=\"lblItem\">\n                                                ");
#nullable restore
#line 233 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                            Write(Counter);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                                            </label>
                                        </td>
                                        <td>
                                            <div id=""datepicker-popup"" class=""input-group date datepicker"">
                                                <input id=""dtClaimDate"" type=""text"" autocomplete=""off"" class=""form-control form-control-sm"" placeholder=""DD/MM/YYYY"" style=""width: 160px !important;"">
                                                <span class=""input-group-addon input-group-append border-left"">
                                                </span>
                                            </div>
                                        </td>
                                        <td>
                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd34381", async() => {
                WriteLiteral("\n");
                WriteLiteral("                                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
#nullable restore
#line 244 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = ViewBag.FacilityID;

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                        </td>
                                        <td>
                                            <input type=""text"" class=""form-control form-control-sm"" id=""txtDescription"" placeholder=""Description of Expense"" style=""width: 410px !important;"">
                                        </td>
                                        <td>
                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd36604", async() => {
                WriteLiteral("\n");
                WriteLiteral("                                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
#nullable restore
#line 252 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = ViewBag.ExpenseCategoryID;

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                        </td>
                                        <td>
                                            <input type=""text"" class=""form-control form-control-sm"" id=""txtSubTotal"" onchange=""Calculation();"" data-inputmask=""'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true,'autoUnmask': true, 'removeMaskOnSubmit': true, 'digits': 2, 'digitsOptional': false, 'prefix': '$ ', 'placeholder': '0'"" maxlength=""15"" style=""width: 150px !important;"">
                                        </td>
                                        <td class=""actions"">
                                            <span id=""AddClaim"" class=""mdi mdi-plus-circle-outline""></span>
                                            <span id=""EditClaim"" class=""mdi mdi-border-color d-none""></span>
                                            <span id=""DeleteClaim"" class=""mdi mdi-delete-outline""></span>
                                            <input type=""text"" class=""input-large"" name=""TBCItemID[]"" value=""0""");
            WriteLiteral(@" id=""txtTBCItemID"" style=""width: 100% ; text-align:right; display:none;""
                                                   onpaste=""return false;"" readonly=""readonly"" />
                                        </td>
                                    </tr>
");
#nullable restore
#line 267 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                    Counter++;
                                }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                            </tbody>
                        </table>
                        <table class=""table table-bordered"">
                            <thead>
                                <tr class=""d-none"">
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tr>
                                <td width=""70%"" class=""text-align-right"">Grand Total</td>
                                <td width=""30%""><input type=""text"" id=""txtGrandTotal"" class=""form-control"" readonly=""readonly""");
            BeginWriteAttribute("value", " value=\"", 17211, "\"", 17246, 1);
#nullable restore
#line 280 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
WriteAttributeValue("", 17219, Model.TBClaimVM.GrandTotal, 17219, 27, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" data-inputmask=""'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true,'autoUnmask': true, 'removeMaskOnSubmit': true, 'digits': 2, 'digitsOptional': false, 'prefix': '$ ', 'placeholder': '0'"" style=""width: 150px !important;""></td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class=""col-md-12 mt-4"">
                    <div class=""form-group col-md-4"">
                        <label>Upload</label>
                        <input type=""file"" name=""img[]"" class=""file-upload-default"" multiple id=""fileInput"" accept="".gif,.jpg,.jpeg,.png,.doc,.docx,.csv,.xls,.pdf"" onchange=""ValidateSingleInput(this);"">
                        <div class=""input-group col-xs-12"">
                            <input id=""fileInputText"" type=""text"" class=""form-control file-upload-info"" disabled
                                   placeholder=""Upload"">
                            <span class=""input-group-append"">
                            ");
            WriteLiteral(@"    <button class=""file-upload-browse btn btn-sm btn-primary"" type=""button"">Upload</button>
                            </span>
                        </div>
                        <br />
                        <span style=""color: Red"">(Supported File Types *.pdf;*.xls;*.csv;*.doc;*.docx;*.png;*.jpeg;*.jpg;*.gif)</span>
                        <p id=""selectedFilesText"" style=""margin-top: 10px;""></p>
                        <div id=""fileList""></div>
                    </div>
                </div>
                <div class=""col-md-12"">
                    <div class=""form-group"">
                        <div class=""form-check form-check-flat form-check-primary"">
                            <label class=""form-check-label"">
                                <input id=""chkTC"" type=""checkbox"" class=""form-check-input"">
                                I certify that the claims are true and correct
                                <i class=""input-helper""></i>
                            </label>
                   ");
            WriteLiteral(@"         <ul class=""list-group"">
                                Note:
                                <li class=""list-group-item-warning"">
                                    1) All claims must be supported by receipts and with explanatory notes where necessary.
                                </li>
");
            WriteLiteral(@"                                <li class=""list-group-item-warning"">
                                    2) Any claimant found to be submitting fradulent claims shall be subject to disciplinary actions, including immediate termination.
                                </li>
                                <li class=""list-group-item-warning"">
                                    3) Non compliance to the stated guidelines will result in the delay of processing of claims/ rejection of claims
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="" col-md-6"">
");
#nullable restore
#line 332 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                     if (@TempData["status"].ToString().Contains("Add") || @TempData["status"].ToString().Contains("Recreate"))
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        <button type=""submit"" class=""btn btn-primary mr-2"" id=""btnSave"" onclick=""return getdata(this.id);"">Submit Claim</button>
                        <button type=""submit"" class=""btn btn-secondary mr-2"" id=""btnDraft"" onclick=""return getdata(this.id);"">Save as Draft</button>
");
#nullable restore
#line 336 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                    }
                    else
                    {
                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 339 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                         if (@TempData["claimaddcondition"].ToString().Contains("claimDraft"))
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <button type=\"submit\" class=\"btn btn-primary mr-2\" id=\"btnSave\" onclick=\"return getdata(this.id);\">Submit Claim</button>\n");
#nullable restore
#line 342 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                        }
                        else
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <button type=\"submit\" class=\"btn btn-primary mr-2\" id=\"btnEdit\" onclick=\"return getdata(this.id);\">Update Claim</button>\n");
#nullable restore
#line 346 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <button type=\"submit\" class=\"btn btn-secondary mr-2\" id=\"btnDraftEdit\" onclick=\"return getdata(this.id);\">Update Draft</button>\n");
#nullable restore
#line 348 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <input type=\"hidden\" id=\"hdfClaimID\" name=\"hdfClaimID\" value=\"0\" />\n                    <input type=\"hidden\" id=\"txtTBCNO\" name=\"txtTBCNO\"");
            BeginWriteAttribute("value", " value=\"", 22131, "\"", 22161, 1);
#nullable restore
#line 350 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
WriteAttributeValue("", 22139, Model.TBClaimVM.TBCNo, 22139, 22, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\n");
            WriteLiteral(@"                    <button class=""btn btn-danger mr-2"" onclick=""RedirectView();"">Close</button>
                    <button class=""btn btn-light"" onclick=""ClearData();"">Reset</button>
                </div>
            </div>
        </div>
    </div>
</div>
");
            DefineSection("scripts", async() => {
                WriteLiteral("\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd47861", async() => {
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd48165", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd49348", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_11.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
#nullable restore
#line 363 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n");
                    WriteLiteral("        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd51471", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd52654", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_13.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
#nullable restore
#line 366 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd54738", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_14.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
#nullable restore
#line 367 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd56822", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd58005", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n");
                    WriteLiteral("        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd59227", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd60410", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        <!-- plugin js for this page -->\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd61635", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd62818", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n\n\n    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Names = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd64978", async() => {
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd65282", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd66465", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_11.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
#nullable restore
#line 382 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n");
                    WriteLiteral("        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd68588", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd69771", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_13.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
#nullable restore
#line 385 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd71855", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_14.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
#nullable restore
#line 386 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd73939", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd75122", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n");
                    WriteLiteral("        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd76344", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd77527", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        <!-- plugin js for this page -->\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd78752", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8a27a36c2e7bda52df1cf7ec203e4adc7081c7db31fed6b1a4a921b9f130dbd79935", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n\n\n    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Names = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>
        $(""#datepicker"").datepicker({
            format: ""mm-yyyy"",
            viewMode: ""months"",
            minViewMode: ""months"",
            autoclose: true,
            endDate: new Date()
        });
        $(document).ready(function () {
            $('#datepicker-popup').datepicker({
                format: 'dd/mm/yyyy',
                autoclose: true,
                currentText: ""Now"",
                todayHighlight: true,
                endDate: new Date()
            });

        });
        $('body').on('focus', "".datepicker"", function () {
            $(this).datepicker({
                format: 'dd/mm/yyyy',
                autoclose: true,
                currentText: ""Now"",
                todayHighlight: true,
                endDate: new Date()
            });
        });
        $('body').on('focus', ""#txtSubTotal"", function () {
            $(this).inputmask({
                alias: 'decimal', groupSeparator: ',', removeMaskOnSubmit: true, digits: 2, digitsOptional: fa");
                WriteLiteral(@"lse,
                autoGroup: true, autoUnmask: true, prefix: '$ ', placeholder: '0'
            });
        });
    </script>
    <script>
        var Params = [];

        var fileListArr = [];
        var _validFileExtensions = ["".jpg"", "".jpeg"", "".bmp"", "".gif"", "".png"", "".doc"", "".docx"", "".csv"", "".xls"", "".pdf""];
        function ValidateSingleInput(oInput) {
            if (oInput.type == ""file"") {
                for (var i = 0; i < oInput.files.length; ++i) {
                    var blnValid = false;
                    var sFileName = oInput.files[i].name;
                    if (sFileName.length > 0) {
                        for (var j = 0; j < _validFileExtensions.length; j++) {
                            var sCurExtension = _validFileExtensions[j];
                            if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                                blnValid = true;
                                break;
      ");
                WriteLiteral(@"                      }
                        }
                        if (!blnValid) {
                            alert(""Sorry, "" + sFileName + "" is invalid, allowed extensions are: "" + _validFileExtensions.join("", ""));
                            oInput.value = """";
                            return false;
                        }
                        else {
                            fileListArr.push(oInput.files[i]);
                        }
                    }
                }
                displaySelectedFilesList();
            }
            return true;
        }

        function deleteFile(fileName) {
            var newList = [];
            for (var i = 0; i < fileListArr.length; ++i) {
                var sFileName = fileListArr[i].name;
                if (sFileName === fileName) {
                    /*fileListArr.splice(i, 1);*/
                }
                else {
                    newList.push(fileListArr[i]);
                }
            }
            fileListArr = new");
                WriteLiteral(@"List;
            displaySelectedFilesList();
        }

        function displaySelectedFilesList() {
            var output = document.getElementById('fileList');
            var selectedFilesText = document.getElementById('selectedFilesText');
            output.innerHTML = '';
            var children = """";

            for (var i = 0; i < fileListArr.length; ++i) {
                var sFileName = fileListArr[i].name;
                var file = URL.createObjectURL(fileListArr[i]);
                children += '<li>' + '<a href=""' + file + '"" target=""_blank"">' + sFileName + '</a><button class=""close"" aria-label=""Close"" onclick=""deleteFile(\'' + sFileName + '\')""><span aria-hidden=""true"">&times;</span ></button><br>' + '</li>';
            }
            output.innerHTML = '<ul>' + children + '</ul>';
            selectedFilesText.innerHTML = ""Selected files:"";

            var textMessage = """";
            if (fileListArr.length > 0) {
                textMessage = ""Selected "" + fileListArr.length + "" File(s");
                WriteLiteral(@")"";
            }
            else {
                textMessage = ""Upload"";
                selectedFilesText.innerHTML = '';
            }

            $(""#fileInputText"").val(textMessage);
        }

        $(document).ready(function () {
            $(""input"").inputmask();
            /*
            $(document).on('click', '#DeleteClaim', function () {
                debugger;
                var rowsCount = $('#tblClaims tr').length - 5;
                if (rowsCount === 0)
                    return;

                var newRowCount = rowsCount + 1;
                $('#tblClaims > tbody > tr').eq(newRowCount).remove();
            });
            */
            // var ProjectType = jQuery('input[name=project]:checked').val();

            var CID = '");
#nullable restore
#line 521 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                  Write(ViewBag.CID);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\n            if (CID != 0) {\n\n                //alert(CID);\n                var status = \'");
#nullable restore
#line 525 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                         Write(TempData["status"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\n                var isDraft = \'");
#nullable restore
#line 526 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                          Write(TempData["claimaddcondition"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
                debugger;
                var GetTextValuesSGUrl = ""/TelephoneBillClaim/GetTextValuesSG"";
                if (isDraft.includes(""claimDraft"")) {
                    GetTextValuesSGUrl = ""/TelephoneBillClaim/GetTextValuesSGDraft"";
                }

                var ClaimStatus = '");
#nullable restore
#line 533 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                              Write(ViewBag.ClaimStatus);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\n                //alert(ClaimStatus);\n                if (ClaimStatus == \"Update\" || ClaimStatus == \"Recreate\") {\n                    $(\"#hdfClaimID\").val(");
#nullable restore
#line 536 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                    Write(ViewBag.CID);

#line default
#line hidden
#nullable disable
                WriteLiteral(");\n\n                    var table1 = document.getElementById(\"tblClaims\");\n                    var rowLength = table1.rows.length;\n                    var l = 0;\n\n                    var id = \'");
#nullable restore
#line 542 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                         Write(ViewBag.CID);

#line default
#line hidden
#nullable disable
                WriteLiteral(@" ';
                    $.ajax({
                        type: ""POST"",
                        url: GetTextValuesSGUrl,
                        data:{id: id},
                        success: function (data) {
                            //var result = JSON.stringify(data);
                           /* alert(data);*/
                            var table1 = document.getElementById(""tblClaims"");
                            var rowLength = table1.rows.length;
                            //alert(data.length);
                            //alert(data.dtClaimsList.length);
                            //for (var i = 0; i < data.length; ++i) {

                            //}

                            for (var l = 0; l < data.dtClaimsList.length; l++) {
                                var DtTBCItemID = data.dtClaimsList[l].tbcItemID;
                                var Description = data.dtClaimsList[l].description;
                                var Amount = data.dtClaimsList[l].amount;
                       ");
                WriteLiteral(@"        // var GST = data.dtClaimsList[l].gst;
                                //var AmountWithGST = data.dtClaimsList[l].amountWithGST;
                                var ExpenseCategory = data.dtClaimsList[l].expenseCategoryID;
                                var TBCID = data.dtClaimsList[l].tbCID;
                                var FacilityID = data.dtClaimsList[l].facilityID;
                                //alert('GST ' + GST);
                                var DateOfJourney = data.dtClaimsList[l].dateOfJourney;
                               // var dateMomentObject = moment(data.dtClaimsList[l].dateOfJourney, ""DD/MM/YYYY""); // 1st argument - string, 2nd argument - format
                               // var dateObject = dateMomentObject.toDate();
                                var date2 = new Date(DateOfJourney);
                                //alert(""DateOfJourney "" + DateOfJourney);
                                //alert(""date2 "" + date2);
                                //$(row1).find(""#dtC");
                WriteLiteral(@"laimDate"").datepicker({
                                //    format: 'dd/mm/yyyy'
                                //}).datepicker('setDate', date2)



                               // var ECItemID = data.dtClaimsList[l].eCItemID;
                                //$(row1).find('#dtClaimDate').val(DateOfJourney);

                                var row1 = table1.rows[l + 1];
                                //alert(""row1  "" + row1);
                                //alert(""dateObject "" + dateObject);

                                //alert(""Description "" + Description);
                                //alert(""GST "" + GST);
                               // var startDate = new Date();
                               // alert(startDate);

                               // $('#dtClaimDate').data({ date: startDate }).datepicker('update').children(""input"").val(startDate);
                                //$(""#dtClaimDate"").datepicker({
                                //    format: 'dd/mm/yyyy',
                  ");
                WriteLiteral(@"              //    autoclose: true
                                //}).datepicker(""update"", ""10/10/2016"");
                                //$(""#dtClaimDate"").datepicker(""setDate"", startDate);
                                //$('#dtClaimDate').datepicker('setValue', '09/21/2021').datepicker('update');

                                //$(row1).find(""#dtClaimDate"").datepicker(""update"", new Date());
                                //$(row1).find('#dtClaimDate').val(DateOfJourney);
                                $(row1).find(""#dtClaimDate"").datepicker({
                                    format: 'dd/mm/yyyy'
                                }).datepicker();
                                $(row1).find(""#dtClaimDate"").datepicker('setDate', date2).datepicker('fill');

                                $(""#datepicker"").datepicker({
                                    format: ""mm-yyyy"",
                                    viewMode: ""months"",
                                    minViewMode: ""months"",
              ");
                WriteLiteral(@"                      autoclose: true
                                });
                                $(""#datepicker"").datepicker('setDate', date2).datepicker('fill');
                                $(row1).find(""#FacilityID"").val(FacilityID);
                                $(row1).find(""#txtDescription"").val(Description);
                                //$(row1).find(""#txtGST"").val(GST);
                                $(row1).find(""#txtSubTotal"").val(Amount);
                                $(row1).find(""#ExpenseCategoryID"").val(ExpenseCategory);
                                $(row1).find(""#txtTBCItemID"").val(DtTBCItemID);
                                //$(row1).find(""#txtGST"").val(GST);
                                //$(row1).find(""#txtDTCBRID"").val(DtCBRID);

                                //$(this).find('#dtClaimDate').val('');
                                //$(this).find('#ExpenseCategoryID option:first').attr('selected', true);
                                //$(this).find('#txtDescrip");
                WriteLiteral(@"tion').val('');
                                //$(this).find('#txtGST').val('');
                                //$(this).find('#txtSubTotal').val('');

                                // new lines of code to disable fields start
                                if (ClaimStatus == ""Update"" && !isDraft.includes(""claimDraft"")) {
                                    //$(row1).find('#txtQty').prop(""readonly"", true);
                                    //$(row1).find('#txtUnitPrice').prop(""readonly"", true);
                                    //$(row1).find('#ddlUnit').attr(""disabled"", true);
                                    //$(row1).find('#dllGST').attr(""disabled"", true);
                                    //$(row1).find('#AddClaim').click(function (e) { return false; });
                                    //$(row1).find('#DeleteClaim').click(function (e) { return false; });
                                }
                                // new lines of code to disable fields end
                        ");
                WriteLiteral("    }\n\n                            Calculation();\n                        },\n                        error: function () {\n                           // $(\"#dialogVerified\").modal(\'hide\');\n                        }\n                    });\n\n");
                WriteLiteral(@"

                }
            }

            $(""#tblClaims"").on('click', '#DeleteClaim', function () {
                var x = document.getElementById(""tblClaims"").rows.length;
                //  alert(x)
                if (x > 2) {
                    var par = $(this).parent().parent(); //tr
                    $(this).parent().parent().remove();
                    $('#tblClaims').find('tr').each(function (i, el) {
                        if (i != 0) {
                            var tds = $(this).find('td');
                            $(this).find('#lblItem').html(i);
                        }
                    });
                }
                Calculation();
            });

            $(document).on('click', '#AddClaim', function () {
                var message = """";
                var table = document.getElementById(""tblClaims"");
                for (var i = 1; i < 2; i++) {
                    var row = table.rows[i];
                    for (var j = 0; j < row.cells.length; j++) {
     ");
                WriteLiteral(@"                   var cell = row.cells[j];
                        if (j == 0) {
                            message += ""<td align='center'>"" + cell.innerHTML + ""</td>"";
                        }
                        else {
                            message += ""<td>"" + cell.innerHTML + ""</td>"";
                        }
                    }
                }
                $(this).parent().parent().after('<tr>' + message + '</tr>');

                message = """";
                var DepartmentID = 0;
                $('#tblClaims').find('tr').each(function (i, el) {
                    var rowcount = table.rows.length;
                    if (i != 0) {
                        var tds = $(this).find('td');
                        $(this).find('#lblItem').html(i);
                    }
                });
                Calculation();
            });
        });

        function isNumber(evt) {
            //alert(""number"");
            evt = (evt) ? evt : window.event;
            var charCode = (evt");
                WriteLiteral(@".which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 47 || charCode > 57) && charCode != 44) {
                return false;
            }
        }

        function RedirectView() {
            window.location.href = ""/TelephoneBillClaim/Index"";
        }

        function ClearData() {

            //$('#datepickerMonth').val('');
            //         $('#FileUpload')
            $('#chkTC').prop('checked', false);
            $('#tblClaims').find('tr').each(function (i, el) {
                if (i != 0) {
                    $(this).find('#dtClaimDate').val('');
                    $(this).find('#ExpenseCategoryID option:first').attr('selected', true);
                    $(this).find('#txtDescription').val('');
                    $(this).find('#txtSubTotal').val('');
                }
            });
            $('#txtGrandTotal').val('');
        }


        function Calculation() {
            var GrandTotal = 0;
            $('#tblClaims').find('tr').each(function (i, el");
                WriteLiteral(@") {
                if (i != 0) {
                    var txtSubTot = $(this).find('#txtSubTotal').val();
                    if (txtSubTot == ""NaN"" || txtSubTot == """") {
                        //  $('#GrandTotal').val(0.00);
                        //$('#txtSubTotal').val(0.00);
                        txtSubTot = 0.00;
                    }

                    GrandTotal = (parseFloat(GrandTotal) + parseFloat(txtSubTot)).toFixed(2);
                }
            });

            // var textValue = $('#txtSubTotal').val();

            //if (txtSubTot == ""NaN"") {
            //    $('#GrandTotal').val(0.00);
            //    $('#txtSubTotal').val(0.00);
            //}
            document.getElementById('txtGrandTotal').value = (parseFloat(GrandTotal)).toFixed(2);
        }

        function getdata(id) {
            if (id == ""btnSave"" || id == ""btnEdit"") { }
            param = ""SendforApproval"";
            var res = param;
            var ErrorStatus = ""true"";
            var TelephoneClaimLimit = '");
#nullable restore
#line 798 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                  Write(ViewBag.TelephoneClaimLimit);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
            if (res == ""SendforApproval"") {

                //var Month = $('#datepickerMonth').val();
                //if (Month == """" || Month == null) {
                //    alert('Please Select Month');
                //    ErrorStatus = ""false"";
                //    return false;
                //}

                //var selectedMonth = """";
                //if (Month) {
                //    var splitMonth = Month.split('-');
                //    selectedMonth = splitMonth[0];
                //}

                $('#tblClaims').find('tr').each(function (i, el) {
                    if (i != 0) {
                        var $tds = $(this).find('td');

                        var ClaimDate = $(this).find('#dtClaimDate').val();
                        var Description = $(this).find('#txtDescription').val();
                        var ExpenseCategoryID = $(this).find('#ExpenseCategoryID').val();
                        var SubTotal = $(this).find('#txtSubTotal').val();
                        va");
                WriteLiteral(@"r Facility = $(this).find('#FacilityID').val();
                        if (i == 1) {
                            if (ClaimDate == """" || ClaimDate == null) {
                                alert('Please Select Claim Date at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }
                            if (Facility == null) {
                                alert('Please Select Facility Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }
                            if (!Description) {
                                alert('Please Enter Description at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (!SubTotal || SubTotal == 0) {
                                alert('Please Enter Amount at Row No ");
                WriteLiteral(@"' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (parseFloat(SubTotal) > parseFloat(TelephoneClaimLimit)) {
                                alert('Claim amount cannot exceed Telephone Claim Limit $' + TelephoneClaimLimit + ' at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }
                        }
                        else {
                            if (ClaimDate == """" || ClaimDate == null) {
                                alert('Please Select Claim Date at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }
                            if (Facility == null) {
                                alert('Please Select Facility Row No ' + i);
                                ErrorStatus = ""false"";
  ");
                WriteLiteral(@"                              return false;
                            }
                            if (!Description) {
                                alert('Please Enter Description at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (!SubTotal || SubTotal == 0) {
                                alert('Please Enter Amount at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (parseFloat(SubTotal) > parseFloat(TelephoneClaimLimit)) {
                                alert('Claim amount cannot exceed Telephone Claim Limit $' + TelephoneClaimLimit + ' at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }
                        }

                        // Check r");
                WriteLiteral(@"ecord month
                        //const split = ClaimDate.split('/');
                        //let month = split[1];
                        //if (month != selectedMonth) {
                        //    alert('Please select the date for the selected month at Row no  ' + i);
                        //    ErrorStatus = ""false"";
                        //    return false;
                        //}
                    }

                });
                //    alert(res);
                //   var ClaimType = $('input[name=radioClaimType]:checked').val();
                //    alert('Claim Type' + ClaimType);

                if (ErrorStatus == ""false"") {
                    return false;
                }

                var Tnc = $('#chkTC').is(':checked');
                if (Tnc == false) {
                    alert('Please certify that the claims are true and correct to proceed');
                    ErrorStatus = false;
                    return false;
                }

                if (ErrorS");
                WriteLiteral(@"tatus == ""false"") {
                    return false;
                }

            }


            var formData = new FormData();
            var dtClaimsArr = new Array();
            dtClaimsArr.length = 0;

            $('#tblClaims').find('tr').each(function (i, el) {
                if (i != 0) {
                    //var Month = $(this).find('#datepickerMonth').val();
                    // alert('Claim Month' + Month);
                    //var dp = document.getElementById(""datepicker"");
                    //alert('Claim Month dp ' + dp.value);
                    var ClaimDate = $(this).find('#dtClaimDate').val();
                    var FacilityID = $(this).find('#FacilityID').val();
                    var Description = $(this).find('#txtDescription').val();

                    var ExpenseCategoryID = $(this).find('#ExpenseCategoryID').val();
                    // alert('ExpenseCategoryID ' + ExpenseCategoryID);


                    var SubTotal = $(this).find('#txtSubTotal').val();
          ");
                WriteLiteral(@"          var DtTBCItemID = $(this).find('#txtTBCItemID').val();
                    var nClaimDate = new Date(moment(ClaimDate, 'DD/MM/YYYY'));
                    nClaimDate = nClaimDate.toLocaleDateString().slice(0, 10);

                    //alert('dtInTime ' + InTime);
                    //alert('dtOutTime ' + OutTime);
                    //alert('txtStartReading ' + StartReading);
                    //alert('txtEndReading ' + EndReading);
                    //alert('txtKMS ' + KMS);
                    //alert('txtRemarks ' + Remarks);
                    //alert('txtSubTotal ' + SubTotal);
                    var dtClaim = {}
                    dtClaim.TBCItemID = DtTBCItemID;
                    dtClaim.Date = nClaimDate;
                    dtClaim.Description = Description;
                    dtClaim.ExpenseCategoryID = ExpenseCategoryID;
                    dtClaim.FacilityID = FacilityID;
                    dtClaim.Amount = SubTotal;
                    dtClaim.OrderBy = i;
               ");
                WriteLiteral(@"     dtClaimsArr.push(dtClaim);

                    //Params.push({
                    //    TravelMode: TravelMode, ClaimDate: ClaimDate, DateOfJourney: ClaimDate, FacilityID: FacilityID,
                    //    FromFacilityID: FromFacilityID, ToFacilityID: ToFacilityID, InTime: InTime, OutTime: OutTime, StartReading: StartReading,
                    //    EndReading: EndReading, Kms: KMS, Remarks: Remarks, SubTotal: SubTotal, GrandTotal: $('#txtGrandTotal').val()
                    //});


                }

            });
            //formData.append('data', JSON.stringify(dtClaimsArr));
            //alert($('#datepickerMonth').val());
            var claimId = $('#hdfClaimID').val();
            if (id == ""btnSave"") {
                claimId = 0;
            }

            var claimAddCondition = '");
#nullable restore
#line 972 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                Write(TempData["claimaddcondition"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\n\n            var claimAddCondition = \'");
#nullable restore
#line 974 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\TelephoneBillClaim\Create.cshtml"
                                Write(TempData["claimaddcondition"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
            formData.append('data', JSON.stringify(
                {
                    Company: $(""#lblCompany"").html(),
                    //Month: '',
                    GrandTotal: $(""#txtGrandTotal"").val(),
                    TBCID: $('#hdfClaimID').val(),
                    TBCNo: $('#txtTBCNO').val(),
                    dtClaims: dtClaimsArr,
                    ClaimAddCondition: claimAddCondition
                }
            ));
            //{
            //TravelMode: $('input[name=radioTravelMode]:checked').val(),
            //GrandTotal: $(""#txtGrandTotal"").val(),
            //dtClaims: dtClaimsArr}));
            //var data = JSON.stringify({
            //TravelMode: $('input[name=radioTravelMode]:checked').val(),
            //GrandTotal: $(""#txtGrandTotal"").val(),
            //order: dtClaimsArr
            //});
            //var GrandTotal = $('#txtGrandTotal').val();
            //alert('GrandTotal  ' + GrandTotal);
            //return false;
            // var listdata = JS");
                WriteLiteral(@"ON.stringify({ 'listdata': Params });

            debugger;
            var submitUrl = '/TelephoneBillClaim/SaveItems';
            var uploadUrl = '/TelephoneBillClaim/UploadTBFiles';
            if (id === 'btnDraft' || id === ""btnDraftEdit"") {
                submitUrl = '/TelephoneBillClaim/SaveDraftItems';
                uploadUrl = '/TelephoneBillClaim/UploadTBFilesDraft';
            }
            if (res == ""SendforApproval"") {
                //alert('Before calling');
                $('#btnsaveupdate').attr('disabled', 'disabled');
                $.ajax({
                    type: ""POST"",
                    url: submitUrl,
                    data: formData,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        // alert('Success');
                        var myID = data.res;
                  ");
                WriteLiteral(@"      var files = fileListArr; // $('#fileInput').prop(""files"");
                        var url = uploadUrl;
                        var formData = new FormData();
                        for (var i = 0; i < files.length; i++) {
                            formData.append(""files"", files[i]);
                        }
                        //if (files.length > 0) {

                            formData.append(""FormFile"", files);
                            // Adding more keys/values here if need
                            formData.append('Id', myID);
                            formData.append('tbIDValue', $('#hdfClaimID').val());
                            formData.append('claimAddCondition', claimAddCondition);

                            //for (var x = 0; x < files.length; x++) {
                            //    formData.append(""file"" + x, files[x]);
                            //}
                            //formData = new FormData();
                            //formData.append(""UploadPO"", files");
                WriteLiteral(@"[0]);
                            jQuery.ajax({
                                type: 'POST',
                                url: url,
                                data: formData,
                                cache: false,
                                contentType: false,
                                processData: false,
                                beforeSend: function (xhr) {
                                    xhr.setRequestHeader(""XSRF-TOKEN"",
                                        $('input:hidden[name=""__RequestVerificationToken""]').val());
                                },
                                success: function (repo) {
                                    if (repo == ""success"") {
                                        fileListArr = [];
                                        //alert(""File : "" + repo.filename + "" is uploaded successfully"");
                                        //SuccessToast('Telephone Bill Claim added successfully');
                                       ");
                WriteLiteral(@" if (id == ""btnSave"") {
                                            $(""#msg"").html(""Telephone Bill Claim added successfully"").css(""color"", ""green"");
                                        }
                                        else {
                                            $(""#msg"").html(""Telephone Bill Claim updated successfully"").css(""color"", ""green"");
                                        }

                                        window.location.href = ""/TelephoneBillClaim/Index"";
                                    }
                                },
                                error: function () {
                                    //alert(""Error occurs"");
                                    //FailureToast('Error while creating Telephone Bill Claim');
                                    $(""#msg"").html(""Error while creating Telephone Bill Claim"").css(""color"", ""green"");
                                    window.location.href = ""/TelephoneBillClaim/Index"";
                                }");
                WriteLiteral(@"
                            });
                        //}
                        //else {
                        //    //SuccessToast('Telephone Bill Claim added successfully');
                        //    $(""#msg"").html(""Telephone Bill Claim added successfully"").css(""color"", ""green"");
                        //    window.location.href = ""/TelephoneBillClaim/Index"";
                        //}
                    },
                    failure: function (response) {
                        alert('Failure');
                        $('#result').html(response);
                    }
                });
            }
        }
        function SuccessToast(message) {
            $.toast({
                text: message,
                hideAfter: true,
                position: 'top-right',
                icon: 'success',
                allowToastClose: true,
                hideAfter: 5000,
            });
        }

        function FailureToast(message) {
            $.toast({
                text: me");
                WriteLiteral("ssage,\n                hideAfter: true,\n                position: \'top-right\',\n                icon: \'error\',\n                allowToastClose: true,\n                hideAfter: 5000,\n            });\n        }\n\n    </script>\n");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<EClaimsWeb.Models.TBClaimDetailVM> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
