#pragma checksum "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b93116"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_MileageClaim_Create), @"mvc.1.0.view", @"/Views/MileageClaim/Create.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\_ViewImports.cshtml"
using EClaimsWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\_ViewImports.cshtml"
using EClaimsWeb.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b93116", @"/Views/MileageClaim/Create.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"a4db12db2d232aa74afb152d1d99af05b5c5c936f2e6c6c148681d63b353a31b", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_MileageClaim_Create : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<EClaimsWeb.Models.MileageClaimDetailVM>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", "~/vendors/datatables.net-bs4/dataTables.bootstrap4.css", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/bootstrap-datepicker/bootstrap-datepicker.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/tempusdominus-bootstrap-4/tempusdominus-bootstrap-4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/font-awesome/css/font-awesome.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("names", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("names", "Staging,Production", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("forms-sample"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("Create"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("FacilityID"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control form-control-sm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 150px !important;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/vendors/typeahead.js/typeahead.bundle.min.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/moment/moment.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/bootstrap-datepicker/bootstrap-datepicker.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/jquery.repeater/jquery.repeater.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/vendors/datatables.net/jquery.dataTables.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/vendors/datatables.net-bs4/dataTables.bootstrap4.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/file-upload.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/inputmask/jquery.inputmask.bundle.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/typeahead.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/data-table.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/tempusdominus-bootstrap-4/tempusdominus-bootstrap-4.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendors/jquery-toast-plugin/jquery.toast.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/toastNotifications.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/bootstrap-clockpicker.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/bootstrap-clockpicker.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 3 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
  
    ViewData["Title"] = "Mileage ";
    int Counter = 1;

#line default
#line hidden
#nullable disable
            DefineSection("Styles", async() => {
                WriteLiteral("\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311614679", async() => {
                    WriteLiteral("\n");
                    WriteLiteral("        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311615022", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.Href = (string)__tagHelperAttribute_1.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
#nullable restore
#line 11 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311617169", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311618434", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311619699", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Names = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311621937", async() => {
                    WriteLiteral("\n");
                    WriteLiteral("        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311622280", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.Href = (string)__tagHelperAttribute_1.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
#nullable restore
#line 20 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311624427", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311625693", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Names = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n");
            }
            );
            WriteLiteral("<label id=\"msg\" class=\"alert-danger\"></label>\n<div id=\"AddMileage\" class=\"col-md-12 grid-margin stretch-card\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n");
#nullable restore
#line 29 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
             if (@TempData["status"].ToString().Contains("Add") || @TempData["status"].ToString().Contains("Recreate"))
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <h4 class=\"mb-0 font-weight-bold float-left\">Add Mileage Claim</h4>\n");
#nullable restore
#line 32 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
            }
            else
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <h4 class=\"mb-0 font-weight-bold float-left\">Update Mileage Claim</h4>\n");
#nullable restore
#line 36 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"            <div class=""row mt-5"">
                <table class=""table table-bordered"">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Company</th>
                            <th>Department</th>
                            <th>Facility</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><label id=""lblName"">");
#nullable restore
#line 50 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                               Write(ViewData["Name"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</label></td>\n                            <td><label id=\"lblCompany\">UEMS</label></td>\n                            <td><label id=\"lblDepartment\">");
#nullable restore
#line 52 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                                     Write(ViewData["Department"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</label></td>\n                            <td><label id=\"lblFacility\">");
#nullable restore
#line 53 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                                   Write(ViewData["FacilityName"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</label></td>\n                            <td><label id=\"lblCurrentDate\">");
#nullable restore
#line 54 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                                      Write(DateTime.Now.Date.ToString("dd/MM/yyyy"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</label></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311631329", async() => {
                WriteLiteral("\n                <div class=\"row\">\n                    <div class=\"col-md-6 row form-group\">\n                        <label class=\"col-sm-3 col-form-label\">Travel Mode</label>\n");
#nullable restore
#line 63 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                         if (ViewBag.ClaimStatus == "Update" || ViewBag.ClaimStatus == "Recreate")
                        {

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                            <div class=""col-sm-4"">
                                <div class=""form-check"">
                                    <label class=""form-check-label"">
                                        <input type=""radio"" class=""form-check-input""
                                               name=""radioTravelMode"" id=""radioprivateCar"" onchange=""TravelModeChange('Private Car')""
                                               value=""Private Car"" ");
#nullable restore
#line 70 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                                               Write(Model.MileageClaimVM.TravelMode == "Private Car" ? "checked='true'" : "");

#line default
#line hidden
#nullable disable
                WriteLiteral(@">
                                        Private Car
                                    </label>
                                </div>
                            </div>
                            <div class=""col-sm-4"">
                                <div class=""form-check"">
                                    <label class=""form-check-label"">
                                        <input type=""radio"" class=""form-check-input""
                                               name=""radioTravelMode"" id=""radiomotorBike"" onchange=""TravelModeChange('Motor Bike')""
                                               value=""Motor Bike"" ");
#nullable restore
#line 80 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                                              Write(Model.MileageClaimVM.TravelMode == "Motor Bike" ? "checked='true'" : "");

#line default
#line hidden
#nullable disable
                WriteLiteral(">\n                                        Motor Bike\n                                    </label>\n                                </div>\n                            </div>\n");
#nullable restore
#line 85 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                        }
                        else
                        {

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                            <div class=""col-sm-4"">
                                <div class=""form-check"">
                                    <label class=""form-check-label"">
                                        <input type=""radio"" class=""form-check-input""
                                               name=""radioTravelMode"" id=""radioprivateCar"" onchange=""TravelModeChange('Private Car')""
                                               value=""Private Car"" checked>
                                        Private Car
                                    </label>
                                </div>
                            </div>
                            <div class=""col-sm-4"">
                                <div class=""form-check"">
                                    <label class=""form-check-label"">
                                        <input type=""radio"" class=""form-check-input""
                                               name=""radioTravelMode"" id=""radiomotorBike"" onchange=""TravelModeChange('M");
                WriteLiteral("otor Bike\')\"\n                                               value=\"Motor Bike\">\n                                        Motor Bike\n                                    </label>\n                                </div>\n                            </div>\n");
#nullable restore
#line 108 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                        }

#line default
#line hidden
#nullable disable
                WriteLiteral("                    </div>\n                </div>\n            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n");
#nullable restore
#line 112 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
             if (ViewBag.ClaimStatus == "Update")
            {
                if (Model.MileageClaimFileUploads.Count > 0)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                    <hr />
                    <table style=""width:100%"">
                        <tr style=""vertical-align: top;"">
                            <td style=""width: 10%"">
                                <label class=""field_name"">
                                    <b>File(s) : </b>
                                </label>
                            </td>
                            <td>

");
#nullable restore
#line 126 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                 foreach (var file in Model.MileageClaimFileUploads)
                                {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                    <table border=""0"" cellspacing=""2"" cellpadding=""2"" width=""90%"">
                                        <tr>
                                            <td width=""20%"">

                                                <label class=""field_name"">

                                                    ");
#nullable restore
#line 134 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                               Write(file.FileName);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

                                                </label>

                                            </td>

                                            <td width=""30%"">

                                                <label class=""field_name"">
                                                    <a");
            BeginWriteAttribute("href", " href=\"", 7548, "\"", 7630, 1);
#nullable restore
#line 143 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
WriteAttributeValue("", 7555, Url.Action("Download", new { id = @file.FilePath, name = @file.FileName }), 7555, 75, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" title=\"Download\" target=\"_blank\">\n                                                        Download\n                                                    </a>\n\n                                                </label>\n");
#nullable restore
#line 148 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                                 if (!@TempData["status"].ToString().Contains("Recreate"))
                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                    <label class=\"field_name\">\n                                                        &nbsp; &nbsp;\n");
#nullable restore
#line 152 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                                         if (@TempData["claimaddcondition"].ToString().Contains("claimDraft"))
                                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                            <a");
            BeginWriteAttribute("href", " href=\"", 8399, "\"", 8498, 1);
#nullable restore
#line 154 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
WriteAttributeValue("", 8406, Url.Action("DeleteMileageClaimDraftFile", new { @file.FileID, @file.FilePath, @file.MCID }), 8406, 92, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" onclick=\"return confirm(\'Are you sure to remove attached file?\')\">\n                                                                <span id=\"DeleteFile\" class=\"mdi mdi-delete-outline\">Delete</span>\n");
            WriteLiteral("                                                            </a>\n");
#nullable restore
#line 158 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                                        }
                                                        else
                                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                            <a");
            BeginWriteAttribute("href", " href=\"", 9166, "\"", 9260, 1);
#nullable restore
#line 161 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
WriteAttributeValue("", 9173, Url.Action("DeleteMileageClaimFile", new { @file.FileID, @file.FilePath, @file.MCID }), 9173, 87, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" onclick=\"return confirm(\'Are you sure to remove attached file?\')\">\n                                                                <span id=\"DeleteFile\" class=\"mdi mdi-delete-outline\">Delete</span>\n");
            WriteLiteral("                                                            </a>\n");
#nullable restore
#line 165 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                    </label>\n");
#nullable restore
#line 167 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                                }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                                </td>
                                           

                                                <td width=""30%""></td>
                                            </tr>
                                        </table>
");
#nullable restore
#line 174 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"

                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                            </td>\n\n                        </tr>\n");
            WriteLiteral("                    </table>\n");
#nullable restore
#line 189 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                }
            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"            <div class=""row"">
                <h5 class=""col-md-12 card-title table-summary"">Claim Details</h5>
                <div class=""col-md-12"">
                    <div class=""table-responsive"">
                        <table id=""tblClaims"" class=""table table-sm table-bordered"">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Date of Journey</th>
                                    <th>Facility</th>
                                    <th>From</th>
                                    <th>To</th>
                                    <th>In Time</th>
                                    <th>Out Time</th>
                                    <th>Start Reading</th>
                                    <th>End Reading</th>
                                    <th>Kms</th>
                                    <th>Remarks</th>
");
            WriteLiteral("                                    <th class=\"d-none\">GST</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n");
#nullable restore
#line 215 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                 foreach (var item in Model.DtMileageClaimVMs)
                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                    <tr>\n                                        <td align=\"center\">\n                                            <label");
            BeginWriteAttribute("class", " class=\"", 12358, "\"", 12366, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"lblItem\">  ");
#nullable restore
#line 219 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                                                       Write(Counter);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</label>
                                        </td>
                                        <td>
                                            <div id=""datepicker-popup"" class=""input-group date datepicker"">
                                                <input id=""dtClaimDate"" type=""text"" autocomplete=""off"" class=""form-control form-control-sm"" placeholder=""DD/MM/YYYY"" style=""width: 130px !important;"">
                                                <span class=""input-group-addon input-group-append border-left"">
                                                </span>
                                            </div>
                                        </td>
                                        <td>
                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311647342", async() => {
                WriteLiteral("\n");
                WriteLiteral("                                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
#nullable restore
#line 229 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = ViewBag.FacilityID;

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n                                        </td>\n                                        <td>\n");
            WriteLiteral("                                            <!--<select id=\"FromFacilityID\" asp-items=\"ViewBag.FacilityID\" class=\"form-control form-control-sm\" style=\"width: 150px !important;\">-->\n");
            WriteLiteral(@"                                            <!--</select>-->
                                            <input type=""text"" class=""form-control form-control-sm"" id=""FromFacilityID"" maxlength=""50"" placeholder=""From"" style=""width: 100px !important;"">
                                        </td>
                                        <td>
");
            WriteLiteral("                                            <!--<select id=\"ToFacilityID\" asp-items=\"ViewBag.FacilityID\" class=\"form-control form-control-sm\" style=\"width: 150px !important;\">-->\n");
            WriteLiteral(@"                                            <!--</select>-->
                                            <input type=""text"" class=""form-control form-control-sm"" id=""ToFacilityID"" maxlength=""50"" placeholder=""To"" style=""width: 100px !important;"">
                                        </td>
                                        <td>
                                            <div style=""width: 95px;"">
                                                <input type=""text"" id=""dtInTime"" class=""form-control clockpicker form-control-sm""");
            BeginWriteAttribute("value", " value=\"", 15190, "\"", 15198, 0);
            EndWriteAttribute();
            WriteLiteral(" placeholder=\"hh:mm aa\">\n                                            </div>\n");
            WriteLiteral(@"                                        </td>
                                        <td>
                                            <div style=""width: 95px;"">
                                                <input type=""text"" id=""dtOutTime"" class=""form-control clockpicker form-control-sm""");
            BeginWriteAttribute("value", " value=\"", 16467, "\"", 16475, 0);
            EndWriteAttribute();
            WriteLiteral(" placeholder=\"hh:mm aa\">\n                                            </div>\n\n");
            WriteLiteral(@"                                        </td>
                                        <td>
                                            <input type=""text"" class=""form-control form-control-sm"" id=""txtStartReading"" maxlength=""10"" placeholder=""Start Reading"" onchange=""CalculationKms();"" onkeypress=""javascript:return isNumber (event)"" style=""width: 110px !important;"" />
                                        </td>
                                        <td>
                                            <input type=""text"" class=""form-control form-control-sm"" id=""txtEndReading"" maxlength=""10"" placeholder=""End Reading"" onchange=""CalculationKms();"" onkeypress=""javascript:return isNumber (event)"" style=""width: 110px !important;"" />
                                        </td>
                                        <td>
                                            <input type=""number"" class=""form-control form-control-sm"" id=""txtKMS"" readonly=""readonly"" placeholder=""Kms"" style=""width: 80px !important;"" />
              ");
            WriteLiteral(@"                          </td>
                                        <td>
                                            <input type=""text"" class=""form-control form-control-sm"" id=""txtRemarks"" placeholder=""Remarks"" maxlength=""200"" style=""width: 95px !important;"" />
                                        </td>
");
            WriteLiteral(@"                                        <td class=""actions"">
                                            <span id=""AddClaim"" class=""mdi mdi-plus-circle-outline""></span>
                                            <span id=""EditClaim"" class=""mdi mdi-border-color d-none""></span>
                                            <span id=""DeleteClaim"" class=""mdi mdi-delete-outline""></span>
                                            <input type=""text"" class=""input-large"" name=""MCItemID[]"" value=""0"" id=""txtMCItemID"" style=""width: 100% ; text-align:right; display:none;""
                                                   onpaste=""return false;"" readonly=""readonly"" />
                                            <input type=""text"" class=""form-control form-control-sm"" name=""SubTotal[]"" id=""txtSubTotal"" style=""width: 100% ; text-align:right; display:none;"" />
                                        </td>
                                    </tr>
");
#nullable restore
#line 295 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                    Counter++;
                                }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                            </tbody>
                        </table>
                        <table class=""table table-bordered"">
                            <thead>
                                <tr class=""d-none"">
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tr>
                                <td width=""70%"" class=""text-align-right"">Total KM</td>
                                <td width=""30%"">
                                    <input type=""text"" id=""txtTotalKm"" class=""form-control"" readonly=""readonly""");
            BeginWriteAttribute("value", " value=\"", 20859, "\"", 20896, 1);
#nullable restore
#line 309 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
WriteAttributeValue("", 20867, Model.MileageClaimVM.TotalKm, 20867, 29, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" data-inputmask=""'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true,'autoUnmask': true, 'removeMaskOnSubmit': true, 'digits': 2, 'digitsOptional': false, 'prefix': '', 'placeholder': '0'"" style=""width: 150px !important;"">
                                </td>
                            </tr>
                            <tr class=""trhidePrivateCar"">
                                <td width=""70%"" class=""text-align-right"">Private Car Rate</td>
                                <td width=""30%"">
                                    <input type=""text"" id=""txtPrivateCar"" class=""form-control"" readonly=""readonly""");
            BeginWriteAttribute("value", " value=\"", 21517, "\"", 21554, 1);
#nullable restore
#line 315 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
WriteAttributeValue("", 21525, Model.MileageClaimVM.TotalKm, 21525, 29, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" data-inputmask=""'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true,'autoUnmask': true, 'removeMaskOnSubmit': true, 'digits': 2, 'digitsOptional': false, 'prefix': '', 'placeholder': '0'"" style=""width: 150px !important;"">
                                </td>
                            </tr>
                            <tr class=""trhideMotorBike"">
                                <td width=""70%"" class=""text-align-right"">Motor Bike Rate</td>
                                <td width=""30%"">
                                    <input type=""text"" id=""txtMotorBike"" class=""form-control"" readonly=""readonly""");
            BeginWriteAttribute("value", " value=\"", 22172, "\"", 22209, 1);
#nullable restore
#line 321 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
WriteAttributeValue("", 22180, Model.MileageClaimVM.TotalKm, 22180, 29, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" data-inputmask=""'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true,'autoUnmask': true, 'removeMaskOnSubmit': true, 'digits': 2, 'digitsOptional': false, 'prefix': '', 'placeholder': '0'"" style=""width: 150px !important;"">
                                </td>
                            </tr>
                            <tr>
                                <td width=""70%"" class=""text-align-right"">Grand Total</td>
                                <td width=""30%"">
                                    <input type=""text"" id=""txtGrandTotal"" class=""form-control"" readonly=""readonly""");
            BeginWriteAttribute("value", " value=\"", 22800, "\"", 22840, 1);
#nullable restore
#line 327 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
WriteAttributeValue("", 22808, Model.MileageClaimVM.GrandTotal, 22808, 32, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" data-inputmask=""'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true,'autoUnmask': true, 'removeMaskOnSubmit': true, 'digits': 2, 'digitsOptional': false, 'prefix': '$ ', 'placeholder': '0'"" style=""width: 150px !important;"">
                                </td>
                            </tr>
                            <tr class=""d-none"">
                                <td width=""70%"" class=""text-align-right"">Total Amount with GST</td>
                                <td width=""30%"">275$</td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class=""col-md-12 mt-4"">
                    <div class=""form-group col-md-4"">
                        <label>Upload</label>
                        <input type=""file"" name=""img[]"" class=""file-upload-default"" multiple id=""fileInput"" accept="".gif,.jpg,.jpeg,.png,.doc,.docx,.csv,.xls,.pdf"" onchange=""ValidateSingleInput(this);"">
                        <div class=""input-group");
            WriteLiteral(@" col-xs-12"">
                            <input id=""fileInputText"" type=""text"" class=""form-control file-upload-info"" disabled
                                   placeholder=""Upload"">
                            <span class=""input-group-append"">
                                <button class=""file-upload-browse btn btn-sm btn-primary"" type=""button"">Upload</button>
                            </span>
                        </div>
                        <br />
                        <span style=""color: Red"">(Supported File Types *.pdf;*.xls;*.csv;*.doc;*.docx;*.png;*.jpeg;*.jpg;*.gif)</span>
                        <p id=""selectedFilesText"" style=""margin-top: 10px;""></p>
                        <div id=""fileList""></div>
                    </div>
                </div>
                <div class=""col-md-12"">
                    <div class=""form-group"">
                        <div class=""form-check form-check-flat form-check-primary"">
                            <label class=""form-check-label"">
               ");
            WriteLiteral(@"                 <input id=""chkTC"" type=""checkbox"" class=""form-check-input"">
                                I certify that the claims are true and correct
                                <i class=""input-helper""></i>
                            </label>
                            <ul class=""list-group"">
                                Note:
                                <li class=""list-group-item-warning"">
                                    1) All claims must be supported by receipts and with explanatory notes where necessary.
                                </li>
");
            WriteLiteral(@"                                <li class=""list-group-item-warning"">
                                    2) Any claimant found to be submitting fradulent claims shall be subject to disciplinary actions, including immediate termination.
                                </li>
                                <li class=""list-group-item-warning"">
                                    3) Non compliance to the stated guidelines will result in the delay of processing of claims/ rejection of claims
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="" col-md-6"">
");
#nullable restore
#line 384 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                     if (@TempData["status"].ToString().Contains("Add") || @TempData["status"].ToString().Contains("Recreate"))
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        <button type=""submit"" class=""btn btn-primary mr-2"" id=""btnSave"" onclick=""return getdata(this.id);"">Submit Claim</button>
                        <button type=""submit"" class=""btn btn-secondary mr-2"" id=""btnDraft"" onclick=""return getdata(this.id);"">Save as Draft</button>
");
#nullable restore
#line 388 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                    }
                    else
                    {
                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 391 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                         if (@TempData["claimaddcondition"].ToString().Contains("claimDraft"))
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <button type=\"submit\" class=\"btn btn-primary mr-2\" id=\"btnSave\" onclick=\"return getdata(this.id);\">Submit Claim</button>\n");
#nullable restore
#line 394 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                        }
                        else
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <button type=\"submit\" class=\"btn btn-primary mr-2\" id=\"btnEdit\" onclick=\"return getdata(this.id);\">Update Claim</button>\n");
#nullable restore
#line 398 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <button type=\"submit\" class=\"btn btn-secondary mr-2\" id=\"btnDraftEdit\" onclick=\"return getdata(this.id);\">Update Draft</button>\n");
#nullable restore
#line 400 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <input type=\"hidden\" id=\"hdfClaimID\" name=\"hdfClaimID\" value=\"0\" />\n                    <input type=\"hidden\" id=\"txtMCNO\" name=\"txtMCNO\"");
            BeginWriteAttribute("value", " value=\"", 27996, "\"", 28030, 1);
#nullable restore
#line 402 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
WriteAttributeValue("", 28004, Model.MileageClaimVM.MCNo, 28004, 26, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\n");
            WriteLiteral(@"                    <button class=""btn btn-danger mr-2"" onclick=""RedirectView();"">Close</button>
                    <button class=""btn btn-light"" onclick=""ClearData();"">Reset</button>
                </div>
            </div>

        </div>
    </div>
</div>
");
            DefineSection("scripts", async() => {
                WriteLiteral("\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311665358", async() => {
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311665662", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311666845", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_13.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
#nullable restore
#line 416 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n");
                    WriteLiteral("        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311668962", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311670145", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311671328", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311672511", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_17.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_17);
#nullable restore
#line 421 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311674589", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_18.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_18);
#nullable restore
#line 422 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311676667", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311677850", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311679033", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n");
                    WriteLiteral("        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311680255", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311681438", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311682621", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311683804", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311684987", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Names = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311687143", async() => {
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311687447", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311688630", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_13.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
#nullable restore
#line 436 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n");
                    WriteLiteral("        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311690747", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311691930", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311693113", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311694296", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_17.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_17);
#nullable restore
#line 441 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311696374", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_18.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_18);
#nullable restore
#line 442 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311698452", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b9311699635", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b93116100818", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n");
                    WriteLiteral("        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b93116102041", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b93116103225", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b93116104409", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b93116105593", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f4ed2dcb150f69f065a22ad8ff2195124195f3cd80c13b0b75e6115406b93116106777", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_27);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Names = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script type=""text/javascript"">
        $(document).ready(function () {
            $('#datepicker-popup').datepicker({
                format: 'dd/mm/yyyy',
                autoclose: true,
                todayHighlight: true,
                endDate: new Date()
            });
            //$('.clockpicker').clockpicker({
            //    autoclose: true,
            //    twelvehour: true
            //});
        });
        //$('body').on('focus', "".clockpicker"", function () {
        //    $(this).clockpicker({
        //        autoclose: true,
        //        twelvehour: true
        //    });
        //});
        $('body').on('change', "".clockpicker"", function () {
            var inTime = $(this).val();
            if (inTime) {
                $(this).val(checkValidTimeFormat(inTime));
            }
        });


        $('body').on('focus', "".datepicker"", function () {
            $(this).datepicker({
                format: 'dd/mm/yyyy',
                autoclose: true,
               ");
                WriteLiteral(@" todayHighlight: true,
                endDate: new Date()
            });
        });

        //$('body').on('focus', ""#txtSubTotal"", function () {
        //    $(this).inputmask({
        //        alias: 'decimal', groupSeparator: ',', removeMaskOnSubmit: true, digits: 2, digitsOptional: false,
        //        autoGroup: true, autoUnmask: true, prefix: '$ ', placeholder: '0'
        //    });
        //});
        var fileListArr = [];
        var _validFileExtensions = ["".jpg"", "".jpeg"", "".bmp"", "".gif"", "".png"", "".doc"", "".docx"", "".csv"", "".xls"", "".pdf""];
        function ValidateSingleInput(oInput) {
            if (oInput.type == ""file"") {
                for (var i = 0; i < oInput.files.length; ++i) {
                    var blnValid = false;
                    var sFileName = oInput.files[i].name;
                    if (sFileName.length > 0) {
                        for (var j = 0; j < _validFileExtensions.length; j++) {
                            var sCurExtension = _validFileExtensions[j];
     ");
                WriteLiteral(@"                       if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                                blnValid = true;
                                break;
                            }
                        }
                        if (!blnValid) {
                            alert(""Sorry, "" + sFileName + "" is invalid, allowed extensions are: "" + _validFileExtensions.join("", ""));
                            oInput.value = """";
                            return false;
                        }
                        else {
                            fileListArr.push(oInput.files[i]);
                        }
                    }
                }
                displaySelectedFilesList();
            }
            return true;
        }

        function deleteFile(fileName) {
            var newList = [];
            for (var i = 0; i < fileListArr.length; ++i) {
                var sFileName = fileListArr[i].name;");
                WriteLiteral(@"
                if (sFileName === fileName) {
                    /*fileListArr.splice(i, 1);*/
                }
                else {
                    newList.push(fileListArr[i]);
                }
            }
            fileListArr = newList;
            displaySelectedFilesList();
        }

        function displaySelectedFilesList() {
            var output = document.getElementById('fileList');
            var selectedFilesText = document.getElementById('selectedFilesText');
            output.innerHTML = '';
            var children = """";

            for (var i = 0; i < fileListArr.length; ++i) {
                var sFileName = fileListArr[i].name;
                var file = URL.createObjectURL(fileListArr[i]);
                children += '<li>' + '<a href=""' + file + '"" target=""_blank"">' + sFileName + '</a><button class=""close"" aria-label=""Close"" onclick=""deleteFile(\'' + sFileName + '\')""><span aria-hidden=""true"">&times;</span ></button><br>' + '</li>';
            }
            output.inn");
                WriteLiteral(@"erHTML = '<ul>' + children + '</ul>';
            selectedFilesText.innerHTML = ""Selected files:"";

            var textMessage = """";
            if (fileListArr.length > 0) {
                textMessage = ""Selected "" + fileListArr.length + "" File(s)"";
            }
            else {
                textMessage = ""Upload"";
                selectedFilesText.innerHTML = '';
            }

            $(""#fileInputText"").val(textMessage);
        }
    </script>
    <script>
        var Params = [];
        $(document).ready(function () {
            $(""input"").inputmask();
            //$('body').one('focus', "".date"", function () {
            //    $(this).datetimepicker();
            //});


            //$('.date').datetimepicker();

            //$('body').one('focus', "".datetimepicker-input"", function () {
            //    $(this).datetimepicker();
            //});
            //$(function () {
            //    $('#datetimepicker14').datetimepicker({
            //        allowMultidate: true,
       ");
                WriteLiteral(@"     //        multidateSeparator: ','
            //    });
            //});
            //$('#timepicker-example').datetimepicker({
            //    format: 'LT'
            //});
            /*
            $(document).on('click', '#DeleteClaim', function () {
                debugger;
                var rowsCount = $('#tblClaims tr').length - 5;
                if (rowsCount === 0)
                    return;

                var newRowCount = rowsCount + 1;
                $('#tblClaims > tbody > tr').eq(newRowCount).remove();
            });
            */
            // var ProjectType = jQuery('input[name=project]:checked').val();
            TravelModeChange('Private Car');
            var CID = '");
#nullable restore
#line 602 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                  Write(ViewBag.CID);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\n            if (CID != 0) {\n                //alert(CID);\n                var status = \'");
#nullable restore
#line 605 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                         Write(TempData["status"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\n                var isDraft = \'");
#nullable restore
#line 606 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                          Write(TempData["claimaddcondition"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';

                var GetTextValuesSGUrl = ""/MileageClaim/GetTextValuesSG"";
                if (isDraft.includes(""claimDraft"")) {
                    GetTextValuesSGUrl = ""/MileageClaim/GetTextValuesSGDraft"";
                }
                var ClaimStatus = '");
#nullable restore
#line 612 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                              Write(ViewBag.ClaimStatus);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\n                //alert(ClaimStatus);\n                if (ClaimStatus == \"Update\" || ClaimStatus == \"Recreate\") {\n                    $(\"#hdfClaimID\").val(");
#nullable restore
#line 615 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                    Write(ViewBag.CID);

#line default
#line hidden
#nullable disable
                WriteLiteral(");\n\n                    var table1 = document.getElementById(\"tblClaims\");\n                    var rowLength = table1.rows.length;\n                    var l = 0;\n\n                    var id = \'");
#nullable restore
#line 621 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                         Write(ViewBag.CID);

#line default
#line hidden
#nullable disable
                WriteLiteral(@" ';
                    $.ajax({
                        type: ""POST"",
                        url: GetTextValuesSGUrl,
                        data: { id: id },
                        success: function (data) {
                            //var result = JSON.stringify(data);
                            /* alert(data);*/
                            var table1 = document.getElementById(""tblClaims"");
                            var rowLength = table1.rows.length;
                            //alert(data.length);
                            //alert(data.dtClaimsList.length);
                            //for (var i = 0; i < data.length; ++i) {

                            //}
                            for (var l = 0; l < data.dtClaimsList.length; l++) {
                                var DtMCItemID = data.dtClaimsList[l].mcItemID;
                                var Description = data.dtClaimsList[l].description;
                                var Amount = data.dtClaimsList[l].amount;
                      ");
                WriteLiteral(@"          var ExpenseCategory = data.dtClaimsList[l].expenseCategoryID;
                                var TBCID = data.dtClaimsList[l].tbCID;
                                var DateOfJourney = data.dtClaimsList[l].dateOfJourney;
                                var date2 = new Date(DateOfJourney);
                                var FacilityID = data.dtClaimsList[l].facilityID;
                                var FromFacilityID = data.dtClaimsList[l].fromFacilityID;
                                var ToFacilityID = data.dtClaimsList[l].toFacilityID;
                                var InTimeTime = data.dtClaimsList[l].inTime;
                                var OutTimeTime = data.dtClaimsList[l].outTime;
                                var StartReading = data.dtClaimsList[l].startReading;
                                var EndReading = data.dtClaimsList[l].endReading;
                                var Kms = data.dtClaimsList[l].kms;
                                var Remarks = data.dtClaimsList[l].rema");
                WriteLiteral(@"rk;

                                var row1 = table1.rows[l + 1];

                                $(row1).find(""#dtClaimDate"").datepicker({
                                    format: 'dd/mm/yyyy'
                                }).datepicker();
                                $(row1).find(""#dtClaimDate"").datepicker('setDate', date2).datepicker('fill');
                                $(row1).find(""#FacilityID"").val(FacilityID);
                                $(row1).find(""#FromFacilityID"").val(FromFacilityID);
                                $(row1).find(""#ToFacilityID"").val(ToFacilityID);

                                //$(row1).find(""#dtInTime"").datepicker({
                                //    format: 'dd/mm/yyyy'
                                //}).datepicker();

                                //$(row1).find('#dtInTime').clockpicker({
                                //    autoclose: true,
                                //    twelvehour: true
                                //});

              ");
                WriteLiteral(@"                  //$(row1).find('#dtOutTime').clockpicker({
                                //    autoclose: true,
                                //    twelvehour: true
                                //});


                                var timerInVal = moment().format('hh:mm A');
                                timerInVal = moment(InTimeTime).format('hh:mm A');

                                var timerOutVal = moment().format('hh:mm A');
                                timerOutVal = moment(OutTimeTime).format('hh:mm A');

                                $(row1).find(""#dtInTime"").val(timerInVal);
                                $(row1).find(""#dtOutTime"").val(timerOutVal);
                                $(row1).find(""#txtStartReading"").val(StartReading);
                                $(row1).find(""#txtEndReading"").val(EndReading);
                                $(row1).find(""#txtSubTotal"").val(Amount);
                                $(row1).find(""#txtKMS"").val(Kms);
                                ");
                WriteLiteral(@"$(row1).find(""#txtMCItemID"").val(DtMCItemID);
                                $(row1).find(""#txtRemarks"").val(Remarks);

                                // new lines of code to disable fields start
                                if (ClaimStatus == ""Update"" && !isDraft.includes(""claimDraft"")) {
                                    //$(row1).find('#AddClaim').click(function (e) { return false; });
                                    //$(row1).find('#DeleteClaim').click(function (e) { return false; });
                                }
                                // new lines of code to disable fields end
                            }

                            CalculationKms();
                        },
                        error: function () {
                            // $(""#dialogVerified"").modal('hide');
                        }
                    });

");
                WriteLiteral(@"                }
            }

            $(""#tblClaims"").on('click', '#DeleteClaim', function () {
                var x = document.getElementById(""tblClaims"").rows.length;
                //  alert(x)
                if (x > 2) {
                    var par = $(this).parent().parent(); //tr
                    $(this).parent().parent().remove();
                    $('#tblClaims').find('tr').each(function (i, el) {
                        if (i != 0) {
                            var tds = $(this).find('td');
                            $(this).find('#lblItem').html(i);
                        }
                    });
                }
                CalculationKms();
            });

            $(document).on('click', '#AddClaim', function () {
                var message = """";
                var table = document.getElementById(""tblClaims"");
                for (var i = 1; i < 2; i++) {
                    var row = table.rows[i];
                    for (var j = 0; j < row.cells.length; j++) {
    ");
                WriteLiteral(@"                    var cell = row.cells[j];
                        //if (j == 5) {
                        //    var new_datepicker = $('<input type=""text"">').datepicker();
                        //    //$('#content').append('<br>a datepicker ').append(new_datepicker);
                        //    cell = new_datepicker;
                        //}

                        //alert('cell value ' + cell.innerHTML);
                        if (j == 0) {
                            message += ""<td align='center'>"" + cell.innerHTML + ""</td>"";
                        }
                        else {
                            message += ""<td>"" + cell.innerHTML + ""</td>"";
                        }

                    }
                }

                $(this).parent().parent().after('<tr>' + message + '</tr>');
                message = """";
                var DepartmentID = 0;
                $('#tblClaims').find('tr').each(function (i, el) {
                    var rowcount = table.rows.length;
            ");
                WriteLiteral(@"        if (i != 0) {
                        var tds = $(this).find('td');
                        $(this).find('#lblItem').html(i);
                    }
                });
                CalculationKms();

                /*
                           debugger;
                           var date1 = $(""#ClaimDate"").val();
                           var desc = $(""#Description"").val();
                           var category = $(""#Category option:selected"").text();
                           var amount = $(""#Amount1"").val();
                           var gst = $(""#GST1"").val();

                           //var table = document.getElementById(""tblClaims"");
                           //var row = table.rows[1];
                           //alert('row 1 value ' + row);
                           //for (var i = 1; i < 2; i++) {
                           //    row = table.rows[i];

                           //    for (var j = 0; j < row.cells.length; j++) {
                           //    }
                ");
                WriteLiteral(@"           //}
                           var rowsCount = $('#tblClaims tr').length - 4;
                           alert(' rowsCoutn ' + rowsCount);
                           var newRowCount = rowsCount + 1;

                           var newRow = ""<tr>"";
                           newRow += ""<td>"" + newRowCount + ""</td>"";
                           newRow += ""<td>"" + date1 + ""</td>"";
                           newRow += ""<td>"" + desc + ""</td>"";
                           newRow += ""<td>"" + category + ""</td>"";
                           newRow += ""<td>"" + amount + ""</td>"";
                           newRow += ""<td>"" + gst + ""</td>"";
                           newRow += ""<td class=\""actions\"">"";
                           newRow += ""<span id=\""EditClaim1\"" class=\""mdi mdi-border-color\""></span>"";
                           newRow += ""<span id=\""DeleteClaim1\"" class=\""mdi mdi-delete-outline\""></span>"";
                           newRow += ""</td>"";
                           newRow += ""</tr>"";

              ");
                WriteLiteral(@"             var clonedRow = $('#tblClaims tbody tr:first').clone();
                           clonedRow.find('input').val('');
                           //$('#tblClaims tbody').append(clonedRow);

                           $('#tblClaims > tbody > tr').eq(rowsCount).after(clonedRow);

                           //$('#tblClaims > tbody > tr:nth-child(2) td').html(11111);

                           var dataTable = $(""#tblClaims"");
                           var rowNumber = newRowCount;
                           var columnNumber = 0;
                           dataTable[0].rows[newRowCount + 1].cells[columnNumber].innerHTML = newRowCount;

                           // Clear the data
                           $(""#ClaimDate"").val('');
                           $(""#Description"").val('');
                           $(""#Category"").prop('selectedIndex', 0);
                           $(""#Amount1"").val('');
                           $(""#GST1"").val('');
                             */
            });

         ");
                WriteLiteral(@"   //$(document).on('click', '#AddClaim', function () {

            //});

        });

        //setDatepickers = function () {
        //    $('.datetimepicker-input').datetimepicker({
        //        format: ""YYYY-MM-DD"",
        //        ignoreReadonly: true
        //    });
        //}

        function isNumber(evt) {
            //alert(""number"");
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 47 || charCode > 57) && charCode != 44) {
                return false;
            }
        }

        function RedirectView() {
            window.location.href = ""/MileageClaim/Index"";
        }

        function ClearData() {

            var value = 'PrivateCar';
            $(""input[name=radioTravelMode][value="" + value + ""]"").prop('checked', 'checked');
            //         $('#FileUpload')
            $('#chkTC').prop('checked', false);
            $('#tblClaims').find('tr').each(function ");
                WriteLiteral(@"(i, el) {
                if (i != 0) {
                    $(this).find('#dtClaimDate').val('');
                    $(this).find('#FacilityID option:first').attr('selected', true);
                    $(this).find('#FromFacilityID').val('');
                    $(this).find('#ToFacilityID').val('');
                    $(this).find('#dtInTime').val('');
                    $(this).find('#dtOutTime').val('');
                    $(this).find('#txtStartReading').val('');
                    $(this).find('#txtEndReading').val('');
                    $(this).find('#txtKMS').val('');
                    $(this).find('#txtRemarks').val('');
                    $(this).find('#txtSubTotal').val('');
                }
            });
            $('#txtTotalKm').val('');
            $('#txtGrandTotal').val('');
        }

        function Calculation() {
            var GrandTotal = 0;
            $('#tblClaims').find('tr').each(function (i, el) {
                if (i != 0) {
                    var txtSubTot = $(");
                WriteLiteral(@"this).find('#txtSubTotal').val();
                    if (txtSubTot == ""NaN"" || txtSubTot == """") {
                        //  $('#GrandTotal').val(0.00);
                        //$('#txtSubTotal').val(0.00);
                        txtSubTot = 0.00;
                    }
                    GrandTotal = (parseFloat(GrandTotal) + parseFloat(txtSubTot)).toFixed(2);
                }
            });

            // var textValue = $('#txtSubTotal').val();

            //if (txtSubTot == ""NaN"") {
            //    $('#GrandTotal').val(0.00);
            //    $('#txtSubTotal').val(0.00);
            //}

            document.getElementById('txtGrandTotal').value = (parseFloat(GrandTotal)).toFixed(2);
        }

        function TravelModeChange(val) {
            CalculationKms();
        }

        function CalculationKms() {
            var PrivateCar = '");
#nullable restore
#line 940 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                         Write(ViewBag.PrivateCar);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\n            var MotorCycle = \'");
#nullable restore
#line 941 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                         Write(ViewBag.MotorCycle);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
            var KMS = 0;
            var GrandKm = 0;
            var GrandTotal = 0;
            var SubTotal = 0;
            var TravelMode = $('input[name=radioTravelMode]:checked').val();
            $('#tblClaims').find('tr').each(function (i, el) {
                if (i != 0) {
                    var StartReading = $(this).find('#txtStartReading').val();
                    var EndReading = $(this).find('#txtEndReading').val();

                    //alert(StartReading);
                    //if (!StartReading) {
                    //    alert('Please Enter Start Reading at Row No ' + i);
                    //    return false;
                    //}

                    //if (!EndReading) {
                    //    alert('Please Enter End Reading at Row No ' + i);
                    //    return false;
                    //}

                    //if (StartReading >= EndReading) {
                    //    alert('End Reading cannot be less than or Equal to Start Reading at Row No ' + i);
    ");
                WriteLiteral(@"                //    return false;
                    //}

                    KMS = EndReading - StartReading;
                    $(this).find('#txtKMS').val(KMS);
                    GrandKm = (parseFloat(GrandKm) + parseFloat(KMS)).toFixed(2);

                    if (TravelMode == ""Private Car"") {
                        SubTotal = (parseFloat(PrivateCar) * parseFloat(GrandKm)).toFixed(2);
                    }
                    else {
                        SubTotal = (parseFloat(MotorCycle) * parseFloat(GrandKm)).toFixed(2);
                    }
                    $(this).find('#txtSubTotal').val(SubTotal);
                }
            });

            if (TravelMode == ""Private Car"") {
                $('.trhideMotorBike').hide();
                $('.trhidePrivateCar').show();
                document.getElementById('txtPrivateCar').value = (parseFloat(PrivateCar)).toFixed(2);
                GrandTotal = (parseFloat(PrivateCar) * parseFloat(GrandKm)).toFixed(2);
            }
            else");
                WriteLiteral(@"
            {
                $('.trhidePrivateCar').hide();
                $('.trhideMotorBike').show();
                document.getElementById('txtMotorBike').value = (parseFloat(MotorCycle)).toFixed(2);
                GrandTotal = (parseFloat(MotorCycle) * parseFloat(GrandKm)).toFixed(2);
            }
            //alert(PrivateCar);
            document.getElementById('txtTotalKm').value = (parseFloat(GrandKm)).toFixed(2);
            document.getElementById('txtGrandTotal').value = (parseFloat(GrandTotal)).toFixed(2);
        }

        let getTime = (m) => {
            return m.minutes() + m.hours() * 60;
        }

        function getdata(id) {
            if (id == ""btnSave"" || id == ""btnEdit"") { }
            param = ""SendforApproval"";
            var res = param;
            var ErrorStatus = ""true"";
            var MileageClaimLimit = '");
#nullable restore
#line 1009 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                Write(ViewBag.MileageClaimLimit);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\n            var PrivateCar = \'");
#nullable restore
#line 1010 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                         Write(ViewBag.PrivateCar);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\n            var MotorCycle = \'");
#nullable restore
#line 1011 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                         Write(ViewBag.MotorCycle);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
            var GrandTotal = $('#txtGrandTotal').val();
            if (res == ""SendforApproval"") {

                $('#tblClaims').find('tr').each(function (i, el) {
                    if (i != 0) {
                        var $tds = $(this).find('td');

                        var ClaimDate = $(this).find(""#dtClaimDate"").val();
                        var FacilityID = $(this).find('#FacilityID').val();
                        var Facility = $(this).find('#FacilityID').val();
                        var FromFacilityID = $(this).find('#FromFacilityID').val();
                        var ToFacilityID = $(this).find('#ToFacilityID').val();
                        var InTime = $(this).find('#dtInTime').val();
                        var OutTime = $(this).find('#dtOutTime').val();
                        var StartReading = $(this).find('#txtStartReading').val();
                        var EndReading = $(this).find('#txtEndReading').val();
                        var KMS = $(this).find('#txtKMS').val();
    ");
                WriteLiteral(@"                    //var SubTotal = $(this).find('#txtSubTotal').val();

                        var convertedInTime = moment(InTime, 'hh:mm A').format('HH:mm')
                        var convertedOutTime = moment(OutTime, 'hh:mm A').format('HH:mm')


                        if (i == 1) {

                            if (ClaimDate == """" || ClaimDate == null) {
                                alert('Please select date of journey at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (Facility == null) {
                                alert('Please Select Facility Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (!FromFacilityID) {
                                alert('Please Enter From Place at Row No ' + i);
                                ErrorStatus = """);
                WriteLiteral(@"false"";
                                return false;
                            }

                            if (!ToFacilityID) {
                                alert('Please Enter To Place at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (!InTime) {
                                alert('Please Enter In Time at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (!OutTime) {
                                alert('Please Enter Out Time at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (convertedInTime >= convertedOutTime) {
                                alert('Out Time must be greater than In Time at Row No' + i);
      ");
                WriteLiteral(@"                          ErrorStatus = ""false"";
                                return false;
                            }

                            if (!StartReading) {
                                alert('Please Enter Start Reading at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (!EndReading) {
                                alert('Please Enter End Reading at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (parseInt(StartReading) >= parseInt(EndReading)) {
                                alert('End Reading cannot be less than or Equal to Start Reading at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }



                        }
               ");
                WriteLiteral(@"         else {
                            if (ClaimDate == """" || ClaimDate == null) {
                                alert('Please select date of journey at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (Facility == null) {
                                alert('Please Select Facility Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (!FromFacilityID) {
                                alert('Please Enter From Place at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (!ToFacilityID) {
                                alert('Please Enter To Place at Row No ' + i);
                                ErrorStatus = ""false"";
         ");
                WriteLiteral(@"                       return false;
                            }

                            if (!InTime) {
                                alert('Please Enter In Time at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (!OutTime) {
                                alert('Please Enter Out Time at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }


                            if (convertedInTime >= convertedOutTime) {
                                alert('Out Time must be greater than In Time at Row No' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (!StartReading) {
                                alert('Please Enter Start Reading at Row No ' + i);
                 ");
                WriteLiteral(@"               ErrorStatus = ""false"";
                                return false;
                            }

                            if (!EndReading) {
                                alert('Please Enter End Reading at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                            if (parseInt(StartReading) >= parseInt(EndReading)) {
                                alert('End Reading cannot be less than or Equal to Start Reading at Row No ' + i);
                                ErrorStatus = ""false"";
                                return false;
                            }

                        }
                    }
                });

                //alert(res);
                var TravelMode = $('input[name=radioTravelMode]:checked').val();
                if (parseFloat(GrandTotal) > parseFloat(MileageClaimLimit)) {
                    alert('Grand total cannot exceed $' + Mil");
                WriteLiteral(@"eageClaimLimit);
                    ErrorStatus = ""false"";
                    return false;
                }

                if (ErrorStatus == ""false"") {
                    return false;
                }

                var Tnc = $('#chkTC').is(':checked');
                if (Tnc == false) {
                    alert('Please certify that the claims are true and correct to proceed');
                    ErrorStatus = false;
                    return false;
                }

                if (ErrorStatus == ""false"") {
                    return false;
                }
            }

            var formData = new FormData();
            var dtClaimsArr = new Array();
            dtClaimsArr.length = 0;

            $('#tblClaims').find('tr').each(function (i, el) {
                if (i != 0) {
                    var TravelMode = $('input[name=radioTravelMode]:checked').val();
                    //alert('Travel mode' + TravelMode);
                    var ClaimDate = $(this).find('#dtClaimDate')");
                WriteLiteral(@".val();

                    var FacilityID = $(this).find('#FacilityID').val();
                    //alert('FacilityID ' + FacilityID);

                    var FromFacilityID = $(this).find('#FromFacilityID').val();
                    //alert('FromFacilityID ' + FromFacilityID);

                    var ToFacilityID = $(this).find('#ToFacilityID').val();
                    //alert('ToFacilityID ' + ToFacilityID);

                    var InTime = $(this).find('#dtInTime').val();
                    var OutTime = $(this).find('#dtOutTime').val();
                    var StartReading = $(this).find('#txtStartReading').val();
                    var EndReading = $(this).find('#txtEndReading').val();
                    var KMS = $(this).find('#txtKMS').val();
                    var Remarks = $(this).find('#txtRemarks').val();
                    var SubTotal = 0;
                    var DtMCItemID = $(this).find('#txtMCItemID').val();

                    if (TravelMode == ""Private Car"") {
                ");
                WriteLiteral(@"        SubTotal = (parseFloat(PrivateCar) * parseFloat(KMS)).toFixed(2);
                    }
                    else {
                        SubTotal = (parseFloat(MotorCycle) * parseFloat(KMS)).toFixed(2);
                    }

                    //alert('ClaimDate ' + ClaimDate);
                    //alert('InTime' + InTime);

                    var indate = new Date(ClaimDate + ' ' + InTime);
                    //alert('indate' + indate);
                    var date1 = moment(ClaimDate + ' ' + InTime, 'DD/MM/YYYY HH:mm A');
                    //alert('date1 convert to date ' + new Date(date1));
                    var date1 = date1.format('DD/MM/YYYY HH:mm A')
                    //moment('Mon 03-Jul-2017, 11:00 PM', 'ddd DD-MMM-YYYY, hh:mm A').format('hh:mm A')
                    //alert('date1 with A' + date1);
                    var d = date1;
                    var n = d.toLocaleString([], { hour: '2-digit', minute: '2-digit' });

                    //alert(' to locale dt ' + n);

    ");
                WriteLiteral(@"                var date3 = new Date(date1);
                    //alert('InTime 1 ' + date1);
                    //alert('formatedDateTime 1 ' + date1);
                    //alert(' new date1 ' + date3);

                    var date2 = moment(ClaimDate + ' ' + OutTime, 'DD/MM/YYYY HH:mm');
                    var date2 = date2.format('DD/MM/YYYY HH:mm')

                    //var date1 = new Date(ClaimDate);
                    var nClaimDate = new Date(moment(ClaimDate, 'DD/MM/YYYY'));
                    nClaimDate = nClaimDate.toLocaleDateString().slice(0, 10);
                    //var date1 = new Date(moment(ClaimDate + ' ' + InTime, 'DD/MM/YYYY HH:mm'));
                    //var date3 = moment((ClaimDate + ' ' + InTime)).utc().format('DD/MM/YYYY HH:mm')
                    //    alert(date3);
                    //var date2 = new Date(moment(ClaimDate + ' ' + OutTime, 'DD/MM/YYYY HH:mm'));
                    //var date3 = date1.toLocaleDateString().slice(0, 10);
                    //let date3 = n");
                WriteLiteral(@"ew Date(date1.format(""L""));
                    //let date4 = new Date(date2.format(""L""));

                    //alert(date1);
                    //alert(date2);

                    //alert('dtInTime ' + InTime);
                    //alert('dtOutTime ' + OutTime);
                    //alert('txtStartReading ' + StartReading);
                    //alert('txtEndReading ' + EndReading);
                    //alert('txtKMS ' + KMS);
                    //alert('txtRemarks ' + Remarks);
                    //alert('txtSubTotal ' + SubTotal);
                    var dtClaim = {}
                    dtClaim.MCItemID = DtMCItemID;
                    dtClaim.DateOfJourney = nClaimDate;
                    dtClaim.FacilityID = FacilityID;
                    dtClaim.FromFacilityID = FromFacilityID;
                    dtClaim.ToFacilityID = ToFacilityID;
                    dtClaim.InTimeTime = InTime;
                    dtClaim.OutTimeTime = OutTime;
                    dtClaim.StartReading = StartReading;
   ");
                WriteLiteral(@"                 dtClaim.EndReading = EndReading;
                    dtClaim.Kms = KMS;
                    dtClaim.Remark = Remarks;
                    dtClaim.Amount = SubTotal;
                    dtClaim.OrderBy = i;
                    dtClaimsArr.push(dtClaim);

                    //Params.push({
                    //    TravelMode: TravelMode, ClaimDate: ClaimDate, DateOfJourney: ClaimDate, FacilityID: FacilityID,
                    //    FromFacilityID: FromFacilityID, ToFacilityID: ToFacilityID, InTime: InTime, OutTime: OutTime, StartReading: StartReading,
                    //    EndReading: EndReading, Kms: KMS, Remarks: Remarks, SubTotal: SubTotal, GrandTotal: $('#txtGrandTotal').val()
                    //});


                }

            });

            var mcIDValue = $('#hdfClaimID').val();
            if (id == ""btnSave"") {
                mcIDValue = 0;
            }

            var claimAddCondition = '");
#nullable restore
#line 1301 "C:\Users\Dell\Desktop\UETrack2019-eclaim-1d3df673f4b1\EClaimsWeb\Views\MileageClaim\Create.cshtml"
                                Write(TempData["claimaddcondition"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';

            formData.append('data', JSON.stringify(
                {
                    Company: $(""#lblCompany"").html(),
                    TravelMode: $('input[name=radioTravelMode]:checked').val(),
                    GrandTotal: $(""#txtGrandTotal"").val(),
                    TotalKm: $(""#txtTotalKm"").val(),
                    MCID: $('#hdfClaimID').val(),
                    MCNo: $('#txtMCNO').val(),
                    dtClaims: dtClaimsArr,
                    ClaimAddCondition: claimAddCondition
                }
            ));
            //{
            //TravelMode: $('input[name=radioTravelMode]:checked').val(),
            //GrandTotal: $(""#txtGrandTotal"").val(),
            //dtClaims: dtClaimsArr}));
            //var data = JSON.stringify({
            //TravelMode: $('input[name=radioTravelMode]:checked').val(),
            //GrandTotal: $(""#txtGrandTotal"").val(),
            //order: dtClaimsArr
            //});
            //var GrandTotal = $('#txtGrandTotal').val();
            ");
                WriteLiteral(@"//alert('GrandTotal  ' + GrandTotal);
            //return false;
            // var listdata = JSON.stringify({ 'listdata': Params });

            var submitUrl = '/MileageClaim/SaveItems';
            var uploadUrl = '/MileageClaim/UploadMCFiles';
            if (id === 'btnDraft' || id === ""btnDraftEdit"") {
                submitUrl = '/MileageClaim/SaveDraftItems';
                uploadUrl = '/MileageClaim/UploadMCFilesDraft';
            }

            if (res == ""SendforApproval"") {
                //alert('Before calling');
                $('#btnSave').attr('disabled', 'disabled');
                $('#btnEdit').attr('disabled', 'disabled');
                $.ajax({
                    type: ""POST"",
                    url: submitUrl,
                    data: formData,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    processData: false,
                    contentType: false,
                    success: function (data) {
 ");
                WriteLiteral(@"                       //alert('Success');
                        var myID = data.res;
                        var files = fileListArr; // $('#fileInput').prop(""files"");
                        var url = uploadUrl;
                        var formData = new FormData();
                        for (var i = 0; i < files.length; i++) {
                            formData.append(""files"", files[i]);
                        }
                        //if (files.length > 0) {
                            formData.append(""FormFile"", files);
                            // Adding more keys/values here if need
                            formData.append('Id', myID);
                            formData.append('mcIDValue', $('#hdfClaimID').val());
                            formData.append('claimAddCondition', claimAddCondition);
                            //for (var x = 0; x < files.length; x++) {
                            //    formData.append(""file"" + x, files[x]);
                            //}
                ");
                WriteLiteral(@"            //formData = new FormData();
                            //formData.append(""UploadPO"", files[0]);
                            jQuery.ajax({
                                type: 'POST',
                                url: url,
                                data: formData,
                                cache: false,
                                contentType: false,
                                processData: false,
                                beforeSend: function (xhr) {
                                    xhr.setRequestHeader(""XSRF-TOKEN"",
                                        $('input:hidden[name=""__RequestVerificationToken""]').val());
                                },
                                success: function (repo) {
                                    if (repo == ""success"") {
                                        fileListArr = [];
                                        //alert(""File : "" + repo.filename + "" is uploaded successfully"");
                                  ");
                WriteLiteral(@"      //SuccessToast('Mileage Claim added successfully');
                                        if (id == ""btnSave"") {
                                            $(""#msg"").html(""Mileage Claim added successfully"").css(""color"", ""green"");
                                        }
                                        else {
                                            $(""#msg"").html(""Mileage Claim updated successfully"").css(""color"", ""green"");
                                        }
                                        window.location.href = ""/MileageClaim/Index"";
                                    }
                                },
                                error: function () {
                                    //alert(""Error occurs"");
                                    //FailureToast('Error while creating Mileage Claim');
                                    $(""#msg"").html(""Error while creating Mileage Claim"").css(""color"", ""green"");
                                    window.location.href = ");
                WriteLiteral(@"""/MileageClaim/Index"";
                                }
                            });
                        //}
                        //else {
                        //    //SuccessToast('Mileage Claim added successfully');
                        //    $(""#msg"").html(""Mileage Claim added successfully"").css(""color"", ""green"");
                        //    window.location.href = ""/MileageClaim/Index"";
                        //}

                    },
                    failure: function (response) {
                        //FailureToast('Error while creating Mileage Claim');
                        $(""#msg"").html(""Error while creating Mileage Claim"").css(""color"", ""green"");
                        //$('#result').html(response);
                    }
                });
            }

        }

        function SuccessToast(message) {
            $.toast({
                text: message,
                hideAfter: true,
                position: 'top-right',
                icon: 'success',
         ");
                WriteLiteral(@"       allowToastClose: true,
                hideAfter: 5000,
            });
        }

        function FailureToast(message) {
            $.toast({
                text: message,
                hideAfter: true,
                position: 'top-right',
                icon: 'error',
                allowToastClose: true,
                hideAfter: 5000,
            });
        }

        function getAsDate(day, time) {
            var hours = Number(time.match(/^(\d+)/)[1]);
            var minutes = Number(time.match(/:(\d+)/)[1]);
            var AMPM = time.match(/\s(.*)$/)[1];
            if (AMPM == ""pm"" && hours < 12) hours = hours + 12;
            if (AMPM == ""am"" && hours == 12) hours = hours - 12;
            var sHours = hours.toString();
            var sMinutes = minutes.toString();
            if (hours < 10) sHours = ""0"" + sHours;
            if (minutes < 10) sMinutes = ""0"" + sMinutes;
            time = sHours + "":"" + sMinutes + "":00"";
            var d = new Date(day);
            var n =");
                WriteLiteral(@" d.toISOString().substring(0, 10);
            var newDate = new Date(n + ""T"" + time);
            return newDate;
        }

        function checkValidTimeFormat(timeExact) {
            var amTimeSuffix = ""am"";
            var pmTimeSuffix = ""pm"";
            var timeValue = timeExact.toLowerCase().replace(amTimeSuffix, '').replace(/ /g, '')
                .replace(pmTimeSuffix, '').replace(':', '').replace('.', '');

            //check if timeValue is not a number
            if (isNaN(timeValue)) { return null; }

            var timeExactValue = null;
            //check valid values with length of number supplied
            switch (timeValue.length) {
                case 1:
                case 2:
                    timeExactValue = moment(timeExact, ""hA"").format(""hh:mm A"");
                    break;
                case 3:
                    var newTimeExact = timeValue[0] + '.' + timeValue[1] + timeValue[2] + (timeExact.toLowerCase().indexOf(pmTimeSuffix) > 0 ? pmTimeSuffix : amTimeSuffix);
  ");
                WriteLiteral(@"                  timeExactValue = moment(newTimeExact, ""h.mmA"").format(""hh:mm A"");
                    break;
                case 4:
                    timeExactValue = moment(timeExact, ""hhmmA"").format(""hh:mm A"");
                    break;
            }
            if (timeExactValue == ""Invalid date"") {
                return null;
            }
            return timeExactValue;
        }
    </script>
");
            }
            );
            WriteLiteral("\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<EClaimsWeb.Models.MileageClaimDetailVM> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
