// <auto-generated />
using System;
using EClaimsEntities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EClaimsWeb.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20210826155825_Initial1")]
    partial class Initial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EClaimsEntities.Models.DtApprovalMatrix", b =>
                {
                    b.Property<int>("DTAMID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AMID")
                        .HasColumnType("int");

                    b.Property<string>("AmountFrom")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AmountTo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Approver")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Verifier")
                        .HasColumnType("int");

                    b.HasKey("DTAMID");

                    b.HasIndex("AMID");

                    b.ToTable("DtApprovalMatrix");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtExpenseClaim", b =>
                {
                    b.Property<long>("ECItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("ECID")
                        .HasColumnType("bigint");

                    b.Property<int?>("ExpenseCategoryID")
                        .HasColumnType("int");

                    b.Property<float>("GST")
                        .HasColumnType("real");

                    b.HasKey("ECItemID");

                    b.HasIndex("ECID");

                    b.HasIndex("ExpenseCategoryID");

                    b.ToTable("DtExpenseClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtExpenseClaimFileUpload", b =>
                {
                    b.Property<long>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ECID")
                        .HasColumnType("bigint");

                    b.Property<string>("FileName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FileID");

                    b.HasIndex("ECID");

                    b.ToTable("DtExpenseClaimFileUpload");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtMileageClaim", b =>
                {
                    b.Property<long>("MCItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<DateTime>("DateOfJourney")
                        .HasColumnType("datetime2");

                    b.Property<float>("EndReading")
                        .HasColumnType("real");

                    b.Property<int?>("FacilityID")
                        .HasColumnType("int");

                    b.Property<int>("FromFacilityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("InTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("Kms")
                        .HasColumnType("real");

                    b.Property<long>("MCID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("OutTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<float>("StartReading")
                        .HasColumnType("real");

                    b.Property<int>("ToFacilityID")
                        .HasColumnType("int");

                    b.HasKey("MCItemID");

                    b.HasIndex("FacilityID");

                    b.HasIndex("MCID");

                    b.ToTable("DtMileageClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtMileageClaimFileUpload", b =>
                {
                    b.Property<long>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("MCID")
                        .HasColumnType("bigint");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FileID");

                    b.HasIndex("MCID");

                    b.ToTable("DtMileageClaimFileUpload");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtPVCClaim", b =>
                {
                    b.Property<long>("PVCCItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("ChequeNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExpenseCategoryID")
                        .HasColumnType("int");

                    b.Property<float>("GST")
                        .HasColumnType("real");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("PVCCID")
                        .HasColumnType("bigint");

                    b.Property<string>("Particulars")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Payee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PVCCItemID");

                    b.HasIndex("ExpenseCategoryID");

                    b.HasIndex("PVCCID");

                    b.ToTable("DtPVCClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtPVCClaimFileUpload", b =>
                {
                    b.Property<long>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PVCCID")
                        .HasColumnType("bigint");

                    b.HasKey("FileID");

                    b.HasIndex("PVCCID");

                    b.ToTable("DtPVCClaimFileUpload");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtPVGClaim", b =>
                {
                    b.Property<long>("PVGCItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("ChequeNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExpenseCategoryID")
                        .HasColumnType("int");

                    b.Property<float>("GST")
                        .HasColumnType("real");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("PVGCID")
                        .HasColumnType("bigint");

                    b.Property<string>("Particulars")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Payee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PVGCItemID");

                    b.HasIndex("ExpenseCategoryID");

                    b.HasIndex("PVGCID");

                    b.ToTable("DtPVGClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtPVGClaimFileUpload", b =>
                {
                    b.Property<long>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PVGCID")
                        .HasColumnType("bigint");

                    b.HasKey("FileID");

                    b.HasIndex("PVGCID");

                    b.ToTable("DtPVGClaimFileUpload");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtTBClaim", b =>
                {
                    b.Property<long>("TBCItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ExpenseCategoryID")
                        .HasColumnType("int");

                    b.Property<long>("TBCID")
                        .HasColumnType("bigint");

                    b.HasKey("TBCItemID");

                    b.HasIndex("ExpenseCategoryID");

                    b.HasIndex("TBCID");

                    b.ToTable("DtTBClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtTBClaimFileUpload", b =>
                {
                    b.Property<long>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("TBCID")
                        .HasColumnType("bigint");

                    b.HasKey("FileID");

                    b.HasIndex("TBCID");

                    b.ToTable("DtTBClaimFileUpload");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtUserRoles", b =>
                {
                    b.Property<int>("UserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserRoleID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("DtUserRoles");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstApprovalMatrix", b =>
                {
                    b.Property<int>("AMID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalLevels")
                        .HasColumnType("int");

                    b.Property<bool>("ApprovalRequired")
                        .HasColumnType("bit");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ScreenID")
                        .HasColumnType("int");

                    b.Property<int>("VerificationLevels")
                        .HasColumnType("int");

                    b.HasKey("AMID");

                    b.HasIndex("ScreenID");

                    b.ToTable("MstApprovalMatrix");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstClaimType", b =>
                {
                    b.Property<int>("ClaimTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimTypeID");

                    b.ToTable("MstClaimType");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstCostStructure", b =>
                {
                    b.Property<int>("CostStructureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CostStructure")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CostStructureID");

                    b.ToTable("MstCostStructure");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstCostType", b =>
                {
                    b.Property<int>("CostTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CostType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CostTypeID");

                    b.ToTable("MstCostType");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstDepartment", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("MstDepartment");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstExpenseCategory", b =>
                {
                    b.Property<int>("ExpenseCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("ClaimTypeID")
                        .HasColumnType("int");

                    b.Property<int>("CostStructureID")
                        .HasColumnType("int");

                    b.Property<int>("CostTypeID")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Default")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExpenseCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGSTRequired")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpenseCategoryID");

                    b.HasIndex("ClaimTypeID");

                    b.HasIndex("CostStructureID");

                    b.HasIndex("CostTypeID");

                    b.ToTable("MstExpenseCategory");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstExpenseClaim", b =>
                {
                    b.Property<long>("ECID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Approver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ClaimTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("ECNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("FacilityID")
                        .HasColumnType("int");

                    b.Property<string>("FinalApprover")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<float>("GrandTotal")
                        .HasColumnType("real");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TnC")
                        .HasColumnType("bit");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("Verifier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ECID");

                    b.HasIndex("ClaimTypeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("FacilityID");

                    b.HasIndex("UserID");

                    b.ToTable("MstExpenseClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstExpenseClaimAudit", b =>
                {
                    b.Property<long>("AuditID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AuditBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ECID")
                        .HasColumnType("bigint");

                    b.Property<int>("InstanceID")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SentTo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AuditID");

                    b.HasIndex("ECID");

                    b.ToTable("MstExpenseClaimAudit");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstFacility", b =>
                {
                    b.Property<int>("FacilityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacilityID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("MstFacility");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstMileageClaim", b =>
                {
                    b.Property<long>("MCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Approver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Company")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("FacilityID")
                        .HasColumnType("int");

                    b.Property<string>("FinalApprover")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<float>("GrandTotal")
                        .HasColumnType("real");

                    b.Property<string>("MCNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TnC")
                        .HasColumnType("bit");

                    b.Property<string>("TravelMode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("Verifier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MCID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("FacilityID");

                    b.HasIndex("UserID");

                    b.ToTable("MstMileageClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstMileageClaimAudit", b =>
                {
                    b.Property<long>("AuditID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AuditBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstanceID")
                        .HasColumnType("int");

                    b.Property<long>("MCID")
                        .HasColumnType("bigint");

                    b.Property<string>("Reason")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SentTo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AuditID");

                    b.HasIndex("MCID");

                    b.ToTable("MstMileageClaimAudit");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstPVCClaim", b =>
                {
                    b.Property<long>("PVCCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Approver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Company")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("FacilityID")
                        .HasColumnType("int");

                    b.Property<string>("FinalApprover")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<float>("GrandTotal")
                        .HasColumnType("real");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PVCCNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("TnC")
                        .HasColumnType("bit");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("Verifier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PVCCID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("FacilityID");

                    b.HasIndex("UserID");

                    b.ToTable("MstPVCClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstPVCClaimAudit", b =>
                {
                    b.Property<long>("AuditID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AuditBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstanceID")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SentTo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("TBCID")
                        .HasColumnType("bigint");

                    b.HasKey("AuditID");

                    b.HasIndex("TBCID");

                    b.ToTable("MstPVCClaimAudit");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstPVGClaim", b =>
                {
                    b.Property<long>("PVGCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Approver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Company")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("FacilityID")
                        .HasColumnType("int");

                    b.Property<string>("FinalApprover")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<float>("GrandTotal")
                        .HasColumnType("real");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PVGCNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("TnC")
                        .HasColumnType("bit");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("Verifier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PVGCID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("FacilityID");

                    b.HasIndex("UserID");

                    b.ToTable("MstPVGClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstPVGClaimAudit", b =>
                {
                    b.Property<long>("AuditID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AuditBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstanceID")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SentTo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("TBCID")
                        .HasColumnType("bigint");

                    b.HasKey("AuditID");

                    b.HasIndex("TBCID");

                    b.ToTable("MstPVGClaimAudit");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstRole", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("RoleID");

                    b.ToTable("MstRole");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstScreens", b =>
                {
                    b.Property<int>("ScreenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreenName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ScreenID");

                    b.ToTable("MstScreens");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstTBClaim", b =>
                {
                    b.Property<long>("TBCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Approver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Company")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("FacilityID")
                        .HasColumnType("int");

                    b.Property<string>("FinalApprover")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<float>("GrandTotal")
                        .HasColumnType("real");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("TBCNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("TnC")
                        .HasColumnType("bit");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("Verifier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("TBCID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("FacilityID");

                    b.HasIndex("UserID");

                    b.ToTable("MstTBClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstTBClaimAudit", b =>
                {
                    b.Property<long>("AuditID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AuditBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstanceID")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SentTo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("TBCID")
                        .HasColumnType("bigint");

                    b.HasKey("AuditID");

                    b.HasIndex("TBCID");

                    b.ToTable("MstTBClaimAudit");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstUser", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AuthenticationSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("FacilityID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHOD")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LockoutEndDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("FacilityID");

                    b.ToTable("MstUser");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtApprovalMatrix", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstApprovalMatrix", "MstApprovalMatrix")
                        .WithMany()
                        .HasForeignKey("AMID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstApprovalMatrix");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtExpenseClaim", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstExpenseClaim", "MstExpenseClaim")
                        .WithMany()
                        .HasForeignKey("ECID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EClaimsEntities.Models.MstExpenseCategory", "MstExpenseCategory")
                        .WithMany()
                        .HasForeignKey("ExpenseCategoryID");

                    b.Navigation("MstExpenseCategory");

                    b.Navigation("MstExpenseClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtExpenseClaimFileUpload", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstExpenseClaim", "MstExpenseClaim")
                        .WithMany()
                        .HasForeignKey("ECID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstExpenseClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtMileageClaim", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstFacility", "MstFacility")
                        .WithMany()
                        .HasForeignKey("FacilityID");

                    b.HasOne("EClaimsEntities.Models.MstMileageClaim", "MstMileageClaim")
                        .WithMany()
                        .HasForeignKey("MCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstFacility");

                    b.Navigation("MstMileageClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtMileageClaimFileUpload", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstMileageClaim", "MstMileageClaim")
                        .WithMany()
                        .HasForeignKey("MCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstMileageClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtPVCClaim", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstExpenseCategory", "MstExpenseCategory")
                        .WithMany()
                        .HasForeignKey("ExpenseCategoryID");

                    b.HasOne("EClaimsEntities.Models.MstPVCClaim", "MstPVCClaim")
                        .WithMany()
                        .HasForeignKey("PVCCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstExpenseCategory");

                    b.Navigation("MstPVCClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtPVCClaimFileUpload", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstPVCClaim", "MstPVCClaim")
                        .WithMany()
                        .HasForeignKey("PVCCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstPVCClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtPVGClaim", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstExpenseCategory", "MstExpenseCategory")
                        .WithMany()
                        .HasForeignKey("ExpenseCategoryID");

                    b.HasOne("EClaimsEntities.Models.MstPVGClaim", "MstPVGClaim")
                        .WithMany()
                        .HasForeignKey("PVGCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstExpenseCategory");

                    b.Navigation("MstPVGClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtPVGClaimFileUpload", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstPVGClaim", "MstPVGClaim")
                        .WithMany()
                        .HasForeignKey("PVGCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstPVGClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtTBClaim", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstExpenseCategory", "MstExpenseCategory")
                        .WithMany()
                        .HasForeignKey("ExpenseCategoryID");

                    b.HasOne("EClaimsEntities.Models.MstMileageClaim", "MstTBClaim")
                        .WithMany()
                        .HasForeignKey("TBCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstExpenseCategory");

                    b.Navigation("MstTBClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtTBClaimFileUpload", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstTBClaim", "MstTBClaim")
                        .WithMany()
                        .HasForeignKey("TBCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstTBClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.DtUserRoles", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstRole", "Role")
                        .WithMany("DtUserRoles")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EClaimsEntities.Models.MstUser", "User")
                        .WithMany("DtUserRoles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstApprovalMatrix", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstScreens", "MstScreens")
                        .WithMany()
                        .HasForeignKey("ScreenID");

                    b.Navigation("MstScreens");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstExpenseCategory", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstClaimType", "MstClaimType")
                        .WithMany()
                        .HasForeignKey("ClaimTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EClaimsEntities.Models.MstCostStructure", "MstCostStructure")
                        .WithMany()
                        .HasForeignKey("CostStructureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EClaimsEntities.Models.MstCostType", "MstCostType")
                        .WithMany()
                        .HasForeignKey("CostTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstClaimType");

                    b.Navigation("MstCostStructure");

                    b.Navigation("MstCostType");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstExpenseClaim", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstClaimType", "MstClaimType")
                        .WithMany()
                        .HasForeignKey("ClaimTypeID");

                    b.HasOne("EClaimsEntities.Models.MstDepartment", "MstDepartment")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("EClaimsEntities.Models.MstFacility", "MstFacility")
                        .WithMany()
                        .HasForeignKey("FacilityID");

                    b.HasOne("EClaimsEntities.Models.MstUser", "MstUser")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("MstClaimType");

                    b.Navigation("MstDepartment");

                    b.Navigation("MstFacility");

                    b.Navigation("MstUser");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstExpenseClaimAudit", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstExpenseClaim", "MstExpenseClaim")
                        .WithMany()
                        .HasForeignKey("ECID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstExpenseClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstFacility", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstDepartment", "MstDepartment")
                        .WithMany("Facilities")
                        .HasForeignKey("DepartmentID");

                    b.Navigation("MstDepartment");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstMileageClaim", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstDepartment", "MstDepartment")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("EClaimsEntities.Models.MstFacility", "MstFacility")
                        .WithMany()
                        .HasForeignKey("FacilityID");

                    b.HasOne("EClaimsEntities.Models.MstUser", "MstUser")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("MstDepartment");

                    b.Navigation("MstFacility");

                    b.Navigation("MstUser");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstMileageClaimAudit", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstMileageClaim", "MstMileageClaim")
                        .WithMany()
                        .HasForeignKey("MCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstMileageClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstPVCClaim", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstDepartment", "MstDepartment")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("EClaimsEntities.Models.MstFacility", "MstFacility")
                        .WithMany()
                        .HasForeignKey("FacilityID");

                    b.HasOne("EClaimsEntities.Models.MstUser", "MstUser")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("MstDepartment");

                    b.Navigation("MstFacility");

                    b.Navigation("MstUser");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstPVCClaimAudit", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstPVCClaim", "MstPVCClaim")
                        .WithMany()
                        .HasForeignKey("TBCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstPVCClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstPVGClaim", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstDepartment", "MstDepartment")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("EClaimsEntities.Models.MstFacility", "MstFacility")
                        .WithMany()
                        .HasForeignKey("FacilityID");

                    b.HasOne("EClaimsEntities.Models.MstUser", "MstUser")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("MstDepartment");

                    b.Navigation("MstFacility");

                    b.Navigation("MstUser");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstPVGClaimAudit", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstPVGClaim", "MstPVGClaim")
                        .WithMany()
                        .HasForeignKey("TBCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstPVGClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstTBClaim", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstDepartment", "MstDepartment")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("EClaimsEntities.Models.MstFacility", "MstFacility")
                        .WithMany()
                        .HasForeignKey("FacilityID");

                    b.HasOne("EClaimsEntities.Models.MstUser", "MstUser")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("MstDepartment");

                    b.Navigation("MstFacility");

                    b.Navigation("MstUser");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstTBClaimAudit", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstTBClaim", "MstTBClaim")
                        .WithMany()
                        .HasForeignKey("TBCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MstTBClaim");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstUser", b =>
                {
                    b.HasOne("EClaimsEntities.Models.MstFacility", "MstFacility")
                        .WithMany()
                        .HasForeignKey("FacilityID");

                    b.Navigation("MstFacility");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstDepartment", b =>
                {
                    b.Navigation("Facilities");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstRole", b =>
                {
                    b.Navigation("DtUserRoles");
                });

            modelBuilder.Entity("EClaimsEntities.Models.MstUser", b =>
                {
                    b.Navigation("DtUserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
